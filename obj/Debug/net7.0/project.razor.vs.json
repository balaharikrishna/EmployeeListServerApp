{"SerializedFilePath":"C:\\Users\\hari.b\\source\\repos\\EmployeeInfo\\EmployeeInfo\\obj\\Debug\\net7.0\\project.razor.vs.json","FilePath":"C:\\Users\\hari.b\\source\\repos\\EmployeeInfo\\EmployeeInfo\\EmployeeInfo.csproj","Configuration":{"ConfigurationName":"MVC-3.0","LanguageVersion":"7.0","Extensions":[{"ExtensionName":"MVC-3.0"}]},"ProjectWorkspaceState":{"TagHelpers":[{"HashCode":-487348442,"Kind":"Components.Component","Name":"EmployeeInfo.Pages.AddEmployeeForm","AssemblyName":"EmployeeInfo","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AddEmployeeForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"EditModel","TypeName":"EmployeeInfo.Modals.Employee","Metadata":{"Common.PropertyName":"EditModel","Common.GloballyQualifiedTypeName":"global::EmployeeInfo.Modals.Employee"}},{"Kind":"Components.Component","Name":"OnButtonClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Common.PropertyName":"OnButtonClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"EmployeeInfo.Pages.AddEmployeeForm","Common.TypeNamespace":"EmployeeInfo.Pages","Common.TypeNameIdentifier":"AddEmployeeForm"}},{"HashCode":-828817158,"Kind":"Components.Component","Name":"EmployeeInfo.Pages.AddEmployeeForm","AssemblyName":"EmployeeInfo","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EmployeeInfo.Pages.AddEmployeeForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"EditModel","TypeName":"EmployeeInfo.Modals.Employee","Metadata":{"Common.PropertyName":"EditModel","Common.GloballyQualifiedTypeName":"global::EmployeeInfo.Modals.Employee"}},{"Kind":"Components.Component","Name":"OnButtonClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Common.PropertyName":"OnButtonClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"EmployeeInfo.Pages.AddEmployeeForm","Common.TypeNamespace":"EmployeeInfo.Pages","Common.TypeNameIdentifier":"AddEmployeeForm","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-691946663,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/accordion/\">Bootstrap accordion</see> component.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxAccordion\">https://havit.blazor.eu/components/HxAccordion</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxAccordion"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS classes for the accordion container.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ExpandedItemIds","TypeName":"System.Collections.Generic.List<System.String>","Documentation":"\n            <summary>\n            IDs of the expanded items (if <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.StayOpen\" /> is <code>true</code>, several items can be expanded).\n            Do not use a constant value as it resets the accordion on every roundtrip. Use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.InitialExpandedItemIds\" /> to set the initial state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandedItemIds","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::System.String>"}},{"Kind":"Components.Component","Name":"ExpandedItemIdsChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<System.String>>","Metadata":{"Common.PropertyName":"ExpandedItemIdsChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.List<global::System.String>>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ExpandedItemId","TypeName":"System.String","Documentation":"\n            <summary>\n            ID of the single expanded item (if <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.StayOpen\" /> is <code>true</code>, use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.ExpandedItemIds\" />, several items can be expanded).\n            Do not use a constant value as it reverts the accordion to that item on every roundtrip. Use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.InitialExpandedItemId\" /> to set the initial state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandedItemId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ExpandedItemIdChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Common.PropertyName":"ExpandedItemIdChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"StayOpen","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Set to <c>true</c> to make accordion items stay open when another item is opened.\n            The default is <c>false</c>, opening another item collapses the current item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StayOpen","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InitialExpandedItemId","TypeName":"System.String","Documentation":"\n            <summary>\n            ID of the item you want to expand at the very beginning (overwrites <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.ExpandedItemId\" /> if set).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InitialExpandedItemId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InitialExpandedItemIds","TypeName":"System.Collections.Generic.List<System.String>","Documentation":"\n            <summary>\n            IDs of the items you want to expand at the very beginning (overwrites <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.ExpandedItemIds\" /> if set).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InitialExpandedItemIds","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::System.String>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAccordion"}},{"HashCode":-655911723,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/accordion/\">Bootstrap accordion</see> component.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxAccordion\">https://havit.blazor.eu/components/HxAccordion</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS classes for the accordion container.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ExpandedItemIds","TypeName":"System.Collections.Generic.List<System.String>","Documentation":"\n            <summary>\n            IDs of the expanded items (if <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.StayOpen\" /> is <code>true</code>, several items can be expanded).\n            Do not use a constant value as it resets the accordion on every roundtrip. Use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.InitialExpandedItemIds\" /> to set the initial state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandedItemIds","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::System.String>"}},{"Kind":"Components.Component","Name":"ExpandedItemIdsChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<System.String>>","Metadata":{"Common.PropertyName":"ExpandedItemIdsChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.List<global::System.String>>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ExpandedItemId","TypeName":"System.String","Documentation":"\n            <summary>\n            ID of the single expanded item (if <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.StayOpen\" /> is <code>true</code>, use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.ExpandedItemIds\" />, several items can be expanded).\n            Do not use a constant value as it reverts the accordion to that item on every roundtrip. Use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.InitialExpandedItemId\" /> to set the initial state.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandedItemId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ExpandedItemIdChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Common.PropertyName":"ExpandedItemIdChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"StayOpen","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Set to <c>true</c> to make accordion items stay open when another item is opened.\n            The default is <c>false</c>, opening another item collapses the current item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StayOpen","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InitialExpandedItemId","TypeName":"System.String","Documentation":"\n            <summary>\n            ID of the item you want to expand at the very beginning (overwrites <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.ExpandedItemId\" /> if set).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InitialExpandedItemId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InitialExpandedItemIds","TypeName":"System.Collections.Generic.List<System.String>","Documentation":"\n            <summary>\n            IDs of the items you want to expand at the very beginning (overwrites <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.ExpandedItemIds\" /> if set).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InitialExpandedItemIds","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::System.String>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAccordion","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1512453832,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxAccordion"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAccordion","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2039127346,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAccordion","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":857211502,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Single item for <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxAccordion\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxAccordionItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Clickable header (always visible).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BodyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Body (collapsible).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BodyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            ID of the item (<see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.ExpandedItemId\" />). (Gets generated GUID if not set.)\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnExpanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Raised after the transition to this item (the animation is finished).\n            Is not raised for the initial rendering even if the item is not collapsed (no transition happened).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnExpanded","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnCollapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Raised after the transition from this item (the animation is finished).\n            Is not raised for the initial rendering even if the item is collapsed (no transition happened).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnCollapsed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the accordion item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the accordion item header (<c>.accordion-header</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BodyCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the accordion item body (<c>.accordion-body</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BodyCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAccordionItem"}},{"HashCode":-1344554742,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Single item for <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxAccordion\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Clickable header (always visible).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BodyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Body (collapsible).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BodyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            ID of the item (<see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.ExpandedItemId\" />). (Gets generated GUID if not set.)\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnExpanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Raised after the transition to this item (the animation is finished).\n            Is not raised for the initial rendering even if the item is not collapsed (no transition happened).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnExpanded","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnCollapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Raised after the transition from this item (the animation is finished).\n            Is not raised for the initial rendering even if the item is collapsed (no transition happened).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnCollapsed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the accordion item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the accordion item header (<c>.accordion-header</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BodyCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the accordion item body (<c>.accordion-body</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BodyCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAccordionItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-700055172,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.HeaderTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Clickable header (always visible).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"HxAccordionItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.HeaderTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAccordionItem","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1493014788,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.HeaderTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Clickable header (always visible).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.HeaderTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAccordionItem","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1024113848,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.BodyTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Body (collapsible).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BodyTemplate","ParentTag":"HxAccordionItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.BodyTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAccordionItem","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1793204842,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.BodyTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Body (collapsible).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BodyTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.BodyTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAccordionItem","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1582061897,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAlert","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/alerts/\">Bootstrap alert</see> component.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxAlert\">https://havit.blazor.eu/components/HxAlert</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxAlert"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor","IsEnum":true,"IsEditorRequired":true,"Documentation":"\n            <summary>\n            Alert color (background). Required.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor"}},{"Kind":"Components.Component","Name":"Dismissible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Shows the Close button and allows dismissing the alert.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Dismissible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAlert","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAlert"}},{"HashCode":730864067,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAlert","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/alerts/\">Bootstrap alert</see> component.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxAlert\">https://havit.blazor.eu/components/HxAlert</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxAlert"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor","IsEnum":true,"IsEditorRequired":true,"Documentation":"\n            <summary>\n            Alert color (background). Required.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor"}},{"Kind":"Components.Component","Name":"Dismissible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Shows the Close button and allows dismissing the alert.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Dismissible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAlert","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAlert","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2008328386,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAlert.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxAlert"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAlert.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAlert","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-590150170,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAlert.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxAlert"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAlert.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAlert","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":467312926,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxBadge","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/badge/\">Bootstrap Badge</see> component.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxBadge\">https://havit.blazor.eu/components/HxBadge</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxBadge"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.BadgeSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxBadge.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.BadgeSettings"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Badge color (background).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"TextColor","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Color of badge text. Use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxBadge.Color\" /> for the background color.\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None\" /> (color automatically selected to work with the chosen background color).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextColor","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Havit.Blazor.Components.Web.Bootstrap.BadgeType?","Documentation":"\n            <summary>\n            Badge type - Regular or rounded-pills. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.BadgeType.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.BadgeType?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying HTML element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxBadge","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxBadge"}},{"HashCode":1950414656,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxBadge","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/badge/\">Bootstrap Badge</see> component.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxBadge\">https://havit.blazor.eu/components/HxBadge</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxBadge"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.BadgeSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxBadge.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.BadgeSettings"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Badge color (background).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"TextColor","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Color of badge text. Use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxBadge.Color\" /> for the background color.\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None\" /> (color automatically selected to work with the chosen background color).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextColor","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Havit.Blazor.Components.Web.Bootstrap.BadgeType?","Documentation":"\n            <summary>\n            Badge type - Regular or rounded-pills. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.BadgeType.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.BadgeType?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying HTML element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxBadge","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxBadge","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-816526993,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxBadge.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxBadge"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxBadge.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxBadge","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1117999040,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxBadge.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxBadge"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxBadge.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxBadge","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1203632176,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxButton","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Button (<c>&lt;button type=\"button\"&gt;</c>). See also <see href=\"https://getbootstrap.com/docs/5.3/components/buttons/\">Bootstrap Buttons</see>.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxButton\">https://havit.blazor.eu/components/HxButton</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon to render into the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"IconPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?","Documentation":"\n            <summary>\n            Position of the icon within the button. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement.Start\" /> (configurable through <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Bootstrap button style - theme color.<br />\n            The default is taken from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" /> (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None\" /> if not customized).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSize?","Documentation":"\n            <summary>\n            Button size. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonSize.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSize?"}},{"Kind":"Components.Component","Name":"Outline","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/buttons/#outline-buttons\">Bootstrap \"outline\" button</see> style.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Outline","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the <c>&lt;button /&gt;</c>.<br />\n            When using <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> you might want to use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" /> to get the desired result.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class to be rendered with the button icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Associated <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"FormId","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the form the button belongs to.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FormId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Tooltip text.<br />\n            If set, a <c>span</c> wrapper will be rendered around the <c>&lt;button /&gt;</c>. For most scenarios, you will then use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            Tooltip placement.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement"}},{"Kind":"Components.Component","Name":"TooltipCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipWrapperCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip <c>span</c> wrapper of the <c>&lt;button /&gt;</c>.<br />\n            If set, the <c>span</c> wrapper will be rendered no matter whether the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> text is set or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipWrapperCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation succeeds.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Stops onClick-event propagation. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickStopPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClickPreventDefault","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Prevents the default action for the onclick event. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Spinner","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Sets the state of the embedded <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSpinner\" />.\n            Leave <c>null</c> if you want automated spinner when any of the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers is running.\n            You can set an explicit <c>false</c> constant to disable (override) the spinner automation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Spinner","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"SingleClickProtection","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Sets <c>false</c> if you want to allow multiple <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers in parallel. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SingleClickProtection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>&lt;button&gt;</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxButton","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxButton"}},{"HashCode":2027336513,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxButton","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Button (<c>&lt;button type=\"button\"&gt;</c>). See also <see href=\"https://getbootstrap.com/docs/5.3/components/buttons/\">Bootstrap Buttons</see>.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxButton\">https://havit.blazor.eu/components/HxButton</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon to render into the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"IconPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?","Documentation":"\n            <summary>\n            Position of the icon within the button. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement.Start\" /> (configurable through <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Bootstrap button style - theme color.<br />\n            The default is taken from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" /> (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None\" /> if not customized).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSize?","Documentation":"\n            <summary>\n            Button size. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonSize.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSize?"}},{"Kind":"Components.Component","Name":"Outline","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/buttons/#outline-buttons\">Bootstrap \"outline\" button</see> style.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Outline","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the <c>&lt;button /&gt;</c>.<br />\n            When using <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> you might want to use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" /> to get the desired result.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class to be rendered with the button icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Associated <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"FormId","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the form the button belongs to.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FormId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Tooltip text.<br />\n            If set, a <c>span</c> wrapper will be rendered around the <c>&lt;button /&gt;</c>. For most scenarios, you will then use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            Tooltip placement.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement"}},{"Kind":"Components.Component","Name":"TooltipCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipWrapperCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip <c>span</c> wrapper of the <c>&lt;button /&gt;</c>.<br />\n            If set, the <c>span</c> wrapper will be rendered no matter whether the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> text is set or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipWrapperCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation succeeds.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Stops onClick-event propagation. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickStopPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClickPreventDefault","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Prevents the default action for the onclick event. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Spinner","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Sets the state of the embedded <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSpinner\" />.\n            Leave <c>null</c> if you want automated spinner when any of the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers is running.\n            You can set an explicit <c>false</c> constant to disable (override) the spinner automation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Spinner","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"SingleClickProtection","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Sets <c>false</c> if you want to allow multiple <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers in parallel. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SingleClickProtection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>&lt;button&gt;</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxButton","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-389271388,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxButton.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxButton.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxButton","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-717892974,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxButton.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxButton.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxButton","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1898128822,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxButtonGroup","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap <see href=\"https://getbootstrap.com/docs/5.3/components/button-group/\">Button groups</see>.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxButtonGroup\">https://havit.blazor.eu/components/HxButtonGroup</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxButtonGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonGroupSize","IsEnum":true,"Documentation":"\n            <summary>\n            Size. The default value is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonGroupSize.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonGroupSize"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonGroupOrientation","IsEnum":true,"Documentation":"\n            <summary>\n            Orientation. The default value is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonGroupOrientation.Horizontal\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Orientation","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonGroupOrientation"}},{"Kind":"Components.Component","Name":"AriaLabel","TypeName":"System.String","Documentation":"\n            <summary>\n            Groups should be given an explicit label, as most assistive technologies will otherwise not announce them, despite the presence of the correct role attribute. \n            </summary>\n        ","Metadata":{"Common.PropertyName":"AriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) to be added.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxButtonGroup","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxButtonGroup"}},{"HashCode":-2038546903,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxButtonGroup","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap <see href=\"https://getbootstrap.com/docs/5.3/components/button-group/\">Button groups</see>.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxButtonGroup\">https://havit.blazor.eu/components/HxButtonGroup</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxButtonGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonGroupSize","IsEnum":true,"Documentation":"\n            <summary>\n            Size. The default value is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonGroupSize.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonGroupSize"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonGroupOrientation","IsEnum":true,"Documentation":"\n            <summary>\n            Orientation. The default value is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonGroupOrientation.Horizontal\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Orientation","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonGroupOrientation"}},{"Kind":"Components.Component","Name":"AriaLabel","TypeName":"System.String","Documentation":"\n            <summary>\n            Groups should be given an explicit label, as most assistive technologies will otherwise not announce them, despite the presence of the correct role attribute. \n            </summary>\n        ","Metadata":{"Common.PropertyName":"AriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) to be added.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxButtonGroup","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxButtonGroup","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2064319277,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxButtonGroup.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxButtonGroup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxButtonGroup.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxButtonGroup","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1392973810,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxButtonGroup.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxButtonGroup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxButtonGroup.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxButtonGroup","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2131082679,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxButtonToolbar","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap <see href=\"https://getbootstrap.com/docs/5.3/components/button-group/#button-toolbar\">Button toolbar</see> component.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxButtonToolbar\">https://havit.blazor.eu/components/HxButtonToolbar</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxButtonToolbar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content of the toolbar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AriaLabel","TypeName":"System.String","Documentation":"\n            <summary>\n            An explicit label should be set, as most assistive technologies will not announce them otherwise, despite the presence of the correct role attribute. \n            </summary>\n        ","Metadata":{"Common.PropertyName":"AriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class(es) to add to the HTML element with the <c>.btn-toolbar</c> class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxButtonToolbar","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxButtonToolbar"}},{"HashCode":495586123,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxButtonToolbar","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap <see href=\"https://getbootstrap.com/docs/5.3/components/button-group/#button-toolbar\">Button toolbar</see> component.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxButtonToolbar\">https://havit.blazor.eu/components/HxButtonToolbar</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxButtonToolbar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content of the toolbar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AriaLabel","TypeName":"System.String","Documentation":"\n            <summary>\n            An explicit label should be set, as most assistive technologies will not announce them otherwise, despite the presence of the correct role attribute. \n            </summary>\n        ","Metadata":{"Common.PropertyName":"AriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class(es) to add to the HTML element with the <c>.btn-toolbar</c> class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxButtonToolbar","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxButtonToolbar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-914742936,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxButtonToolbar.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The content of the toolbar.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxButtonToolbar"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxButtonToolbar.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxButtonToolbar","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1751154973,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxButtonToolbar.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The content of the toolbar.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxButtonToolbar"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxButtonToolbar.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxButtonToolbar","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":933131451,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCloseButton","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap <see href=\"https://getbootstrap.com/docs/5.3/components/close-button/\">close-button</see> component.<br />\n            A simple close button for dismissing content such as modals and alerts.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxCloseButton\">https://havit.blazor.eu/components/HxCloseButton</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxCloseButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"White","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Toggles between the light and dark version of the button.\n            The default value is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"White","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon to render into the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"IconPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?","Documentation":"\n            <summary>\n            Position of the icon within the button. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement.Start\" /> (configurable through <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Bootstrap button style - theme color.<br />\n            The default is taken from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" /> (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None\" /> if not customized).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSize?","Documentation":"\n            <summary>\n            Button size. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonSize.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSize?"}},{"Kind":"Components.Component","Name":"Outline","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/buttons/#outline-buttons\">Bootstrap \"outline\" button</see> style.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Outline","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the <c>&lt;button /&gt;</c>.<br />\n            When using <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> you might want to use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" /> to get the desired result.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class to be rendered with the button icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Associated <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"FormId","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the form the button belongs to.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FormId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Tooltip text.<br />\n            If set, a <c>span</c> wrapper will be rendered around the <c>&lt;button /&gt;</c>. For most scenarios, you will then use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            Tooltip placement.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement"}},{"Kind":"Components.Component","Name":"TooltipCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipWrapperCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip <c>span</c> wrapper of the <c>&lt;button /&gt;</c>.<br />\n            If set, the <c>span</c> wrapper will be rendered no matter whether the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> text is set or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipWrapperCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation succeeds.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Stops onClick-event propagation. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickStopPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClickPreventDefault","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Prevents the default action for the onclick event. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Spinner","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Sets the state of the embedded <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSpinner\" />.\n            Leave <c>null</c> if you want automated spinner when any of the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers is running.\n            You can set an explicit <c>false</c> constant to disable (override) the spinner automation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Spinner","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"SingleClickProtection","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Sets <c>false</c> if you want to allow multiple <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers in parallel. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SingleClickProtection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>&lt;button&gt;</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCloseButton","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCloseButton"}},{"HashCode":123226532,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCloseButton","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap <see href=\"https://getbootstrap.com/docs/5.3/components/close-button/\">close-button</see> component.<br />\n            A simple close button for dismissing content such as modals and alerts.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxCloseButton\">https://havit.blazor.eu/components/HxCloseButton</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCloseButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"White","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Toggles between the light and dark version of the button.\n            The default value is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"White","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon to render into the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"IconPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?","Documentation":"\n            <summary>\n            Position of the icon within the button. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement.Start\" /> (configurable through <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Bootstrap button style - theme color.<br />\n            The default is taken from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" /> (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None\" /> if not customized).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSize?","Documentation":"\n            <summary>\n            Button size. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonSize.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSize?"}},{"Kind":"Components.Component","Name":"Outline","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/buttons/#outline-buttons\">Bootstrap \"outline\" button</see> style.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Outline","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the <c>&lt;button /&gt;</c>.<br />\n            When using <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> you might want to use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" /> to get the desired result.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class to be rendered with the button icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Associated <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"FormId","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the form the button belongs to.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FormId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Tooltip text.<br />\n            If set, a <c>span</c> wrapper will be rendered around the <c>&lt;button /&gt;</c>. For most scenarios, you will then use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            Tooltip placement.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement"}},{"Kind":"Components.Component","Name":"TooltipCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipWrapperCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip <c>span</c> wrapper of the <c>&lt;button /&gt;</c>.<br />\n            If set, the <c>span</c> wrapper will be rendered no matter whether the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> text is set or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipWrapperCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation succeeds.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Stops onClick-event propagation. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickStopPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClickPreventDefault","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Prevents the default action for the onclick event. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Spinner","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Sets the state of the embedded <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSpinner\" />.\n            Leave <c>null</c> if you want automated spinner when any of the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers is running.\n            You can set an explicit <c>false</c> constant to disable (override) the spinner automation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Spinner","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"SingleClickProtection","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Sets <c>false</c> if you want to allow multiple <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers in parallel. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SingleClickProtection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>&lt;button&gt;</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCloseButton","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCloseButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":3470101,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCloseButton.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxCloseButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCloseButton.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCloseButton","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-973438680,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCloseButton.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCloseButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCloseButton.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCloseButton","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1680031419,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSubmit","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Button <c>&lt;button type=\"submit\"&gt;</c>.\n            Direct ancestor of <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxButton\" /> with the same API.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxSubmit#HxSubmit\">https://havit.blazor.eu/components/HxSubmit#HxSubmit</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxSubmit"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon to render into the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"IconPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?","Documentation":"\n            <summary>\n            Position of the icon within the button. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement.Start\" /> (configurable through <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Bootstrap button style - theme color.<br />\n            The default is taken from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" /> (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None\" /> if not customized).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSize?","Documentation":"\n            <summary>\n            Button size. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonSize.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSize?"}},{"Kind":"Components.Component","Name":"Outline","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/buttons/#outline-buttons\">Bootstrap \"outline\" button</see> style.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Outline","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the <c>&lt;button /&gt;</c>.<br />\n            When using <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> you might want to use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" /> to get the desired result.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class to be rendered with the button icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Associated <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"FormId","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the form the button belongs to.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FormId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Tooltip text.<br />\n            If set, a <c>span</c> wrapper will be rendered around the <c>&lt;button /&gt;</c>. For most scenarios, you will then use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            Tooltip placement.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement"}},{"Kind":"Components.Component","Name":"TooltipCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipWrapperCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip <c>span</c> wrapper of the <c>&lt;button /&gt;</c>.<br />\n            If set, the <c>span</c> wrapper will be rendered no matter whether the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> text is set or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipWrapperCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation succeeds.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Stops onClick-event propagation. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickStopPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClickPreventDefault","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Prevents the default action for the onclick event. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Spinner","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Sets the state of the embedded <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSpinner\" />.\n            Leave <c>null</c> if you want automated spinner when any of the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers is running.\n            You can set an explicit <c>false</c> constant to disable (override) the spinner automation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Spinner","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"SingleClickProtection","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Sets <c>false</c> if you want to allow multiple <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers in parallel. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SingleClickProtection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>&lt;button&gt;</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSubmit","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSubmit"}},{"HashCode":911883853,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSubmit","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Button <c>&lt;button type=\"submit\"&gt;</c>.\n            Direct ancestor of <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxButton\" /> with the same API.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxSubmit#HxSubmit\">https://havit.blazor.eu/components/HxSubmit#HxSubmit</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxSubmit"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon to render into the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"IconPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?","Documentation":"\n            <summary>\n            Position of the icon within the button. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement.Start\" /> (configurable through <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Bootstrap button style - theme color.<br />\n            The default is taken from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" /> (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None\" /> if not customized).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSize?","Documentation":"\n            <summary>\n            Button size. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonSize.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSize?"}},{"Kind":"Components.Component","Name":"Outline","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/buttons/#outline-buttons\">Bootstrap \"outline\" button</see> style.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Outline","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the <c>&lt;button /&gt;</c>.<br />\n            When using <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> you might want to use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" /> to get the desired result.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class to be rendered with the button icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Associated <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"FormId","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the form the button belongs to.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FormId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Tooltip text.<br />\n            If set, a <c>span</c> wrapper will be rendered around the <c>&lt;button /&gt;</c>. For most scenarios, you will then use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            Tooltip placement.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement"}},{"Kind":"Components.Component","Name":"TooltipCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipWrapperCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip <c>span</c> wrapper of the <c>&lt;button /&gt;</c>.<br />\n            If set, the <c>span</c> wrapper will be rendered no matter whether the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> text is set or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipWrapperCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation succeeds.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Stops onClick-event propagation. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickStopPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClickPreventDefault","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Prevents the default action for the onclick event. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Spinner","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Sets the state of the embedded <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSpinner\" />.\n            Leave <c>null</c> if you want automated spinner when any of the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers is running.\n            You can set an explicit <c>false</c> constant to disable (override) the spinner automation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Spinner","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"SingleClickProtection","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Sets <c>false</c> if you want to allow multiple <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers in parallel. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SingleClickProtection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>&lt;button&gt;</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSubmit","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSubmit","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":3519956,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSubmit.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxSubmit"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSubmit.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSubmit","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":874221336,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSubmit.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSubmit"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSubmit.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSubmit","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1222146523,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCalendar","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Basic calendar building block. Used for <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1\" /> and <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange\" /> implementation.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxCalendar\">https://havit.blazor.eu/components/HxCalendar</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxCalendar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CalendarSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CalendarSettings"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.DateTime?","Documentation":"\n            <summary>\n            Date selected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"\n            <summary>\n            Raised when the selected date changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTime?>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DisplayMonth","TypeName":"System.DateTime","Documentation":"\n            <summary>\n            Month to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"DisplayMonthChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime>","Documentation":"\n            <summary>\n            Raised when the month selection changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayMonthChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTime>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"MinDate","TypeName":"System.DateTime?","Documentation":"\n            <summary>\n            First date selectable from the calendar.<br />\n            Default is <c>1.1.1900</c> (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinDate","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"MaxDate","TypeName":"System.DateTime?","Documentation":"\n            <summary>\n            Last date selectable from the calendar.<br />\n            Default is <c>31.12.2099</c> (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxDate","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"DateCustomizationProvider","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate","Documentation":"\n            <summary>\n            Allows customization of the dates in calendar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DateCustomizationProvider","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"KeyboardNavigation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the keyboard navigation is enabled. When disabled, the calendar renders <c>tabindex=\"-1\"</c> on interactive elements.\n            Default is <c>true</c> (tabindex attribute is not rendered).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"KeyboardNavigation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TimeProvider","TypeName":"System.TimeProvider","Documentation":"\n            <summary>\n            TimeProvider is resolved in the following order:<br />\n            \t1. TimeProvider from this parameter <br />\n            \t2. Settings TimeProvider (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.Settings\" />)<br />\n            \t3. Defaults TimeProvider (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.Defaults\" />)<br />\n            \t4. TimeProvider from DependencyInjection<br />\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TimeProvider","Common.GloballyQualifiedTypeName":"global::System.TimeProvider"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCalendar","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCalendar"}},{"HashCode":851056900,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCalendar","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Basic calendar building block. Used for <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1\" /> and <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange\" /> implementation.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxCalendar\">https://havit.blazor.eu/components/HxCalendar</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCalendar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CalendarSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CalendarSettings"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.DateTime?","Documentation":"\n            <summary>\n            Date selected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"\n            <summary>\n            Raised when the selected date changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTime?>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DisplayMonth","TypeName":"System.DateTime","Documentation":"\n            <summary>\n            Month to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"DisplayMonthChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime>","Documentation":"\n            <summary>\n            Raised when the month selection changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayMonthChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTime>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"MinDate","TypeName":"System.DateTime?","Documentation":"\n            <summary>\n            First date selectable from the calendar.<br />\n            Default is <c>1.1.1900</c> (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinDate","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"MaxDate","TypeName":"System.DateTime?","Documentation":"\n            <summary>\n            Last date selectable from the calendar.<br />\n            Default is <c>31.12.2099</c> (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxDate","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"DateCustomizationProvider","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate","Documentation":"\n            <summary>\n            Allows customization of the dates in calendar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DateCustomizationProvider","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"KeyboardNavigation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the keyboard navigation is enabled. When disabled, the calendar renders <c>tabindex=\"-1\"</c> on interactive elements.\n            Default is <c>true</c> (tabindex attribute is not rendered).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"KeyboardNavigation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TimeProvider","TypeName":"System.TimeProvider","Documentation":"\n            <summary>\n            TimeProvider is resolved in the following order:<br />\n            \t1. TimeProvider from this parameter <br />\n            \t2. Settings TimeProvider (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.Settings\" />)<br />\n            \t3. Defaults TimeProvider (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.Defaults\" />)<br />\n            \t4. TimeProvider from DependencyInjection<br />\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TimeProvider","Common.GloballyQualifiedTypeName":"global::System.TimeProvider"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCalendar","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCalendar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":868183777,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCard","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/card/\">Bootstrap card</see> component.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxCard\">https://havit.blazor.eu/components/HxCard</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxCard"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CardSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxCard.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CardSettings"}},{"Kind":"Components.Component","Name":"ImageSrc","TypeName":"System.String","Documentation":"\n            <summary>\n            Image to be placed in the card. For the image position, see <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxCard.ImagePlacement\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImageSrc","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ImagePlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CardImagePlacement","IsEnum":true,"Documentation":"\n            <summary>\n            Placement of the image. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.CardImagePlacement.Top\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImagePlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CardImagePlacement"}},{"Kind":"Components.Component","Name":"ImageAlt","TypeName":"System.String","Documentation":"\n            <summary>\n            The value of the image's <c>alt</c> attribute.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImageAlt","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ImageWidth","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The value of the image's <c>width</c> attribute.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImageWidth","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ImageHeight","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The value of the image's <c>height</c> attribute.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImageHeight","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The header content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BodyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The body content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BodyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The footer content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The generic card content (outside <c>.card-body</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS classes for the card container.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the header.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BodyCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the body.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BodyCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the footer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying HTML element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCard","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCard"}},{"HashCode":1674815593,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCard","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/card/\">Bootstrap card</see> component.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxCard\">https://havit.blazor.eu/components/HxCard</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCard"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CardSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxCard.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CardSettings"}},{"Kind":"Components.Component","Name":"ImageSrc","TypeName":"System.String","Documentation":"\n            <summary>\n            Image to be placed in the card. For the image position, see <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxCard.ImagePlacement\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImageSrc","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ImagePlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CardImagePlacement","IsEnum":true,"Documentation":"\n            <summary>\n            Placement of the image. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.CardImagePlacement.Top\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImagePlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CardImagePlacement"}},{"Kind":"Components.Component","Name":"ImageAlt","TypeName":"System.String","Documentation":"\n            <summary>\n            The value of the image's <c>alt</c> attribute.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImageAlt","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ImageWidth","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The value of the image's <c>width</c> attribute.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImageWidth","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ImageHeight","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The value of the image's <c>height</c> attribute.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImageHeight","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The header content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BodyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The body content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BodyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The footer content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The generic card content (outside <c>.card-body</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS classes for the card container.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the header.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BodyCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the body.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BodyCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the footer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying HTML element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCard","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCard","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1255398920,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCard.HeaderTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The header content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"HxCard"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCard.HeaderTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCard","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1042899293,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCard.HeaderTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The header content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCard"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCard.HeaderTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCard","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":193557742,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCard.BodyTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The body content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BodyTemplate","ParentTag":"HxCard"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCard.BodyTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCard","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1842620097,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCard.BodyTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The body content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BodyTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCard"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCard.BodyTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCard","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1681914780,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCard.FooterTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The footer content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"HxCard"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCard.FooterTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCard","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-200303789,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCard.FooterTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The footer content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCard"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCard.FooterTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCard","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":474607277,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCard.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The generic card content (outside <c>.card-body</c>).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxCard"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCard.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCard","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1813002744,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCard.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The generic card content (outside <c>.card-body</c>).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCard"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCard.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCard","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":951054964,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCardSubtitle","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap <see href=\"https://getbootstrap.com/docs/5.3/components/card/#titles-text-and-links\">card-subtitle</see> component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxCardSubtitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlElement","TypeName":"System.String","Documentation":"\n            <summary>\n            Underlying HTML element for the card-subtitle. The default is <c>h6</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlElement","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the card-subtitle element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying HTML element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCardSubtitle","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCardSubtitle"}},{"HashCode":-1875203088,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCardSubtitle","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap <see href=\"https://getbootstrap.com/docs/5.3/components/card/#titles-text-and-links\">card-subtitle</see> component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCardSubtitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlElement","TypeName":"System.String","Documentation":"\n            <summary>\n            Underlying HTML element for the card-subtitle. The default is <c>h6</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlElement","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the card-subtitle element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying HTML element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCardSubtitle","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCardSubtitle","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1816324875,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCardSubtitle.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Text content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxCardSubtitle"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCardSubtitle.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCardSubtitle","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2134416238,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCardSubtitle.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Text content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCardSubtitle"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCardSubtitle.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCardSubtitle","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1552070720,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCardText","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap <see href=\"https://getbootstrap.com/docs/5.3/components/card/#titles-text-and-links\">card-text</see> component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxCardText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the card-text element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCardText","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCardText"}},{"HashCode":619205254,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCardText","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap <see href=\"https://getbootstrap.com/docs/5.3/components/card/#titles-text-and-links\">card-text</see> component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCardText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the card-text element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCardText","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCardText","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1850627747,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCardText.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Text content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxCardText"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCardText.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCardText","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1093327454,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCardText.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Text content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCardText"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCardText.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCardText","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1390307009,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCardTitle","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap <see href=\"https://getbootstrap.com/docs/5.3/components/card/#titles-text-and-links\">card-title</see> component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxCardTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlElement","TypeName":"System.String","Documentation":"\n            <summary>\n            Underlying HTML element for the card-title. The default is <c>h5</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlElement","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the card-title element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be applied to the underlying HTML element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCardTitle","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCardTitle"}},{"HashCode":-920867088,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCardTitle","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap <see href=\"https://getbootstrap.com/docs/5.3/components/card/#titles-text-and-links\">card-title</see> component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCardTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Text content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HtmlElement","TypeName":"System.String","Documentation":"\n            <summary>\n            Underlying HTML element for the card-title. The default is <c>h5</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HtmlElement","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the card-title element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be applied to the underlying HTML element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCardTitle","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCardTitle","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":175060946,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCardTitle.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Text content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxCardTitle"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCardTitle.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCardTitle","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1974761068,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCardTitle.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Text content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCardTitle"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCardTitle.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCardTitle","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1422800295,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCarousel","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            A slideshow component for cycling through elements—images or slides of text—like a carousel.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxCarousel\">https://havit.blazor.eu/components/HxCarousel</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxCarousel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content of the carousel.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Carousel CSS class. Added to root div <c>.carousel</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Controls","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Display controls to switch between slides.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Controls","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Indicators","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Display indicators showing which slide is active. Can also be used to switch between slides.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Indicators","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Dark","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Show controls, captions, etc. with dark colors.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Dark","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Crossfade","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Animate slides with a fade transition instead of sliding.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Crossfade","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Interval","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Delay for automatically switching slides. Default is <c>3000 ms</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Interval","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"TouchSwiping","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable swiping left/right on touchscreen devices to move between slides.\n            Default is <c>true</c> (enabled).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TouchSwiping","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnSlide","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.Bootstrap.CarouselSlideEventArgs>","Documentation":"\n            <summary>\n            Is fired when the current slide is changed (at the very start of the sliding transition).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnSlide","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.Bootstrap.CarouselSlideEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSlid","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.Bootstrap.CarouselSlideEventArgs>","Documentation":"\n            <summary>\n            Is fired when the current slide is changed (once the transition is completed).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnSlid","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.Bootstrap.CarouselSlideEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Ride","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CarouselRide","IsEnum":true,"Documentation":"\n            <summary>\n            Carousel ride (autoplay) behavior. Default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.CarouselRide.Carousel\" /> (autoplays the carousel on load).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Ride","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CarouselRide"}},{"Kind":"Components.Component","Name":"Pause","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CarouselPause","IsEnum":true,"Documentation":"\n            <summary>\n            Carousel pause behavior. Default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.CarouselPause.Hover\" /> (carousel will stop sliding on hover).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Pause","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CarouselPause"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCarousel","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCarousel"}},{"HashCode":904987241,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCarousel","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            A slideshow component for cycling through elements—images or slides of text—like a carousel.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxCarousel\">https://havit.blazor.eu/components/HxCarousel</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCarousel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content of the carousel.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Carousel CSS class. Added to root div <c>.carousel</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Controls","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Display controls to switch between slides.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Controls","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Indicators","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Display indicators showing which slide is active. Can also be used to switch between slides.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Indicators","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Dark","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Show controls, captions, etc. with dark colors.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Dark","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Crossfade","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Animate slides with a fade transition instead of sliding.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Crossfade","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Interval","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Delay for automatically switching slides. Default is <c>3000 ms</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Interval","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"TouchSwiping","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable swiping left/right on touchscreen devices to move between slides.\n            Default is <c>true</c> (enabled).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TouchSwiping","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnSlide","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.Bootstrap.CarouselSlideEventArgs>","Documentation":"\n            <summary>\n            Is fired when the current slide is changed (at the very start of the sliding transition).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnSlide","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.Bootstrap.CarouselSlideEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSlid","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.Bootstrap.CarouselSlideEventArgs>","Documentation":"\n            <summary>\n            Is fired when the current slide is changed (once the transition is completed).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnSlid","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.Bootstrap.CarouselSlideEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Ride","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CarouselRide","IsEnum":true,"Documentation":"\n            <summary>\n            Carousel ride (autoplay) behavior. Default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.CarouselRide.Carousel\" /> (autoplays the carousel on load).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Ride","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CarouselRide"}},{"Kind":"Components.Component","Name":"Pause","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CarouselPause","IsEnum":true,"Documentation":"\n            <summary>\n            Carousel pause behavior. Default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.CarouselPause.Hover\" /> (carousel will stop sliding on hover).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Pause","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CarouselPause"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCarousel","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCarousel","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":306582742,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCarousel.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content of the carousel.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxCarousel"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCarousel.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCarousel","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1033556503,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCarousel.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content of the carousel.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCarousel"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCarousel.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCarousel","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1929736865,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCarouselCaption","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Represents a caption for a carousel slide.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxCarouselCaption"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content of the caption.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class for the caption.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCarouselCaption","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCarouselCaption"}},{"HashCode":495457689,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCarouselCaption","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Represents a caption for a carousel slide.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCarouselCaption"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content of the caption.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class for the caption.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCarouselCaption","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCarouselCaption","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1827840542,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCarouselCaption.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The content of the caption.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxCarouselCaption"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCarouselCaption.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCarouselCaption","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1173350671,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCarouselCaption.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The content of the caption.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCarouselCaption"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCarouselCaption.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCarouselCaption","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-890586359,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCarouselItem","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxCarouselItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Active","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Active","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Interval","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Time interval before automatically cycling to the next item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Interval","Common.GloballyQualifiedTypeName":"global::System.Int32?"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCarouselItem","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCarouselItem"}},{"HashCode":1909849299,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCarouselItem","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCarouselItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Active","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Active","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Interval","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Time interval before automatically cycling to the next item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Interval","Common.GloballyQualifiedTypeName":"global::System.Int32?"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCarouselItem","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCarouselItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-956404518,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCarouselItem.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxCarouselItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCarouselItem.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCarouselItem","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":866554936,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCarouselItem.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCarouselItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCarouselItem.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCarouselItem","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1922549853,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxChipGenerator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChipRemoveAction","TypeName":"System.Action<System.Object>","Metadata":{"Common.PropertyName":"ChipRemoveAction","Common.GloballyQualifiedTypeName":"global::System.Action<global::System.Object>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxChipGenerator"}},{"HashCode":-1386412911,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChipRemoveAction","TypeName":"System.Action<System.Object>","Metadata":{"Common.PropertyName":"ChipRemoveAction","Common.GloballyQualifiedTypeName":"global::System.Action<global::System.Object>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxChipGenerator","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1437525256,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxChipGenerator"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxChipGenerator","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1813113172,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxChipGenerator","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-407939245,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxChipList","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Presents a list of chips as badges.<br />\n            Usually used to present filter criteria gathered by <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxFilterForm`1\" />.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxChipList\">https://havit.blazor.eu/components/HxChipList</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxChipList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ChipListSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ChipListSettings"}},{"Kind":"Components.Component","Name":"Chips","TypeName":"System.Collections.Generic.IEnumerable<Havit.Blazor.Components.Web.Bootstrap.ChipItem>","Documentation":"\n            <summary>\n            Chips to be presented.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Chips","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::Havit.Blazor.Components.Web.Bootstrap.ChipItem>"}},{"Kind":"Components.Component","Name":"ChipBadgeSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.BadgeSettings","Documentation":"\n            <summary>\n            Settings for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxBadge\" /> used to render chips.\n            The default brings <c>Color=\"<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.Secondary\" />\".</c>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipBadgeSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.BadgeSettings"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnChipRemoveClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.Bootstrap.ChipItem>","Documentation":"\n            <summary>\n            Called when the chip remove button is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChipRemoveClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.Bootstrap.ChipItem>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnResetClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.Bootstrap.ChipItem>","Documentation":"\n            <summary>\n            Called when the reset button is clicked (when using the ready-made reset button, not the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.ResetButtonTemplate\" /> where you are expected to wire the event on your own).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnResetClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.Bootstrap.ChipItem>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ShowResetButton","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Enables or disables the reset button.\n            The default is <c>false</c> (can be changed with <code>HxChipList.Defaults.ShowResetButton</code>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowResetButton","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ResetButtonText","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the reset button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ResetButtonText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ResetButtonTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Template for the reset button.\n            If used, the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.ResetButtonText\" /> is ignored and the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.OnResetClick\" /> callback is not triggered (you are expected to wire the reset logic on your own).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ResetButtonTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxChipList","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxChipList"}},{"HashCode":-779280198,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxChipList","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Presents a list of chips as badges.<br />\n            Usually used to present filter criteria gathered by <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxFilterForm`1\" />.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxChipList\">https://havit.blazor.eu/components/HxChipList</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxChipList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ChipListSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ChipListSettings"}},{"Kind":"Components.Component","Name":"Chips","TypeName":"System.Collections.Generic.IEnumerable<Havit.Blazor.Components.Web.Bootstrap.ChipItem>","Documentation":"\n            <summary>\n            Chips to be presented.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Chips","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::Havit.Blazor.Components.Web.Bootstrap.ChipItem>"}},{"Kind":"Components.Component","Name":"ChipBadgeSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.BadgeSettings","Documentation":"\n            <summary>\n            Settings for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxBadge\" /> used to render chips.\n            The default brings <c>Color=\"<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.Secondary\" />\".</c>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipBadgeSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.BadgeSettings"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnChipRemoveClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.Bootstrap.ChipItem>","Documentation":"\n            <summary>\n            Called when the chip remove button is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChipRemoveClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.Bootstrap.ChipItem>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnResetClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.Bootstrap.ChipItem>","Documentation":"\n            <summary>\n            Called when the reset button is clicked (when using the ready-made reset button, not the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.ResetButtonTemplate\" /> where you are expected to wire the event on your own).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnResetClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.Bootstrap.ChipItem>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ShowResetButton","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Enables or disables the reset button.\n            The default is <c>false</c> (can be changed with <code>HxChipList.Defaults.ShowResetButton</code>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowResetButton","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ResetButtonText","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the reset button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ResetButtonText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ResetButtonTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Template for the reset button.\n            If used, the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.ResetButtonText\" /> is ignored and the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.OnResetClick\" /> callback is not triggered (you are expected to wire the reset logic on your own).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ResetButtonTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxChipList","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxChipList","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1935207372,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxChipList.ResetButtonTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template for the reset button.\n            If used, the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.ResetButtonText\" /> is ignored and the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.OnResetClick\" /> callback is not triggered (you are expected to wire the reset logic on your own).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ResetButtonTemplate","ParentTag":"HxChipList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxChipList.ResetButtonTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxChipList","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1087779493,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxChipList.ResetButtonTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template for the reset button.\n            If used, the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.ResetButtonText\" /> is ignored and the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.OnResetClick\" /> callback is not triggered (you are expected to wire the reset logic on your own).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ResetButtonTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxChipList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxChipList.ResetButtonTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxChipList","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1505955782,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCollapse","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/collapse/\">Bootstrap 5 Collapse</see> component.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxCollapse\">https://havit.blazor.eu/components/HxCollapse</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxCollapse"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Element ID. To be referenced by <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleButton.CollapseTarget\" />.\n            (Autogenerated GUID if not set explicitly.)\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CollapseDirection","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CollapseDirection","IsEnum":true,"Documentation":"\n            <summary>\n            Direction of the animation.\n            Default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.CollapseDirection.Vertical\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CollapseDirection","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CollapseDirection"}},{"Kind":"Components.Component","Name":"Parent","TypeName":"System.String","Documentation":"\n            <summary>\n            If a parent is provided, then all collapsible elements under the specified parent will be closed when this collapsible item is shown.\n            (Similar to traditional accordion behavior.)\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Parent","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InitiallyExpanded","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Determines whether the collapse will be open or closed (expanded or collapsed) when first rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InitiallyExpanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content of the collapse.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            This event is fired when a collapse element has become visible to the user (will wait for CSS transitions to complete).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            This event is fired when a collapse element has been hidden from the user (will wait for CSS transitions to complete).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>div</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCollapse","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCollapse"}},{"HashCode":2128889764,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCollapse","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/collapse/\">Bootstrap 5 Collapse</see> component.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxCollapse\">https://havit.blazor.eu/components/HxCollapse</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCollapse"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Element ID. To be referenced by <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleButton.CollapseTarget\" />.\n            (Autogenerated GUID if not set explicitly.)\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CollapseDirection","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CollapseDirection","IsEnum":true,"Documentation":"\n            <summary>\n            Direction of the animation.\n            Default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.CollapseDirection.Vertical\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CollapseDirection","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CollapseDirection"}},{"Kind":"Components.Component","Name":"Parent","TypeName":"System.String","Documentation":"\n            <summary>\n            If a parent is provided, then all collapsible elements under the specified parent will be closed when this collapsible item is shown.\n            (Similar to traditional accordion behavior.)\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Parent","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InitiallyExpanded","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Determines whether the collapse will be open or closed (expanded or collapsed) when first rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InitiallyExpanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content of the collapse.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            This event is fired when a collapse element has become visible to the user (will wait for CSS transitions to complete).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            This event is fired when a collapse element has been hidden from the user (will wait for CSS transitions to complete).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>div</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCollapse","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCollapse","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1917982926,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCollapse.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content of the collapse.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxCollapse"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCollapse.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCollapse","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":680742072,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCollapse.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content of the collapse.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCollapse"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCollapse.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCollapse","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1017445972,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleButton","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap Collapse toggle (in the form of a button) which triggers the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse\" /> to toggle.\n            Derived from <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxButton\" /> (including <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" /> inheritance).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxCollapseToggleButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CollapseTarget","TypeName":"System.String","Documentation":"\n            <summary>\n            Target selector of the toggle.\n            Use <c>#id</c> to reference a single <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse\" /> or <c>.class</c> for multiple <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse\" />s.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CollapseTarget","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon to render into the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"IconPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?","Documentation":"\n            <summary>\n            Position of the icon within the button. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement.Start\" /> (configurable through <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Bootstrap button style - theme color.<br />\n            The default is taken from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" /> (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None\" /> if not customized).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSize?","Documentation":"\n            <summary>\n            Button size. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonSize.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSize?"}},{"Kind":"Components.Component","Name":"Outline","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/buttons/#outline-buttons\">Bootstrap \"outline\" button</see> style.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Outline","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the <c>&lt;button /&gt;</c>.<br />\n            When using <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> you might want to use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" /> to get the desired result.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class to be rendered with the button icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Associated <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"FormId","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the form the button belongs to.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FormId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Tooltip text.<br />\n            If set, a <c>span</c> wrapper will be rendered around the <c>&lt;button /&gt;</c>. For most scenarios, you will then use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            Tooltip placement.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement"}},{"Kind":"Components.Component","Name":"TooltipCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipWrapperCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip <c>span</c> wrapper of the <c>&lt;button /&gt;</c>.<br />\n            If set, the <c>span</c> wrapper will be rendered no matter whether the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> text is set or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipWrapperCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation succeeds.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Stops onClick-event propagation. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickStopPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClickPreventDefault","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Prevents the default action for the onclick event. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Spinner","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Sets the state of the embedded <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSpinner\" />.\n            Leave <c>null</c> if you want automated spinner when any of the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers is running.\n            You can set an explicit <c>false</c> constant to disable (override) the spinner automation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Spinner","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"SingleClickProtection","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Sets <c>false</c> if you want to allow multiple <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers in parallel. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SingleClickProtection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>&lt;button&gt;</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleButton","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCollapseToggleButton"}},{"HashCode":516891789,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleButton","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap Collapse toggle (in the form of a button) which triggers the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse\" /> to toggle.\n            Derived from <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxButton\" /> (including <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" /> inheritance).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CollapseTarget","TypeName":"System.String","Documentation":"\n            <summary>\n            Target selector of the toggle.\n            Use <c>#id</c> to reference a single <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse\" /> or <c>.class</c> for multiple <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse\" />s.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CollapseTarget","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon to render into the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"IconPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?","Documentation":"\n            <summary>\n            Position of the icon within the button. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement.Start\" /> (configurable through <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Bootstrap button style - theme color.<br />\n            The default is taken from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" /> (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None\" /> if not customized).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSize?","Documentation":"\n            <summary>\n            Button size. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonSize.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSize?"}},{"Kind":"Components.Component","Name":"Outline","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/buttons/#outline-buttons\">Bootstrap \"outline\" button</see> style.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Outline","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the <c>&lt;button /&gt;</c>.<br />\n            When using <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> you might want to use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" /> to get the desired result.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class to be rendered with the button icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Associated <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"FormId","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the form the button belongs to.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FormId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Tooltip text.<br />\n            If set, a <c>span</c> wrapper will be rendered around the <c>&lt;button /&gt;</c>. For most scenarios, you will then use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            Tooltip placement.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement"}},{"Kind":"Components.Component","Name":"TooltipCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipWrapperCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip <c>span</c> wrapper of the <c>&lt;button /&gt;</c>.<br />\n            If set, the <c>span</c> wrapper will be rendered no matter whether the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> text is set or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipWrapperCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation succeeds.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Stops onClick-event propagation. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickStopPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClickPreventDefault","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Prevents the default action for the onclick event. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Spinner","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Sets the state of the embedded <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSpinner\" />.\n            Leave <c>null</c> if you want automated spinner when any of the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers is running.\n            You can set an explicit <c>false</c> constant to disable (override) the spinner automation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Spinner","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"SingleClickProtection","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Sets <c>false</c> if you want to allow multiple <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers in parallel. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SingleClickProtection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>&lt;button&gt;</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleButton","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCollapseToggleButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":595845804,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleButton.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxCollapseToggleButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleButton.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCollapseToggleButton","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-819011139,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleButton.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleButton.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCollapseToggleButton","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1993981212,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleElement","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap Collapse toggle triggering the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse\" /> to toggle.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxCollapseToggleElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ElementName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the element to render. Default is <c>span</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ElementName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the toggle element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"CollapseTarget","TypeName":"System.String","Documentation":"\n            <summary>\n            Target selector of the toggle.\n            Use <c>#id</c> to reference a single <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse\" /> or <c>.class</c> for multiple <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse\" />s.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CollapseTarget","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleElement","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCollapseToggleElement"}},{"HashCode":-874251984,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleElement","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap Collapse toggle triggering the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse\" /> to toggle.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ElementName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the element to render. Default is <c>span</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ElementName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the toggle element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"CollapseTarget","TypeName":"System.String","Documentation":"\n            <summary>\n            Target selector of the toggle.\n            Use <c>#id</c> to reference a single <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse\" /> or <c>.class</c> for multiple <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse\" />s.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CollapseTarget","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleElement","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCollapseToggleElement","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1217961815,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleElement.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxCollapseToggleElement"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleElement.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCollapseToggleElement","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1313657226,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleElement.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleElement"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleElement.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCollapseToggleElement","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1558381269,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenu","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Ready-made context menu (based on <see href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/\">Bootstrap Dropdown</see>) with built-in support for confirmation messages after clicking on the menu items.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxContextMenu\">https://havit.blazor.eu/components/HxContextMenu</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxContextMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ContextMenuSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ContextMenuSettings"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the context menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DropdownCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the context menu dropdown (container).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropdownCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DropdownMenuCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the context menu dropdown menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropdownMenuCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon carrying the menu (use <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.BootstrapIcon\" /> or any other <see cref=\"T:Havit.Blazor.Components.Web.IconBase\" />).<br />\n            The default is <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.BootstrapIcon.ThreeDotsVertical\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"IconCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the context menu icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DropdownMenuAlignment","TypeName":"Havit.Blazor.Components.Web.Bootstrap.DropdownMenuAlignment?","Documentation":"\n            <summary>\n            Alignment for the context menu dropdown menu.\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.DropdownMenuAlignment.End\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropdownMenuAlignment","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.DropdownMenuAlignment?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Items of the context menu. Use <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem\" /> components.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenu","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxContextMenu"}},{"HashCode":-1351444710,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenu","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Ready-made context menu (based on <see href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/\">Bootstrap Dropdown</see>) with built-in support for confirmation messages after clicking on the menu items.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxContextMenu\">https://havit.blazor.eu/components/HxContextMenu</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ContextMenuSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ContextMenuSettings"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the context menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DropdownCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the context menu dropdown (container).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropdownCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DropdownMenuCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the context menu dropdown menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropdownMenuCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon carrying the menu (use <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.BootstrapIcon\" /> or any other <see cref=\"T:Havit.Blazor.Components.Web.IconBase\" />).<br />\n            The default is <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.BootstrapIcon.ThreeDotsVertical\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"IconCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the context menu icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DropdownMenuAlignment","TypeName":"Havit.Blazor.Components.Web.Bootstrap.DropdownMenuAlignment?","Documentation":"\n            <summary>\n            Alignment for the context menu dropdown menu.\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.DropdownMenuAlignment.End\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropdownMenuAlignment","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.DropdownMenuAlignment?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Items of the context menu. Use <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem\" /> components.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenu","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxContextMenu","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1226476758,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenu.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Items of the context menu. Use <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxContextMenu"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenu.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxContextMenu","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":810710525,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenu.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Items of the context menu. Use <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenu"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenu.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxContextMenu","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1478598661,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxContextMenuItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Item text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Custom item content to be rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Item icon (use <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.BootstrapIcon\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"IconCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the context menu item icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ConfirmationQuestion","TypeName":"System.String","Documentation":"\n            <summary>\n            Displays <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox\" /> to get a confirmation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ConfirmationQuestion","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Item clicked event.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Stop onClick-event propagation. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickStopPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"\n            <summary>\n            Navigation target.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxContextMenuItem"}},{"HashCode":828397707,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Item text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Custom item content to be rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Item icon (use <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.BootstrapIcon\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"IconCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the context menu item icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ConfirmationQuestion","TypeName":"System.String","Documentation":"\n            <summary>\n            Displays <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox\" /> to get a confirmation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ConfirmationQuestion","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Item clicked event.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Stop onClick-event propagation. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickStopPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"\n            <summary>\n            Navigation target.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxContextMenuItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-927330888,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Custom item content to be rendered.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxContextMenuItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxContextMenuItem","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":604701172,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Custom item content to be rendered.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxContextMenuItem","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1367233551,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdown","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/\">Bootstrap 5 Dropdown</see> generic component.<br />\n            For buttons with dropdowns, use the more specific <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownButtonGroup\" />.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxDropdown\">https://havit.blazor.eu/components/HxDropdown</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxDropdown"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Direction","TypeName":"Havit.Blazor.Components.Web.Bootstrap.DropdownDirection","IsEnum":true,"Documentation":"\n            <summary>\n            The direction in which the dropdown is opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Direction","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.DropdownDirection"}},{"Kind":"Components.Component","Name":"AutoClose","TypeName":"Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose","IsEnum":true,"Documentation":"\n            <summary>\n            By default, the dropdown menu is closed when clicking inside or outside the dropdown menu (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose.True\" />).\n            You can use the AutoClose parameter to change this behavior of the dropdown.\n            See <see href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/#auto-close-behavior\">https://getbootstrap.com/docs/5.3/components/dropdowns/#auto-close-behavior</see> for more information.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutoClose","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>div</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdown","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdown"}},{"HashCode":-918756211,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdown","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/\">Bootstrap 5 Dropdown</see> generic component.<br />\n            For buttons with dropdowns, use the more specific <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownButtonGroup\" />.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxDropdown\">https://havit.blazor.eu/components/HxDropdown</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdown"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Direction","TypeName":"Havit.Blazor.Components.Web.Bootstrap.DropdownDirection","IsEnum":true,"Documentation":"\n            <summary>\n            The direction in which the dropdown is opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Direction","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.DropdownDirection"}},{"Kind":"Components.Component","Name":"AutoClose","TypeName":"Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose","IsEnum":true,"Documentation":"\n            <summary>\n            By default, the dropdown menu is closed when clicking inside or outside the dropdown menu (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose.True\" />).\n            You can use the AutoClose parameter to change this behavior of the dropdown.\n            See <see href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/#auto-close-behavior\">https://getbootstrap.com/docs/5.3/components/dropdowns/#auto-close-behavior</see> for more information.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutoClose","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>div</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdown","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdown","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-375555471,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdown.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxDropdown"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdown.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdown","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1520369503,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdown.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxDropdown"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdown.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdown","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1523212387,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownButtonGroup","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/\">Bootstrap 5 Dropdown</see> component for dropdown buttons.<br />\n            For generic dropdowns, use <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxDropdown\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxDropdownButtonGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Split","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Set <c>true</c> to create a <a href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/#split-button\">split dropdown</a>\n            (using a <c>btn-group</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Split","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"Havit.Blazor.Components.Web.Bootstrap.DropdownDirection","IsEnum":true,"Documentation":"\n            <summary>\n            The direction in which the dropdown is opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Direction","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.DropdownDirection"}},{"Kind":"Components.Component","Name":"AutoClose","TypeName":"Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose","IsEnum":true,"Documentation":"\n            <summary>\n            By default, the dropdown menu is closed when clicking inside or outside the dropdown menu (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose.True\" />).\n            You can use the AutoClose parameter to change this behavior of the dropdown.\n            See <see href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/#auto-close-behavior\">https://getbootstrap.com/docs/5.3/components/dropdowns/#auto-close-behavior</see> for more information.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutoClose","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>div</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownButtonGroup","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownButtonGroup"}},{"HashCode":1146429786,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownButtonGroup","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/\">Bootstrap 5 Dropdown</see> component for dropdown buttons.<br />\n            For generic dropdowns, use <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxDropdown\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownButtonGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Split","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Set <c>true</c> to create a <a href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/#split-button\">split dropdown</a>\n            (using a <c>btn-group</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Split","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"Havit.Blazor.Components.Web.Bootstrap.DropdownDirection","IsEnum":true,"Documentation":"\n            <summary>\n            The direction in which the dropdown is opened.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Direction","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.DropdownDirection"}},{"Kind":"Components.Component","Name":"AutoClose","TypeName":"Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose","IsEnum":true,"Documentation":"\n            <summary>\n            By default, the dropdown menu is closed when clicking inside or outside the dropdown menu (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose.True\" />).\n            You can use the AutoClose parameter to change this behavior of the dropdown.\n            See <see href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/#auto-close-behavior\">https://getbootstrap.com/docs/5.3/components/dropdowns/#auto-close-behavior</see> for more information.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutoClose","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>div</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownButtonGroup","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownButtonGroup","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-687780475,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownButtonGroup.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxDropdownButtonGroup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownButtonGroup.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownButtonGroup","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":385666927,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownButtonGroup.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownButtonGroup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownButtonGroup.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownButtonGroup","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1693071781,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Custom dropdown content for <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxDropdown\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxDropdownContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Alignment","TypeName":"Havit.Blazor.Components.Web.Bootstrap.DropdownMenuAlignment?","Metadata":{"Common.PropertyName":"Alignment","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.DropdownMenuAlignment?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be applied to an underlying <c>ul</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownContent"}},{"HashCode":-2094478390,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Custom dropdown content for <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxDropdown\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Alignment","TypeName":"Havit.Blazor.Components.Web.Bootstrap.DropdownMenuAlignment?","Metadata":{"Common.PropertyName":"Alignment","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.DropdownMenuAlignment?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be applied to an underlying <c>ul</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1274727897,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownContent.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxDropdownContent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownContent.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1122628634,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownContent.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownContent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownContent.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1881982345,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownDivider","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Divider for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxDropdownDivider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the underlying <c>li&gt;hr</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContainerCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the underlying <c>li</c> container (wrapping the main <c>hr</c> inside).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContainerCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownDivider","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownDivider"}},{"HashCode":390321055,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownDivider","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Divider for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownDivider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the underlying <c>li&gt;hr</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContainerCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the underlying <c>li</c> container (wrapping the main <c>hr</c> inside).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContainerCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownDivider","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownDivider","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1137895082,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownHeader","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/#headers\">Dropdown menu header</see> for <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxDropdownHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownHeader","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownHeader"}},{"HashCode":207216746,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownHeader","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/#headers\">Dropdown menu header</see> for <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownHeader","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownHeader","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":762860802,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownHeader.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxDropdownHeader"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownHeader.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1054038002,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownHeader.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownHeader"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownHeader.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1658374410,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItem","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Generic item for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxDropdownItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the underlying <c>li&gt;span</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContainerCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the underlying <c>li</c> container (wrapping the main <c>span</c> inside).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContainerCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised when the item is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto the underlying <c>li&gt;span</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItem","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownItem"}},{"HashCode":-2093071280,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItem","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Generic item for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the underlying <c>li&gt;span</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContainerCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the underlying <c>li</c> container (wrapping the main <c>span</c> inside).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContainerCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised when the item is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto the underlying <c>li&gt;span</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItem","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-601696133,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItem.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxDropdownItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItem.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownItem","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1738420055,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItem.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItem.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownItem","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1135078219,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\" /> item for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxDropdownItemNavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"\n            <summary>\n            Navigation target.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch?","Documentation":"\n            <summary>\n            URL matching behavior for the underlying <see cref=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\" />.\n            The default is <see cref=\"F:Microsoft.AspNetCore.Components.Routing.NavLinkMatch.Prefix\" />.\n            You can set the value to <c>null</c> to disable the matching.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch?"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised when the item is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContainerCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the underlying <c>li</c> container (wrapping the main <c>a</c> inside).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContainerCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <see cref=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\" /> component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownItemNavLink"}},{"HashCode":-1938129658,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\" /> item for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"\n            <summary>\n            Navigation target.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch?","Documentation":"\n            <summary>\n            URL matching behavior for the underlying <see cref=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\" />.\n            The default is <see cref=\"F:Microsoft.AspNetCore.Components.Routing.NavLinkMatch.Prefix\" />.\n            You can set the value to <c>null</c> to disable the matching.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch?"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised when the item is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContainerCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the underlying <c>li</c> container (wrapping the main <c>a</c> inside).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContainerCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <see cref=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\" /> component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownItemNavLink","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-914422367,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxDropdownItemNavLink"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownItemNavLink","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2092858690,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownItemNavLink","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":216554724,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemText","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Text item for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxDropdownItemText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContainerCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the underlying <c>li</c> container (wrapping the main <c>span</c> inside).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContainerCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemText","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownItemText"}},{"HashCode":1866488749,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemText","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Text item for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContainerCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the underlying <c>li</c> container (wrapping the main <c>span</c> inside).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContainerCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemText","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownItemText","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1677300621,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemText.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxDropdownItemText"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemText.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownItemText","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":682282119,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemText.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemText"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemText.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownItemText","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":305990231,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap Dropdown menu which opens when triggered.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxDropdownMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Alignment","TypeName":"Havit.Blazor.Components.Web.Bootstrap.DropdownMenuAlignment?","Metadata":{"Common.PropertyName":"Alignment","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.DropdownMenuAlignment?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be applied to an underlying <c>ul</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownMenu"}},{"HashCode":-250818211,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap Dropdown menu which opens when triggered.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Alignment","TypeName":"Havit.Blazor.Components.Web.Bootstrap.DropdownMenuAlignment?","Metadata":{"Common.PropertyName":"Alignment","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.DropdownMenuAlignment?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be applied to an underlying <c>ul</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownMenu","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1681165988,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxDropdownMenu"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownMenu","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1061803069,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownMenu","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1323760568,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/\">Bootstrap Dropdown</see> toggle button which triggers the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownButtonGroup\" /> to open.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxDropdownToggleButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DropdownOffset","TypeName":"(System.Int32 Skidding, System.Int32 Distance)?","Documentation":"\n            <summary>\n            Offset <c>(<see href=\"https://popper.js.org/docs/v2/modifiers/offset/#skidding-1\">skidding</see>, <see href=\"https://popper.js.org/docs/v2/modifiers/offset/#distance-1\">distance</see>)</c>\n            of the dropdown relative to its target.  Default is <c>(0, 2)</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropdownOffset","Common.GloballyQualifiedTypeName":"(global::System.Int32 Skidding, global::System.Int32 Distance)?"}},{"Kind":"Components.Component","Name":"DropdownReference","TypeName":"System.String","Documentation":"\n            <summary>\n            Reference element of the dropdown menu. Accepts the values of <c>toggle</c> (default), <c>parent</c>,\n            an HTMLElement reference (e.g. <c>#id</c>) or an object providing <c>getBoundingClientRect</c>.\n            For more information, refer to Popper's <see href=\"https://popper.js.org/docs/v2/constructors/#createpopper\">constructor docs</see>\n            and <see href=\"https://popper.js.org/docs/v2/virtual-elements/\">virtual element docs</see>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropdownReference","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fired when the dropdown has been made visible to the user and CSS transitions have completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fired when the dropdown has finished being hidden from the user and CSS transitions have completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AutoClose","TypeName":"Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose?","Documentation":"\n            <summary>\n            By default, the dropdown menu is closed when clicking inside or outside the dropdown menu (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose.True\" />).\n            You can use the AutoClose parameter to change this behavior of the dropdown.\n            <see href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/#auto-close-behavior\">https://getbootstrap.com/docs/5.3/components/dropdowns/#auto-close-behavior</see>.\n            The parameter can be used to override the settings of the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.DropdownContainer\" /> component or to specify the auto-close behavior when the component is not used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutoClose","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose?"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon to render into the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"IconPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?","Documentation":"\n            <summary>\n            Position of the icon within the button. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement.Start\" /> (configurable through <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Bootstrap button style - theme color.<br />\n            The default is taken from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" /> (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None\" /> if not customized).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSize?","Documentation":"\n            <summary>\n            Button size. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonSize.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSize?"}},{"Kind":"Components.Component","Name":"Outline","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/buttons/#outline-buttons\">Bootstrap \"outline\" button</see> style.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Outline","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the <c>&lt;button /&gt;</c>.<br />\n            When using <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> you might want to use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" /> to get the desired result.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class to be rendered with the button icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Associated <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"FormId","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the form the button belongs to.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FormId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Tooltip text.<br />\n            If set, a <c>span</c> wrapper will be rendered around the <c>&lt;button /&gt;</c>. For most scenarios, you will then use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            Tooltip placement.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement"}},{"Kind":"Components.Component","Name":"TooltipCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipWrapperCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip <c>span</c> wrapper of the <c>&lt;button /&gt;</c>.<br />\n            If set, the <c>span</c> wrapper will be rendered no matter whether the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> text is set or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipWrapperCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation succeeds.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Stops onClick-event propagation. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickStopPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClickPreventDefault","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Prevents the default action for the onclick event. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Spinner","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Sets the state of the embedded <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSpinner\" />.\n            Leave <c>null</c> if you want automated spinner when any of the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers is running.\n            You can set an explicit <c>false</c> constant to disable (override) the spinner automation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Spinner","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"SingleClickProtection","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Sets <c>false</c> if you want to allow multiple <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers in parallel. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SingleClickProtection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>&lt;button&gt;</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownToggleButton"}},{"HashCode":1795574702,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/\">Bootstrap Dropdown</see> toggle button which triggers the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownButtonGroup\" /> to open.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DropdownOffset","TypeName":"(System.Int32 Skidding, System.Int32 Distance)?","Documentation":"\n            <summary>\n            Offset <c>(<see href=\"https://popper.js.org/docs/v2/modifiers/offset/#skidding-1\">skidding</see>, <see href=\"https://popper.js.org/docs/v2/modifiers/offset/#distance-1\">distance</see>)</c>\n            of the dropdown relative to its target.  Default is <c>(0, 2)</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropdownOffset","Common.GloballyQualifiedTypeName":"(global::System.Int32 Skidding, global::System.Int32 Distance)?"}},{"Kind":"Components.Component","Name":"DropdownReference","TypeName":"System.String","Documentation":"\n            <summary>\n            Reference element of the dropdown menu. Accepts the values of <c>toggle</c> (default), <c>parent</c>,\n            an HTMLElement reference (e.g. <c>#id</c>) or an object providing <c>getBoundingClientRect</c>.\n            For more information, refer to Popper's <see href=\"https://popper.js.org/docs/v2/constructors/#createpopper\">constructor docs</see>\n            and <see href=\"https://popper.js.org/docs/v2/virtual-elements/\">virtual element docs</see>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropdownReference","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fired when the dropdown has been made visible to the user and CSS transitions have completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fired when the dropdown has finished being hidden from the user and CSS transitions have completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AutoClose","TypeName":"Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose?","Documentation":"\n            <summary>\n            By default, the dropdown menu is closed when clicking inside or outside the dropdown menu (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose.True\" />).\n            You can use the AutoClose parameter to change this behavior of the dropdown.\n            <see href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/#auto-close-behavior\">https://getbootstrap.com/docs/5.3/components/dropdowns/#auto-close-behavior</see>.\n            The parameter can be used to override the settings of the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.DropdownContainer\" /> component or to specify the auto-close behavior when the component is not used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutoClose","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose?"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon to render into the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"IconPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?","Documentation":"\n            <summary>\n            Position of the icon within the button. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement.Start\" /> (configurable through <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Bootstrap button style - theme color.<br />\n            The default is taken from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" /> (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None\" /> if not customized).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSize?","Documentation":"\n            <summary>\n            Button size. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonSize.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSize?"}},{"Kind":"Components.Component","Name":"Outline","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/buttons/#outline-buttons\">Bootstrap \"outline\" button</see> style.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Outline","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the <c>&lt;button /&gt;</c>.<br />\n            When using <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> you might want to use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" /> to get the desired result.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class to be rendered with the button icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Associated <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"FormId","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the form the button belongs to.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FormId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Tooltip text.<br />\n            If set, a <c>span</c> wrapper will be rendered around the <c>&lt;button /&gt;</c>. For most scenarios, you will then use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            Tooltip placement.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement"}},{"Kind":"Components.Component","Name":"TooltipCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipWrapperCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip <c>span</c> wrapper of the <c>&lt;button /&gt;</c>.<br />\n            If set, the <c>span</c> wrapper will be rendered no matter whether the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> text is set or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipWrapperCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation succeeds.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Stops onClick-event propagation. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickStopPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClickPreventDefault","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Prevents the default action for the onclick event. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Spinner","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Sets the state of the embedded <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSpinner\" />.\n            Leave <c>null</c> if you want automated spinner when any of the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers is running.\n            You can set an explicit <c>false</c> constant to disable (override) the spinner automation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Spinner","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"SingleClickProtection","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Sets <c>false</c> if you want to allow multiple <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers in parallel. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SingleClickProtection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>&lt;button&gt;</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownToggleButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-388277288,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxDropdownToggleButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownToggleButton","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1088566870,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownToggleButton","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1098364241,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/\">Bootstrap Dropdown</see> toggle button which triggers the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxDropdown\" /> to open.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxDropdownToggleElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ElementName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the element to render. Default is <c>span</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ElementName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Caret","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether to display caret in the toggle.<br />\n            Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Caret","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DropdownReference","TypeName":"System.String","Documentation":"\n            <summary>\n            Reference element of the dropdown menu. Accepts the values of <c>toggle</c> (default), <c>parent</c>,\n            an HTMLElement reference (e.g. <c>#id</c>) or an object providing <c>getBoundingClientRect</c>.\n            For more information, refer to Popper's <see href=\"https://popper.js.org/docs/v2/constructors/#createpopper\">constructor docs</see>\n            and <see href=\"https://popper.js.org/docs/v2/virtual-elements/\">virtual element docs</see>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropdownReference","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DropdownOffset","TypeName":"(System.Int32 Skidding, System.Int32 Distance)?","Documentation":"\n            <summary>\n            Offset <c>(<see href=\"https://popper.js.org/docs/v2/modifiers/offset/#skidding-1\">skidding</see>, <see href=\"https://popper.js.org/docs/v2/modifiers/offset/#distance-1\">distance</see>)</c>\n            of the dropdown relative to its target. Default is <c>(0, 2)</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropdownOffset","Common.GloballyQualifiedTypeName":"(global::System.Int32 Skidding, global::System.Int32 Distance)?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the toggle element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoClose","TypeName":"Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose?","Documentation":"\n            <summary>\n            By default, the dropdown menu is closed when clicking inside or outside the dropdown menu (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose.True\" />).\n            You can use the AutoClose parameter to change this behavior of the dropdown.\n            <see href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/#auto-close-behavior\">https://getbootstrap.com/docs/5.3/components/dropdowns/#auto-close-behavior</see>.\n            The parameter can be used to override the settings of the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.DropdownContainer\" /> component or to specify the auto-close behavior when the component is not used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutoClose","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fired when the dropdown has been made visible to the user and CSS transitions have completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fired when the dropdown has finished being hidden from the user and CSS transitions have completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Value for cases when the dropdown is used as an <code>input</code> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Raised when the value changes (binds to <code>onchange</code> input event).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownToggleElement"}},{"HashCode":-1093161405,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/\">Bootstrap Dropdown</see> toggle button which triggers the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxDropdown\" /> to open.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ElementName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the element to render. Default is <c>span</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ElementName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Caret","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether to display caret in the toggle.<br />\n            Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Caret","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DropdownReference","TypeName":"System.String","Documentation":"\n            <summary>\n            Reference element of the dropdown menu. Accepts the values of <c>toggle</c> (default), <c>parent</c>,\n            an HTMLElement reference (e.g. <c>#id</c>) or an object providing <c>getBoundingClientRect</c>.\n            For more information, refer to Popper's <see href=\"https://popper.js.org/docs/v2/constructors/#createpopper\">constructor docs</see>\n            and <see href=\"https://popper.js.org/docs/v2/virtual-elements/\">virtual element docs</see>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropdownReference","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DropdownOffset","TypeName":"(System.Int32 Skidding, System.Int32 Distance)?","Documentation":"\n            <summary>\n            Offset <c>(<see href=\"https://popper.js.org/docs/v2/modifiers/offset/#skidding-1\">skidding</see>, <see href=\"https://popper.js.org/docs/v2/modifiers/offset/#distance-1\">distance</see>)</c>\n            of the dropdown relative to its target. Default is <c>(0, 2)</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropdownOffset","Common.GloballyQualifiedTypeName":"(global::System.Int32 Skidding, global::System.Int32 Distance)?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the toggle element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoClose","TypeName":"Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose?","Documentation":"\n            <summary>\n            By default, the dropdown menu is closed when clicking inside or outside the dropdown menu (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose.True\" />).\n            You can use the AutoClose parameter to change this behavior of the dropdown.\n            <see href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/#auto-close-behavior\">https://getbootstrap.com/docs/5.3/components/dropdowns/#auto-close-behavior</see>.\n            The parameter can be used to override the settings of the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.DropdownContainer\" /> component or to specify the auto-close behavior when the component is not used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutoClose","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fired when the dropdown has been made visible to the user and CSS transitions have completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fired when the dropdown has finished being hidden from the user and CSS transitions have completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Value for cases when the dropdown is used as an <code>input</code> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Raised when the value changes (binds to <code>onchange</code> input event).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownToggleElement","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2014649189,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxDropdownToggleElement"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownToggleElement","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1035535574,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownToggleElement","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-824863848,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputFile","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Wraps <see cref=\"T:Havit.Blazor.Components.Web.HxInputFileCore\" /> as a Bootstrap form control (including <c>Label</c> etc.)<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxInputFile\">https://havit.blazor.eu/components/HxInputFile</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputFile"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputFileSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputFileSettings"}},{"Kind":"Components.Component","Name":"UploadUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            URL of the server endpoint receiving the files.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"UploadUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChange","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnProgress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.UploadProgressEventArgs>","Documentation":"\n            <summary>\n            Raised during running file upload (the frequency depends on browser implementation).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnProgress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.UploadProgressEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFileUploaded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.FileUploadedEventArgs>","Documentation":"\n            <summary>\n            Raised after a file is uploaded (for every single file separately).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnFileUploaded","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.FileUploadedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUploadCompleted","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.UploadCompletedEventArgs>","Documentation":"\n            <summary>\n            Raised when all files are uploaded (after all <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.OnFileUploaded\" /> events).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnUploadCompleted","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.UploadCompletedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Multiple","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Single <c>false</c> or multiple <c>true</c> files upload.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Multiple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxParallelUploads","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Maximum number of concurrent uploads. The default is <c>6</c> (from <see cref=\"T:Havit.Blazor.Components.Web.HxInputFileCore\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxParallelUploads","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Accept","TypeName":"System.String","Documentation":"\n            <summary>\n            Takes as its value a comma-separated list of one or more file types, or unique file type specifiers, describing which file types to allow.\n            <see href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept\">MDN Web Docs - HTML attribute: accept</see>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Accept","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxFileSize","TypeName":"System.Int64?","Documentation":"\n            <summary>\n            The maximum file size in bytes.\n            When exceeded, the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.OnFileUploaded\" /> returns <c>413-RequestEntityTooLarge</c> as <see cref=\"P:Havit.Blazor.Components.Web.FileUploadedEventArgs.ResponseStatus\" />.\n            The default is <c>null</c> (unlimited).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxFileSize","Common.GloballyQualifiedTypeName":"global::System.Int64?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            Label to render before input (or after input for Checkbox).\t\t\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Label to render before input (or after input for Checkbox).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            Hint to render after input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Hint to render after input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputFile","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputFile"}},{"HashCode":1927437687,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputFile","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Wraps <see cref=\"T:Havit.Blazor.Components.Web.HxInputFileCore\" /> as a Bootstrap form control (including <c>Label</c> etc.)<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxInputFile\">https://havit.blazor.eu/components/HxInputFile</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputFile"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputFileSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputFileSettings"}},{"Kind":"Components.Component","Name":"UploadUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            URL of the server endpoint receiving the files.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"UploadUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChange","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnProgress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.UploadProgressEventArgs>","Documentation":"\n            <summary>\n            Raised during running file upload (the frequency depends on browser implementation).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnProgress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.UploadProgressEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFileUploaded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.FileUploadedEventArgs>","Documentation":"\n            <summary>\n            Raised after a file is uploaded (for every single file separately).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnFileUploaded","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.FileUploadedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUploadCompleted","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.UploadCompletedEventArgs>","Documentation":"\n            <summary>\n            Raised when all files are uploaded (after all <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.OnFileUploaded\" /> events).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnUploadCompleted","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.UploadCompletedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Multiple","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Single <c>false</c> or multiple <c>true</c> files upload.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Multiple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxParallelUploads","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Maximum number of concurrent uploads. The default is <c>6</c> (from <see cref=\"T:Havit.Blazor.Components.Web.HxInputFileCore\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxParallelUploads","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Accept","TypeName":"System.String","Documentation":"\n            <summary>\n            Takes as its value a comma-separated list of one or more file types, or unique file type specifiers, describing which file types to allow.\n            <see href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept\">MDN Web Docs - HTML attribute: accept</see>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Accept","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxFileSize","TypeName":"System.Int64?","Documentation":"\n            <summary>\n            The maximum file size in bytes.\n            When exceeded, the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.OnFileUploaded\" /> returns <c>413-RequestEntityTooLarge</c> as <see cref=\"P:Havit.Blazor.Components.Web.FileUploadedEventArgs.ResponseStatus\" />.\n            The default is <c>null</c> (unlimited).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxFileSize","Common.GloballyQualifiedTypeName":"global::System.Int64?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            Label to render before input (or after input for Checkbox).\t\t\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Label to render before input (or after input for Checkbox).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            Hint to render after input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Hint to render after input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputFile","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputFile","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2050424687,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputFile.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Label to render before input (or after input for Checkbox).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"HxInputFile"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputFile.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputFile","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":229898636,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputFile.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Label to render before input (or after input for Checkbox).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputFile"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputFile.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputFile","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":539036567,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputFile.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Hint to render after input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"HxInputFile"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputFile.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputFile","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1970530562,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputFile.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Hint to render after input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputFile"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputFile.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputFile","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":466531551,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Ready-made UX for drag&amp;drop file upload.\n            For custom drag&amp;drop UX, use <see cref=\"T:Havit.Blazor.Components.Web.HxInputFileCore\" /> and <see href=\"https://github.com/havit/Havit.Blazor/blob/728567c9c83a0b4ab7fe2e031bf1ff378f1b1ce7/Havit.Blazor.Components.Web.Bootstrap/Files/HxInputFileDropZone.razor.css#L20-L26\">a little bit of HTML/CSS</see>.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxInputFileDropZone\">https://havit.blazor.eu/components/HxInputFileDropZone</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputFileDropZone"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"UploadUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            URL of the server endpoint receiving the files.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"UploadUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChange","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnProgress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.UploadProgressEventArgs>","Documentation":"\n            <summary>\n            Raised during running file upload (the frequency depends on browser implementation).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnProgress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.UploadProgressEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFileUploaded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.FileUploadedEventArgs>","Documentation":"\n            <summary>\n            Raised after a file is uploaded (for every single file separately).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnFileUploaded","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.FileUploadedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUploadCompleted","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.UploadCompletedEventArgs>","Documentation":"\n            <summary>\n            Raised when all files are uploaded (after all <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.OnFileUploaded\" /> events).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnUploadCompleted","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.UploadCompletedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Multiple","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Single <c>false</c> or multiple <c>true</c> files upload.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Multiple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxFileSize","TypeName":"System.Int64?","Documentation":"\n            <summary>\n            The maximum file size in bytes.\n            When exceeded, the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.OnFileUploaded\" /> returns <c>413-RequestEntityTooLarge</c> as <see cref=\"P:Havit.Blazor.Components.Web.FileUploadedEventArgs.ResponseStatus\" />.\n            Default is <c>null</c> (unlimited).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxFileSize","Common.GloballyQualifiedTypeName":"global::System.Int64?"}},{"Kind":"Components.Component","Name":"Accept","TypeName":"System.String","Documentation":"\n            <summary>\n            Takes as its value a comma-separated list of one or more file types, or unique file type specifiers, describing which file types to allow.\n            <see href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept\">MDN Web Docs - HTML attribute: accept</see>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Accept","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NoFilesTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content to render when no files are picked. Default content is displayed when not set.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoFilesTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputFileDropZone"}},{"HashCode":-767814019,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Ready-made UX for drag&amp;drop file upload.\n            For custom drag&amp;drop UX, use <see cref=\"T:Havit.Blazor.Components.Web.HxInputFileCore\" /> and <see href=\"https://github.com/havit/Havit.Blazor/blob/728567c9c83a0b4ab7fe2e031bf1ff378f1b1ce7/Havit.Blazor.Components.Web.Bootstrap/Files/HxInputFileDropZone.razor.css#L20-L26\">a little bit of HTML/CSS</see>.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxInputFileDropZone\">https://havit.blazor.eu/components/HxInputFileDropZone</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"UploadUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            URL of the server endpoint receiving the files.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"UploadUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChange","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnProgress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.UploadProgressEventArgs>","Documentation":"\n            <summary>\n            Raised during running file upload (the frequency depends on browser implementation).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnProgress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.UploadProgressEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFileUploaded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.FileUploadedEventArgs>","Documentation":"\n            <summary>\n            Raised after a file is uploaded (for every single file separately).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnFileUploaded","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.FileUploadedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUploadCompleted","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.UploadCompletedEventArgs>","Documentation":"\n            <summary>\n            Raised when all files are uploaded (after all <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.OnFileUploaded\" /> events).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnUploadCompleted","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.UploadCompletedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Multiple","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Single <c>false</c> or multiple <c>true</c> files upload.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Multiple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MaxFileSize","TypeName":"System.Int64?","Documentation":"\n            <summary>\n            The maximum file size in bytes.\n            When exceeded, the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.OnFileUploaded\" /> returns <c>413-RequestEntityTooLarge</c> as <see cref=\"P:Havit.Blazor.Components.Web.FileUploadedEventArgs.ResponseStatus\" />.\n            Default is <c>null</c> (unlimited).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxFileSize","Common.GloballyQualifiedTypeName":"global::System.Int64?"}},{"Kind":"Components.Component","Name":"Accept","TypeName":"System.String","Documentation":"\n            <summary>\n            Takes as its value a comma-separated list of one or more file types, or unique file type specifiers, describing which file types to allow.\n            <see href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept\">MDN Web Docs - HTML attribute: accept</see>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Accept","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NoFilesTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content to render when no files are picked. Default content is displayed when not set.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NoFilesTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputFileDropZone","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":796437789,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.NoFilesTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content to render when no files are picked. Default content is displayed when not set.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoFilesTemplate","ParentTag":"HxInputFileDropZone"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.NoFilesTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputFileDropZone","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2083375123,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.NoFilesTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content to render when no files are picked. Default content is displayed when not set.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NoFilesTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.NoFilesTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputFileDropZone","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1215344173,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxFilterForm<TModel>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Edit form derived from HxModelEditForm with support for chip generators.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxFilterForm\">https://havit.blazor.eu/components/HxFilterForm</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxFilterForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TModel","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TModel for the Havit.Blazor.Components.Web.Bootstrap.HxFilterForm<TModel> component.","Metadata":{"Common.PropertyName":"TModel","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnChipsUpdated","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.Bootstrap.ChipItem[]>","Metadata":{"Common.PropertyName":"OnChipsUpdated","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.Bootstrap.ChipItem[]>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Form element id.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Model","TypeName":"TModel","Documentation":"\n            <summary>\n            Model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"TModel","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ModelChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TModel>","Documentation":"\n            <summary>\n            Model event callback. Invoked when a valid form is updated.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ModelChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TModel>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TModel>","Documentation":"\n            <summary>\n            Child content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TModel>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxFilterForm<TModel>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxFilterForm","Components.GenericTyped":"True"}},{"HashCode":-1434958868,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxFilterForm<TModel>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Edit form derived from HxModelEditForm with support for chip generators.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxFilterForm\">https://havit.blazor.eu/components/HxFilterForm</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxFilterForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TModel","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TModel for the Havit.Blazor.Components.Web.Bootstrap.HxFilterForm<TModel> component.","Metadata":{"Common.PropertyName":"TModel","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnChipsUpdated","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.Bootstrap.ChipItem[]>","Metadata":{"Common.PropertyName":"OnChipsUpdated","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.Bootstrap.ChipItem[]>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Form element id.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Model","TypeName":"TModel","Documentation":"\n            <summary>\n            Model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"TModel","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ModelChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TModel>","Documentation":"\n            <summary>\n            Model event callback. Invoked when a valid form is updated.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ModelChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TModel>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TModel>","Documentation":"\n            <summary>\n            Child content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TModel>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxFilterForm<TModel>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxFilterForm","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1277914633,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxFilterForm<TModel>.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Child content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxFilterForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxFilterForm<TModel>.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxFilterForm","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1713350386,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxFilterForm<TModel>.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Child content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxFilterForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxFilterForm<TModel>.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxFilterForm","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":885564277,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Component for single item selection with dynamic suggestions (based on typed characters).<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxAutosuggest\">https://havit.blazor.eu/components/HxAutosuggest</see>\n            </summary>\n            <remarks>\n            Defaults are located in a separate non-generic type <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest\" />.\n            </remarks>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxAutosuggest"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.AutosuggestSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.AutosuggestSettings"}},{"Kind":"Components.Component","Name":"DataProvider","TypeName":"Havit.Blazor.Components.Web.Bootstrap.AutosuggestDataProviderDelegate<TItem>","Documentation":"\n            <summary>\n            Method (delegate) that provides data for the suggestions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataProvider","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.AutosuggestDataProviderDelegate<TItem>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueSelector","TypeName":"System.Func<TItem, TValue>","Documentation":"\n            <summary>\n            Selects a value from an item.\n            Not required when <c>TValue</c> is the same as <c>TItem</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TextSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Selects the text to display from an item.\n            When not set, <c>ToString()</c> is used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Template to display an item.\n            When not set, <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.TextSelector\" /> is used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"EmptyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Template to display when items are empty.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EmptyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SearchIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon displayed in the input when no item is selected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SearchIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"ClearIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon displayed in the input on the selection clear button when an item is selected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ClearIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"MinimumLength","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The minimal number of characters to start suggesting.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinimumLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The debounce delay in milliseconds.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Delay","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            A short hint displayed in the input field before the user enters a value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            The size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"LabelType","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType?","Documentation":"\n            <inheritdoc cref=\"T:Havit.Blazor.Components.Web.Bootstrap.LabelType\" />\n        ","Metadata":{"Common.PropertyName":"LabelType","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType?"}},{"Kind":"Components.Component","Name":"ItemFromValueResolver","TypeName":"System.Func<TValue, System.Threading.Tasks.Task<TItem>>","Documentation":"\n            <summary>\n            Returns the corresponding item for the (selected) value.\n            </summary>\n            <remarks>\n            We do not have a full list of possible items to be able to select one by value.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ItemFromValueResolver","Common.GloballyQualifiedTypeName":"global::System.Func<TValue, global::System.Threading.Tasks.Task<TItem>>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            The input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            The input-group at the end of the input.<br />\n            Hides the search icon when used!\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The input-group at the end of the input.<br />\n            Hides the search icon when used!\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAutosuggest","Components.GenericTyped":"True"}},{"HashCode":913116518,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Component for single item selection with dynamic suggestions (based on typed characters).<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxAutosuggest\">https://havit.blazor.eu/components/HxAutosuggest</see>\n            </summary>\n            <remarks>\n            Defaults are located in a separate non-generic type <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest\" />.\n            </remarks>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.AutosuggestSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.AutosuggestSettings"}},{"Kind":"Components.Component","Name":"DataProvider","TypeName":"Havit.Blazor.Components.Web.Bootstrap.AutosuggestDataProviderDelegate<TItem>","Documentation":"\n            <summary>\n            Method (delegate) that provides data for the suggestions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataProvider","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.AutosuggestDataProviderDelegate<TItem>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueSelector","TypeName":"System.Func<TItem, TValue>","Documentation":"\n            <summary>\n            Selects a value from an item.\n            Not required when <c>TValue</c> is the same as <c>TItem</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TextSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Selects the text to display from an item.\n            When not set, <c>ToString()</c> is used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Template to display an item.\n            When not set, <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.TextSelector\" /> is used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"EmptyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Template to display when items are empty.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EmptyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SearchIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon displayed in the input when no item is selected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SearchIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"ClearIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon displayed in the input on the selection clear button when an item is selected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ClearIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"MinimumLength","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The minimal number of characters to start suggesting.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinimumLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The debounce delay in milliseconds.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Delay","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            A short hint displayed in the input field before the user enters a value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            The size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"LabelType","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType?","Documentation":"\n            <inheritdoc cref=\"T:Havit.Blazor.Components.Web.Bootstrap.LabelType\" />\n        ","Metadata":{"Common.PropertyName":"LabelType","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType?"}},{"Kind":"Components.Component","Name":"ItemFromValueResolver","TypeName":"System.Func<TValue, System.Threading.Tasks.Task<TItem>>","Documentation":"\n            <summary>\n            Returns the corresponding item for the (selected) value.\n            </summary>\n            <remarks>\n            We do not have a full list of possible items to be able to select one by value.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"ItemFromValueResolver","Common.GloballyQualifiedTypeName":"global::System.Func<TValue, global::System.Threading.Tasks.Task<TItem>>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            The input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            The input-group at the end of the input.<br />\n            Hides the search icon when used!\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The input-group at the end of the input.<br />\n            Hides the search icon when used!\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAutosuggest","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-84415051,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.ItemTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template to display an item.\n            When not set, <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.TextSelector\" /> is used.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"HxAutosuggest"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.ItemTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAutosuggest","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-491077219,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.ItemTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template to display an item.\n            When not set, <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.TextSelector\" /> is used.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.ItemTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAutosuggest","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2017583239,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.EmptyTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template to display when items are empty.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EmptyTemplate","ParentTag":"HxAutosuggest"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.EmptyTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAutosuggest","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1943106345,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.EmptyTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template to display when items are empty.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EmptyTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.EmptyTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAutosuggest","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1420039139,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The input-group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"HxAutosuggest"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAutosuggest","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1144381127,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The input-group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAutosuggest","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1309446912,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The input-group at the end of the input.<br />\n            Hides the search icon when used!\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"HxAutosuggest"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAutosuggest","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1778961844,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The input-group at the end of the input.<br />\n            Hides the search icon when used!\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAutosuggest","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":318012875,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"HxAutosuggest"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAutosuggest","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":479650500,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAutosuggest","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-793865228,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"HxAutosuggest"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAutosuggest","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-171444414,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAutosuggest","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1303606670,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"HxAutosuggest"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAutosuggest","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":637406487,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAutosuggest","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-885207097,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Checkbox input.<br />\n            (Replaces the former <c>HxInputCheckbox</c> component which was dropped in v 4.0.0.)\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxCheckbox\">https://havit.blazor.eu/components/HxCheckbox</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CheckboxSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CheckboxSettings"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text to display next to the checkbox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content to display next to the checkbox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TextCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class to apply to the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Inline","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows grouping checkboxes on the same horizontal row by rendering them inline. The default value is <c>false</c>.\n            This only works when there is no label, no hint, and no validation message.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Inline","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Reverse","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Put the checkbox on the opposite side - first text, then checkbox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Reverse","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckbox"}},{"HashCode":1391366618,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Checkbox input.<br />\n            (Replaces the former <c>HxInputCheckbox</c> component which was dropped in v 4.0.0.)\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxCheckbox\">https://havit.blazor.eu/components/HxCheckbox</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CheckboxSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CheckboxSettings"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text to display next to the checkbox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content to display next to the checkbox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TextCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class to apply to the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Inline","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows grouping checkboxes on the same horizontal row by rendering them inline. The default value is <c>false</c>.\n            This only works when there is no label, no hint, and no validation message.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Inline","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Reverse","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Put the checkbox on the opposite side - first text, then checkbox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Reverse","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckbox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":190368256,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox.TextTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content to display next to the checkbox.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TextTemplate","ParentTag":"HxCheckbox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox.TextTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckbox","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-591417033,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox.TextTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content to display next to the checkbox.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TextTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox.TextTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckbox","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":289286935,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"HxCheckbox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckbox","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":301507569,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckbox","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2101316177,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"HxCheckbox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckbox","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-754587921,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckbox","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":841844711,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"HxCheckbox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckbox","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":615167455,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckbox","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1225850374,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Renders a multi-selection list of <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCheckbox\" /> controls.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxCheckboxList\">https://havit.blazor.eu/components/HxCheckboxList</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxCheckboxList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"\n            <summary>\n            Items to display. \n            </summary>\n        ","Metadata":{"Common.PropertyName":"Data","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTextSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Selects the text to display from the item.\n            When not set, <c>ToString()</c> is used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTextSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemValueSelector","TypeName":"System.Func<TItem, TValue>","Documentation":"\n            <summary>\n            Selects the value from the item.\n            Not required when TValue is the same as TItem.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemValueSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemSortKeySelector","TypeName":"System.Func<TItem, System.IComparable>","Documentation":"\n            <summary>\n            Selects the value for item sorting. When not set, the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2.ItemTextSelector\" /> property will be used.\n            If you need complex sorting, pre-sort the data manually or create a custom comparable property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSortKeySelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.IComparable>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the underlying <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCheckbox\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemCssClassSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Additional CSS class(es) for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCheckbox\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemInputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the input element of the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCheckbox\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemInputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemInputCssClassSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Additional CSS class(es) for the input element of the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCheckbox\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemInputCssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTextCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the text of the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCheckbox\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTextCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemTextCssClassSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Additional CSS class(es) for the text of the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCheckbox\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTextCssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"AutoSort","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, items are sorted before displaying in the select.\n            The default value is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutoSort","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Inline","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows grouping checkboxes on the same horizontal row by rendering them inline. The default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Inline","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CheckboxListSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CheckboxListSettings"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Collections.Generic.List<TValue>","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<TValue>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<TValue>>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.List<TValue>>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Collections.Generic.List<TValue>>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Collections.Generic.List<TValue>>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckboxList","Components.GenericTyped":"True"}},{"HashCode":-1548905138,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Renders a multi-selection list of <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCheckbox\" /> controls.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxCheckboxList\">https://havit.blazor.eu/components/HxCheckboxList</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"\n            <summary>\n            Items to display. \n            </summary>\n        ","Metadata":{"Common.PropertyName":"Data","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTextSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Selects the text to display from the item.\n            When not set, <c>ToString()</c> is used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTextSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemValueSelector","TypeName":"System.Func<TItem, TValue>","Documentation":"\n            <summary>\n            Selects the value from the item.\n            Not required when TValue is the same as TItem.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemValueSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemSortKeySelector","TypeName":"System.Func<TItem, System.IComparable>","Documentation":"\n            <summary>\n            Selects the value for item sorting. When not set, the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2.ItemTextSelector\" /> property will be used.\n            If you need complex sorting, pre-sort the data manually or create a custom comparable property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSortKeySelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.IComparable>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the underlying <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCheckbox\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemCssClassSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Additional CSS class(es) for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCheckbox\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemInputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the input element of the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCheckbox\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemInputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemInputCssClassSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Additional CSS class(es) for the input element of the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCheckbox\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemInputCssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTextCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the text of the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCheckbox\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTextCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemTextCssClassSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Additional CSS class(es) for the text of the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCheckbox\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTextCssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"AutoSort","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, items are sorted before displaying in the select.\n            The default value is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutoSort","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Inline","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows grouping checkboxes on the same horizontal row by rendering them inline. The default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Inline","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CheckboxListSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CheckboxListSettings"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Collections.Generic.List<TValue>","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<TValue>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<TValue>>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.List<TValue>>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Collections.Generic.List<TValue>>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Collections.Generic.List<TValue>>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckboxList","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1402143458,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem>.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"HxCheckboxList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem>.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckboxList","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":639400014,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem>.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem>.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckboxList","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":874408050,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem>.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"HxCheckboxList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem>.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckboxList","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1556378850,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem>.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem>.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckboxList","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2092413846,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem>.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"HxCheckboxList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem>.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckboxList","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1931285390,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem>.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem>.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckboxList","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1609902144,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Displays a read-only value in the form control visual (as <c>.form-control</c>, with label, border, etc.).<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxFormValue\">https://havit.blazor.eu/components/HxFormValue</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxFormValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.FormValueSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.FormValueSettings"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.CssClass\" />\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.Label\" />\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.LabelTemplate\" />\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.LabelCssClass\" />\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.Hint\" />\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.HintTemplate\" />\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Value to be presented.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Template to render the value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValueCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupStartText\" />\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupStartTemplate\" />\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupEndText\" />\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupEndTemplate\" />\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxFormValue"}},{"HashCode":191804907,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Displays a read-only value in the form control visual (as <c>.form-control</c>, with label, border, etc.).<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxFormValue\">https://havit.blazor.eu/components/HxFormValue</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.FormValueSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.FormValueSettings"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.CssClass\" />\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.Label\" />\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.LabelTemplate\" />\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.LabelCssClass\" />\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.Hint\" />\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.HintTemplate\" />\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Value to be presented.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Template to render the value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValueCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupStartText\" />\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupStartTemplate\" />\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupEndText\" />\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupEndTemplate\" />\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxFormValue","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":896953832,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.LabelTemplate\" />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"HxFormValue"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxFormValue","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1319500648,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.LabelTemplate\" />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxFormValue","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-19448426,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.HintTemplate\" />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"HxFormValue"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxFormValue","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1037788003,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.HintTemplate\" />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxFormValue","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":508086628,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue.ValueTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template to render the value.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValueTemplate","ParentTag":"HxFormValue"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue.ValueTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxFormValue","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1449808360,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue.ValueTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template to render the value.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValueTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue.ValueTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxFormValue","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1494614380,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupStartTemplate\" />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"HxFormValue"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxFormValue","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2029551919,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupStartTemplate\" />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxFormValue","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":935834820,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupEndTemplate\" />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"HxFormValue"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxFormValue","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1461486098,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupEndTemplate\" />\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxFormValue.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxFormValue","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":962852849,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Date picker. Form input component for entering a date.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxInputDate\">https://havit.blazor.eu/components/HxInputDate</see>\n            </summary>\n            <remarks>\n            Defaults are located in a separate non-generic type <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxInputDate\" />.\n            </remarks>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputDateSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputDateSettings"}},{"Kind":"Components.Component","Name":"ShowPredefinedDates","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When enabled (default is <c>true</c>), shows predefined days (from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.PredefinedDates\" />, e.g. Today).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowPredefinedDates","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"PredefinedDates","TypeName":"System.Collections.Generic.IEnumerable<Havit.Blazor.Components.Web.Bootstrap.InputDatePredefinedDatesItem>","Documentation":"\n            <summary>\n            Predefined dates to be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PredefinedDates","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::Havit.Blazor.Components.Web.Bootstrap.InputDatePredefinedDatesItem>"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying a parsing error.\n            Used with <c>String.Format(...)</c>, <c>{0}</c> is replaced by <c>Label</c> property, <c>{1}</c> name of bounded property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IInputWithPlaceholder.Placeholder\" />\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"CalendarIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Optional icon to display within the input. Use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults\" /> to set the icon for the whole project.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CalendarIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether the <i>Clear</i> button in the dropdown calendar should be visible.<br />\n            The default is <c>true</c> (configurable in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowClearButton","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"MinDate","TypeName":"System.DateTime?","Documentation":"\n            <summary>\n            The first date selectable from the dropdown calendar.<br />\n            The default is <c>1.1.1900</c> (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinDate","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"MaxDate","TypeName":"System.DateTime?","Documentation":"\n            <summary>\n            The last date selectable from the dropdown calendar.<br />\n            The default is <c>31.12.2099</c> (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxDate","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"CalendarDateCustomizationProvider","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate","Documentation":"\n            <summary>\n            Allows customization of the dates in the dropdown calendar.<br />\n            The default customization is configurable with <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CalendarDateCustomizationProvider","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"LabelType","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType?","Documentation":"\n            <inheritdoc cref=\"T:Havit.Blazor.Components.Web.Bootstrap.LabelType\" />\n        ","Metadata":{"Common.PropertyName":"LabelType","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType?"}},{"Kind":"Components.Component","Name":"InputGroupCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the input-group span.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            The input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            The input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TimeProvider","TypeName":"System.TimeProvider","Documentation":"\n            <summary>\n            TimeProvider is resolved in the following order:<br />\n            \t1. TimeProvider from this parameter <br />\n            \t2. Settings TimeProvider (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.Settings\" />)<br />\n            \t3. Defaults TimeProvider (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults\" />)<br />\n            \t4. TimeProvider from DependencyInjection<br />\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TimeProvider","Common.GloballyQualifiedTypeName":"global::System.TimeProvider"}},{"Kind":"Components.Component","Name":"CalendarDisplayMonth","TypeName":"System.DateTime","Documentation":"\n            <summary>\n            Default month to display in dropdown calendar when there is no Value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CalendarDisplayMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDate","Components.GenericTyped":"True"}},{"HashCode":-1394564385,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Date picker. Form input component for entering a date.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxInputDate\">https://havit.blazor.eu/components/HxInputDate</see>\n            </summary>\n            <remarks>\n            Defaults are located in a separate non-generic type <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxInputDate\" />.\n            </remarks>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputDateSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputDateSettings"}},{"Kind":"Components.Component","Name":"ShowPredefinedDates","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When enabled (default is <c>true</c>), shows predefined days (from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.PredefinedDates\" />, e.g. Today).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowPredefinedDates","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"PredefinedDates","TypeName":"System.Collections.Generic.IEnumerable<Havit.Blazor.Components.Web.Bootstrap.InputDatePredefinedDatesItem>","Documentation":"\n            <summary>\n            Predefined dates to be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PredefinedDates","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::Havit.Blazor.Components.Web.Bootstrap.InputDatePredefinedDatesItem>"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying a parsing error.\n            Used with <c>String.Format(...)</c>, <c>{0}</c> is replaced by <c>Label</c> property, <c>{1}</c> name of bounded property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.IInputWithPlaceholder.Placeholder\" />\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"CalendarIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Optional icon to display within the input. Use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults\" /> to set the icon for the whole project.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CalendarIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether the <i>Clear</i> button in the dropdown calendar should be visible.<br />\n            The default is <c>true</c> (configurable in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowClearButton","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"MinDate","TypeName":"System.DateTime?","Documentation":"\n            <summary>\n            The first date selectable from the dropdown calendar.<br />\n            The default is <c>1.1.1900</c> (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinDate","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"MaxDate","TypeName":"System.DateTime?","Documentation":"\n            <summary>\n            The last date selectable from the dropdown calendar.<br />\n            The default is <c>31.12.2099</c> (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxDate","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"CalendarDateCustomizationProvider","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate","Documentation":"\n            <summary>\n            Allows customization of the dates in the dropdown calendar.<br />\n            The default customization is configurable with <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CalendarDateCustomizationProvider","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"LabelType","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType?","Documentation":"\n            <inheritdoc cref=\"T:Havit.Blazor.Components.Web.Bootstrap.LabelType\" />\n        ","Metadata":{"Common.PropertyName":"LabelType","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType?"}},{"Kind":"Components.Component","Name":"InputGroupCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the input-group span.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            The input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            The input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TimeProvider","TypeName":"System.TimeProvider","Documentation":"\n            <summary>\n            TimeProvider is resolved in the following order:<br />\n            \t1. TimeProvider from this parameter <br />\n            \t2. Settings TimeProvider (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.Settings\" />)<br />\n            \t3. Defaults TimeProvider (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults\" />)<br />\n            \t4. TimeProvider from DependencyInjection<br />\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TimeProvider","Common.GloballyQualifiedTypeName":"global::System.TimeProvider"}},{"Kind":"Components.Component","Name":"CalendarDisplayMonth","TypeName":"System.DateTime","Documentation":"\n            <summary>\n            Default month to display in dropdown calendar when there is no Value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CalendarDisplayMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDate","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1063814685,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The input-group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"HxInputDate"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1513009809,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The input-group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2107375787,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The input-group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"HxInputDate"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":717804479,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The input-group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1768520648,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"HxInputDate"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1572112643,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":520107739,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"HxInputDate"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":77105868,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":768049676,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"HxInputDate"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":176856688,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":34486948,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Date range picker. Form input component for entering a start date and an end date.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxInputDateRange\">https://havit.blazor.eu/components/HxInputDateRange</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputDateRange"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputDateRangeSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputDateRangeSettings"}},{"Kind":"Components.Component","Name":"ShowPredefinedDateRanges","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When enabled (default is <c>true</c>), shows predefined days (from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.PredefinedDateRanges\" />, e.g. Today).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowPredefinedDateRanges","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"PredefinedDateRanges","TypeName":"System.Collections.Generic.IEnumerable<Havit.Blazor.Components.Web.Bootstrap.InputDateRangePredefinedRangesItem>","Documentation":"\n            <summary>\n            Predefined dates to be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PredefinedDateRanges","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::Havit.Blazor.Components.Web.Bootstrap.InputDateRangePredefinedRangesItem>"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"FromParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying a \"from\" parsing error.\n            Used with <c>String.Format(...)</c>, <c>{0}</c> is replaced by the Label property, <c>{1}</c> is replaced by the name of the bounded property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FromParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ToParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying a \"to\" parsing error.\n            Used with <c>String.Format(...)</c>, <c>{0}</c> is replaced by the Label property, <c>{1}</c> is replaced by the name of the bounded property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ToParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether the <i>Clear</i> button in the dropdown calendar should be visible.<br />\n            The default is <c>true</c> (configurable in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowClearButton","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"MinDate","TypeName":"System.DateTime?","Documentation":"\n            <summary>\n            The first date selectable from the dropdown calendar.<br />\n            The default is <c>1.1.1900</c> (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinDate","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"MaxDate","TypeName":"System.DateTime?","Documentation":"\n            <summary>\n            The last date selectable from the dropdown calendar.<br />\n            The default is <c>31.12.2099</c> (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxDate","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"CalendarDateCustomizationProvider","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate","Documentation":"\n            <summary>\n            Allows customization of the dates in the dropdown calendars.<br />\n            The default customization is configurable with <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CalendarDateCustomizationProvider","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"FromCalendarDisplayMonth","TypeName":"System.DateTime","Documentation":"\n            <summary>\n            The month to display in the from calendar when no start date is selected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FromCalendarDisplayMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"ToCalendarDisplayMonth","TypeName":"System.DateTime","Documentation":"\n            <summary>\n            The month to display in the to calendar when no end date or start date is selected. It will default to <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.FromCalendarDisplayMonth\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ToCalendarDisplayMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"TimeProvider","TypeName":"System.TimeProvider","Documentation":"\n            <summary>\n            TimeProvider is resolved in the following order:<br />\n            \t1. TimeProvider from this parameter <br />\n            \t2. Settings TimeProvider (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.Settings\" />)<br />\n            \t3. Defaults TimeProvider (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.Defaults\" />)<br />\n            \t4. TimeProvider from DependencyInjection<br />\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TimeProvider","Common.GloballyQualifiedTypeName":"global::System.TimeProvider"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"Havit.DateTimeRange","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::Havit.DateTimeRange"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.DateTimeRange>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.DateTimeRange>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<Havit.DateTimeRange>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::Havit.DateTimeRange>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDateRange"}},{"HashCode":-1630280107,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Date range picker. Form input component for entering a start date and an end date.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxInputDateRange\">https://havit.blazor.eu/components/HxInputDateRange</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputDateRangeSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputDateRangeSettings"}},{"Kind":"Components.Component","Name":"ShowPredefinedDateRanges","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When enabled (default is <c>true</c>), shows predefined days (from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.PredefinedDateRanges\" />, e.g. Today).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowPredefinedDateRanges","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"PredefinedDateRanges","TypeName":"System.Collections.Generic.IEnumerable<Havit.Blazor.Components.Web.Bootstrap.InputDateRangePredefinedRangesItem>","Documentation":"\n            <summary>\n            Predefined dates to be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PredefinedDateRanges","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::Havit.Blazor.Components.Web.Bootstrap.InputDateRangePredefinedRangesItem>"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"FromParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying a \"from\" parsing error.\n            Used with <c>String.Format(...)</c>, <c>{0}</c> is replaced by the Label property, <c>{1}</c> is replaced by the name of the bounded property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FromParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ToParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying a \"to\" parsing error.\n            Used with <c>String.Format(...)</c>, <c>{0}</c> is replaced by the Label property, <c>{1}</c> is replaced by the name of the bounded property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ToParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ShowClearButton","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether the <i>Clear</i> button in the dropdown calendar should be visible.<br />\n            The default is <c>true</c> (configurable in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowClearButton","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"MinDate","TypeName":"System.DateTime?","Documentation":"\n            <summary>\n            The first date selectable from the dropdown calendar.<br />\n            The default is <c>1.1.1900</c> (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinDate","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"MaxDate","TypeName":"System.DateTime?","Documentation":"\n            <summary>\n            The last date selectable from the dropdown calendar.<br />\n            The default is <c>31.12.2099</c> (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxDate","Common.GloballyQualifiedTypeName":"global::System.DateTime?"}},{"Kind":"Components.Component","Name":"CalendarDateCustomizationProvider","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate","Documentation":"\n            <summary>\n            Allows customization of the dates in the dropdown calendars.<br />\n            The default customization is configurable with <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CalendarDateCustomizationProvider","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"FromCalendarDisplayMonth","TypeName":"System.DateTime","Documentation":"\n            <summary>\n            The month to display in the from calendar when no start date is selected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FromCalendarDisplayMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"ToCalendarDisplayMonth","TypeName":"System.DateTime","Documentation":"\n            <summary>\n            The month to display in the to calendar when no end date or start date is selected. It will default to <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.FromCalendarDisplayMonth\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ToCalendarDisplayMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"TimeProvider","TypeName":"System.TimeProvider","Documentation":"\n            <summary>\n            TimeProvider is resolved in the following order:<br />\n            \t1. TimeProvider from this parameter <br />\n            \t2. Settings TimeProvider (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.Settings\" />)<br />\n            \t3. Defaults TimeProvider (configurable from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.Defaults\" />)<br />\n            \t4. TimeProvider from DependencyInjection<br />\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TimeProvider","Common.GloballyQualifiedTypeName":"global::System.TimeProvider"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"Havit.DateTimeRange","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::Havit.DateTimeRange"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.DateTimeRange>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.DateTimeRange>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<Havit.DateTimeRange>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::Havit.DateTimeRange>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDateRange","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1237602228,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"HxInputDateRange"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDateRange","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":726136759,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDateRange","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1804340374,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"HxInputDateRange"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDateRange","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2087362894,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDateRange","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1707071493,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"HxInputDateRange"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDateRange","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-229060673,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDateRange","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2075265813,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Numeric input.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxInputNumber\">https://havit.blazor.eu/components/HxInputNumber</see>\n            </summary>\n            <remarks>\n            Defaults located in separate non-generic type <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber\" />.\n            </remarks>\n            <typeparam name=\"TValue\">Supported values: <c>byte (Byte), sbyte (SByte), short (Int16), ushort(UInt16), int (Int32), uint(UInt32), long (Int64), ulong(UInt64), float (Single), double (Double) and decimal (Decimal)</c>.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputNumberSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputNumberSettings"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            Used with String.Format(...), {0} is replaced by Label property, {1} name of bounded property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"Havit.Blazor.Components.Web.InputMode?","Documentation":"\n            <summary>\n            Hint to browsers as to the type of virtual keyboard configuration to use when editing.<br />\n            If not set (neither with <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.Settings\" /> nor <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber.Defaults\" />, i.e. <c>null</c>),\n            the <see cref=\"F:Havit.Blazor.Components.Web.InputMode.Numeric\" />\twill be used for <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.Decimals\" /> equal to <c>0</c>.\n            </summary>\n            <remarks>\n            We cannot set <see cref=\"F:Havit.Blazor.Components.Web.InputMode.Decimal\" /> for <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.Decimals\" /> greater that <c>0</c>\n            as the users with keyboard locale not matching the application locale won't be able to enter decimal point\n            (is <kbd>,</kbd> in some locales and <kbd>.</kbd> in others).<br />\n            Feel free to set the InputMode on your own as needed.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.InputMode?"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Placeholder for the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"LabelType","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType?","Documentation":"\n            <inheritdoc cref=\"T:Havit.Blazor.Components.Web.Bootstrap.LabelType\" />\n        ","Metadata":{"Common.PropertyName":"LabelType","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType?"}},{"Kind":"Components.Component","Name":"Decimals","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets or sets the number of decimal digits.\n            Can be used only for floating point types, for integer types throws exception (for values other than 0).\n            When not set, 2 decimal digits are used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Decimals","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputNumber","Components.GenericTyped":"True"}},{"HashCode":1532698880,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Numeric input.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxInputNumber\">https://havit.blazor.eu/components/HxInputNumber</see>\n            </summary>\n            <remarks>\n            Defaults located in separate non-generic type <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber\" />.\n            </remarks>\n            <typeparam name=\"TValue\">Supported values: <c>byte (Byte), sbyte (SByte), short (Int16), ushort(UInt16), int (Int32), uint(UInt32), long (Int64), ulong(UInt64), float (Single), double (Double) and decimal (Decimal)</c>.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputNumberSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputNumberSettings"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            Used with String.Format(...), {0} is replaced by Label property, {1} name of bounded property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"Havit.Blazor.Components.Web.InputMode?","Documentation":"\n            <summary>\n            Hint to browsers as to the type of virtual keyboard configuration to use when editing.<br />\n            If not set (neither with <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.Settings\" /> nor <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber.Defaults\" />, i.e. <c>null</c>),\n            the <see cref=\"F:Havit.Blazor.Components.Web.InputMode.Numeric\" />\twill be used for <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.Decimals\" /> equal to <c>0</c>.\n            </summary>\n            <remarks>\n            We cannot set <see cref=\"F:Havit.Blazor.Components.Web.InputMode.Decimal\" /> for <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.Decimals\" /> greater that <c>0</c>\n            as the users with keyboard locale not matching the application locale won't be able to enter decimal point\n            (is <kbd>,</kbd> in some locales and <kbd>.</kbd> in others).<br />\n            Feel free to set the InputMode on your own as needed.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.InputMode?"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Placeholder for the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"LabelType","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType?","Documentation":"\n            <inheritdoc cref=\"T:Havit.Blazor.Components.Web.Bootstrap.LabelType\" />\n        ","Metadata":{"Common.PropertyName":"LabelType","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType?"}},{"Kind":"Components.Component","Name":"Decimals","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets or sets the number of decimal digits.\n            Can be used only for floating point types, for integer types throws exception (for values other than 0).\n            When not set, 2 decimal digits are used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Decimals","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputNumber","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-88633275,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"HxInputNumber"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputNumber","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-995309774,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputNumber","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1663482527,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"HxInputNumber"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputNumber","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1942306531,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputNumber","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-842070074,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"HxInputNumber"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputNumber","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":692007433,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputNumber","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-254561977,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"HxInputNumber"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputNumber","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1944313782,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputNumber","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1244734185,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"HxInputNumber"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputNumber","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-130832008,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputNumber","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1872642134,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Numeric input in percentages with value normalization (0% = 0, 100% = 1.0).<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxInputPercent\">https://havit.blazor.eu/components/HxInputPercent</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputPercent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputNumberSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputNumberSettings"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            Used with String.Format(...), {0} is replaced by Label property, {1} name of bounded property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"Havit.Blazor.Components.Web.InputMode?","Documentation":"\n            <summary>\n            Hint to browsers as to the type of virtual keyboard configuration to use when editing.<br />\n            If not set (neither with <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.Settings\" /> nor <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber.Defaults\" />, i.e. <c>null</c>),\n            the <see cref=\"F:Havit.Blazor.Components.Web.InputMode.Numeric\" />\twill be used for <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.Decimals\" /> equal to <c>0</c>.\n            </summary>\n            <remarks>\n            We cannot set <see cref=\"F:Havit.Blazor.Components.Web.InputMode.Decimal\" /> for <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.Decimals\" /> greater that <c>0</c>\n            as the users with keyboard locale not matching the application locale won't be able to enter decimal point\n            (is <kbd>,</kbd> in some locales and <kbd>.</kbd> in others).<br />\n            Feel free to set the InputMode on your own as needed.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.InputMode?"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Placeholder for the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"LabelType","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType?","Documentation":"\n            <inheritdoc cref=\"T:Havit.Blazor.Components.Web.Bootstrap.LabelType\" />\n        ","Metadata":{"Common.PropertyName":"LabelType","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType?"}},{"Kind":"Components.Component","Name":"Decimals","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets or sets the number of decimal digits.\n            Can be used only for floating point types, for integer types throws exception (for values other than 0).\n            When not set, 2 decimal digits are used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Decimals","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputPercent","Components.GenericTyped":"True"}},{"HashCode":557004630,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Numeric input in percentages with value normalization (0% = 0, 100% = 1.0).<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxInputPercent\">https://havit.blazor.eu/components/HxInputPercent</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputNumberSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputNumberSettings"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            Used with String.Format(...), {0} is replaced by Label property, {1} name of bounded property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"Havit.Blazor.Components.Web.InputMode?","Documentation":"\n            <summary>\n            Hint to browsers as to the type of virtual keyboard configuration to use when editing.<br />\n            If not set (neither with <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.Settings\" /> nor <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber.Defaults\" />, i.e. <c>null</c>),\n            the <see cref=\"F:Havit.Blazor.Components.Web.InputMode.Numeric\" />\twill be used for <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.Decimals\" /> equal to <c>0</c>.\n            </summary>\n            <remarks>\n            We cannot set <see cref=\"F:Havit.Blazor.Components.Web.InputMode.Decimal\" /> for <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.Decimals\" /> greater that <c>0</c>\n            as the users with keyboard locale not matching the application locale won't be able to enter decimal point\n            (is <kbd>,</kbd> in some locales and <kbd>.</kbd> in others).<br />\n            Feel free to set the InputMode on your own as needed.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.InputMode?"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Placeholder for the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"LabelType","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType?","Documentation":"\n            <inheritdoc cref=\"T:Havit.Blazor.Components.Web.Bootstrap.LabelType\" />\n        ","Metadata":{"Common.PropertyName":"LabelType","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType?"}},{"Kind":"Components.Component","Name":"Decimals","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets or sets the number of decimal digits.\n            Can be used only for floating point types, for integer types throws exception (for values other than 0).\n            When not set, 2 decimal digits are used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Decimals","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputPercent","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-943805785,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"HxInputPercent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputPercent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":365364673,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputPercent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1560538668,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"HxInputPercent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputPercent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1365442399,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputPercent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-35505530,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"HxInputPercent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputPercent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":960679369,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputPercent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2041616783,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"HxInputPercent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputPercent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":87248444,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputPercent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1942348210,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"HxInputPercent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputPercent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1142092989,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputPercent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-577371884,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Allows the user to select a number in a specified range using a slider.\n            </summary>\n            <typeparam name=\"TValue\">Supported values: <c>byte (Byte), sbyte (SByte), short (Int16), ushort(UInt16), int (Int32), uint(UInt32), long (Int64), ulong(UInt64), float (Single), double (Double) and decimal (Decimal)</c>.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputRange"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputRangeSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputRange.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputRangeSettings"}},{"Kind":"Components.Component","Name":"Step","TypeName":"TValue","Documentation":"\n            <summary>\n            By default, <code>HxInputRange</code> snaps to integer values. To change this, you can specify a step value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Step","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Min","TypeName":"TValue","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Minimum value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Max","TypeName":"TValue","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Maximum value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"BindEvent","TypeName":"Havit.Blazor.Components.Web.Bootstrap.BindEvent?","Documentation":"\n            <summary>\n            Instructs whether the <c>Value</c> is going to be updated <c>oninput</c> (immediately), or <c>onchange</c> (usually <c>onmouseup</c>).<br />\n            Default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.BindEvent.OnChange\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BindEvent","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.BindEvent?"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputRange","Components.GenericTyped":"True"}},{"HashCode":-920178443,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Allows the user to select a number in a specified range using a slider.\n            </summary>\n            <typeparam name=\"TValue\">Supported values: <c>byte (Byte), sbyte (SByte), short (Int16), ushort(UInt16), int (Int32), uint(UInt32), long (Int64), ulong(UInt64), float (Single), double (Double) and decimal (Decimal)</c>.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputRangeSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputRange.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputRangeSettings"}},{"Kind":"Components.Component","Name":"Step","TypeName":"TValue","Documentation":"\n            <summary>\n            By default, <code>HxInputRange</code> snaps to integer values. To change this, you can specify a step value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Step","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Min","TypeName":"TValue","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Minimum value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Max","TypeName":"TValue","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Maximum value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"BindEvent","TypeName":"Havit.Blazor.Components.Web.Bootstrap.BindEvent?","Documentation":"\n            <summary>\n            Instructs whether the <c>Value</c> is going to be updated <c>oninput</c> (immediately), or <c>onchange</c> (usually <c>onmouseup</c>).<br />\n            Default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.BindEvent.OnChange\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BindEvent","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.BindEvent?"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputRange","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":182291321,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue>.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"HxInputRange"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue>.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputRange","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1358121668,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue>.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue>.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputRange","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":370221215,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue>.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"HxInputRange"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue>.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputRange","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1128416772,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue>.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue>.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputRange","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-893699026,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue>.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"HxInputRange"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue>.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputRange","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":533061781,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue>.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue>.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputRange","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":610695026,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputText","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Text input (including password, search, etc.)\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"Havit.Blazor.Components.Web.InputType","IsEnum":true,"Documentation":"\n            <summary>\n            Input type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.InputType"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputTextSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputText.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputTextSettings"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The maximum number of characters (UTF-16 code units) that the user can enter.<br />\n            If the parameter value isn't specified, the <see cref=\"T:System.ComponentModel.DataAnnotations.MaxLengthAttribute\" /> of the <c>Value</c> is checked and used.<br />\n            If not specified either, the user can enter an unlimited number of characters.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"Havit.Blazor.Components.Web.InputMode?","Documentation":"\n            <summary>\n            Hint to browsers as to the type of virtual keyboard configuration to use when editing.<br />\n            The default is <c>null</c> (not set).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.InputMode?"}},{"Kind":"Components.Component","Name":"BindEvent","TypeName":"Havit.Blazor.Components.Web.Bootstrap.BindEvent","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the behavior when the model is updated from the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BindEvent","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.BindEvent"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Placeholder for the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"LabelType","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType?","Documentation":"\n            <inheritdoc cref=\"T:Havit.Blazor.Components.Web.Bootstrap.LabelType\" />\n        ","Metadata":{"Common.PropertyName":"LabelType","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType?"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputText","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputText"}},{"HashCode":-1292603419,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputText","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Text input (including password, search, etc.)\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"Havit.Blazor.Components.Web.InputType","IsEnum":true,"Documentation":"\n            <summary>\n            Input type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.InputType"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputTextSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputText.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputTextSettings"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The maximum number of characters (UTF-16 code units) that the user can enter.<br />\n            If the parameter value isn't specified, the <see cref=\"T:System.ComponentModel.DataAnnotations.MaxLengthAttribute\" /> of the <c>Value</c> is checked and used.<br />\n            If not specified either, the user can enter an unlimited number of characters.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"Havit.Blazor.Components.Web.InputMode?","Documentation":"\n            <summary>\n            Hint to browsers as to the type of virtual keyboard configuration to use when editing.<br />\n            The default is <c>null</c> (not set).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.InputMode?"}},{"Kind":"Components.Component","Name":"BindEvent","TypeName":"Havit.Blazor.Components.Web.Bootstrap.BindEvent","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the behavior when the model is updated from the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BindEvent","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.BindEvent"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Placeholder for the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"LabelType","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType?","Documentation":"\n            <inheritdoc cref=\"T:Havit.Blazor.Components.Web.Bootstrap.LabelType\" />\n        ","Metadata":{"Common.PropertyName":"LabelType","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType?"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputText","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputText","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1837424018,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputText.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"HxInputText"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputText.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputText","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1268082986,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputText.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputText"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputText.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputText","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":738474055,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputText.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"HxInputText"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputText.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputText","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-166339536,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputText.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputText"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputText.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputText","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1754062193,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputText.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"HxInputText"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputText.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputText","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-149513636,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputText.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputText"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputText.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputText","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1619726693,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputText.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"HxInputText"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputText.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputText","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":156567058,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputText.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputText"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputText.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputText","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1149609104,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputText.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"HxInputText"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputText.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputText","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1026144778,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputText.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputText"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputText.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputText","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-974632824,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/forms/floating-labels/#textareas\" target=\"_blank\">Textarea</see>.\n            To set a custom height, do not use the rows attribute. Instead, set an explicit height (either inline or via custom CSS).<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxInputTextArea\">https://havit.blazor.eu/components/HxInputTextArea</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"Havit.Blazor.Components.Web.InputType","IsEnum":true,"Documentation":"\n            <summary>\n            Input type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.InputType"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputTextSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputText.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputTextSettings"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The maximum number of characters (UTF-16 code units) that the user can enter.<br />\n            If the parameter value isn't specified, the <see cref=\"T:System.ComponentModel.DataAnnotations.MaxLengthAttribute\" /> of the <c>Value</c> is checked and used.<br />\n            If not specified either, the user can enter an unlimited number of characters.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"Havit.Blazor.Components.Web.InputMode?","Documentation":"\n            <summary>\n            Hint to browsers as to the type of virtual keyboard configuration to use when editing.<br />\n            The default is <c>null</c> (not set).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.InputMode?"}},{"Kind":"Components.Component","Name":"BindEvent","TypeName":"Havit.Blazor.Components.Web.Bootstrap.BindEvent","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the behavior when the model is updated from the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BindEvent","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.BindEvent"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Placeholder for the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"LabelType","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType?","Documentation":"\n            <inheritdoc cref=\"T:Havit.Blazor.Components.Web.Bootstrap.LabelType\" />\n        ","Metadata":{"Common.PropertyName":"LabelType","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType?"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTextArea"}},{"HashCode":-54720393,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/forms/floating-labels/#textareas\" target=\"_blank\">Textarea</see>.\n            To set a custom height, do not use the rows attribute. Instead, set an explicit height (either inline or via custom CSS).<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxInputTextArea\">https://havit.blazor.eu/components/HxInputTextArea</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"Havit.Blazor.Components.Web.InputType","IsEnum":true,"Documentation":"\n            <summary>\n            Input type.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.InputType"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputTextSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputText.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputTextSettings"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The maximum number of characters (UTF-16 code units) that the user can enter.<br />\n            If the parameter value isn't specified, the <see cref=\"T:System.ComponentModel.DataAnnotations.MaxLengthAttribute\" /> of the <c>Value</c> is checked and used.<br />\n            If not specified either, the user can enter an unlimited number of characters.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"InputMode","TypeName":"Havit.Blazor.Components.Web.InputMode?","Documentation":"\n            <summary>\n            Hint to browsers as to the type of virtual keyboard configuration to use when editing.<br />\n            The default is <c>null</c> (not set).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.InputMode?"}},{"Kind":"Components.Component","Name":"BindEvent","TypeName":"Havit.Blazor.Components.Web.Bootstrap.BindEvent","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the behavior when the model is updated from the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BindEvent","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.BindEvent"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Placeholder for the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"LabelType","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType?","Documentation":"\n            <inheritdoc cref=\"T:Havit.Blazor.Components.Web.Bootstrap.LabelType\" />\n        ","Metadata":{"Common.PropertyName":"LabelType","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType?"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTextArea","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":920725047,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"HxInputTextArea"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTextArea","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1832228834,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTextArea","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":767143491,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"HxInputTextArea"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTextArea","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-22038687,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTextArea","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":251240359,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"HxInputTextArea"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTextArea","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1840395363,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTextArea","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-494437140,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"HxInputTextArea"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTextArea","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2024381443,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTextArea","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":440496968,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"HxInputTextArea"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTextArea","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-459981153,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTextArea","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":31372300,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            MultiSelect. Unlike a normal select, multiselect allows the user to select multiple options at once.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxMultiSelect\">https://havit.blazor.eu/components/HxMultiSelect</see>\n            </summary>\n            <typeparam name=\"TValue\">Type of values.</typeparam>\n            <typeparam name=\"TItem\">Type of items.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxMultiSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.MultiSelectSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.MultiSelectSettings"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"\n            <summary>\n            Items to display. \n            </summary>\n        ","Metadata":{"Common.PropertyName":"Data","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TextSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Selects text to display from an item.<br />\n            When not set, <c>ToString()</c> is used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueSelector","TypeName":"System.Func<TItem, TValue>","Documentation":"\n            <summary>\n            Selects value from an item.<br />\n            Not required when <c>TValue</c> is the same as <c>TItem</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SortKeySelector","TypeName":"System.Func<TItem, System.IComparable>","Documentation":"\n            <summary>\n            Selects value for item sorting. When not set, <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.TextSelector\" /> property will be used.<br />\n            If you need complex sorting, pre-sort data manually or create a custom comparable property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortKeySelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.IComparable>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"AutoSort","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When set to <c>false</c>, items will no longer be sorted.<br />\n            Default value is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutoSort","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EmptyText","TypeName":"System.String","Documentation":"\n            <summary>\n            Text to display when the selection is empty (the <c>Value</c> property is <c>null</c> or empty).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EmptyText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NullDataText","TypeName":"System.String","Documentation":"\n            <summary>\n            Text to display when <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.Data\" /> is <c>null</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NullDataText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputText","TypeName":"System.String","Documentation":"\n            <summary>\n            Text to display in the input (default is a list of selected values).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputTextSelector","TypeName":"System.Func<System.Collections.Generic.IEnumerable<TItem>, System.String>","Documentation":"\n            <summary>\n            Function to build the text to be displayed in the input from selected items (default is a list of selected values).\n            </summary>\n            <remarks>Currently does not affect the chip being generated. Override <c>RenderChipValue()</c> method to influence the chip.</remarks>\n        ","Metadata":{"Common.PropertyName":"InputTextSelector","Common.GloballyQualifiedTypeName":"global::System.Func<global::System.Collections.Generic.IEnumerable<TItem>, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Enables filtering capabilities.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowFiltering","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"FilterPredicate","TypeName":"System.Func<TItem, System.String, System.Boolean>","Documentation":"\n            <summary>\n            Defines a custom filtering predicate to apply to the list of items.\n            If not specified, the default behavior filters items based on whether the item text (obtained via TextSelector) contains the filter query string.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterPredicate","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String, global::System.Boolean>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ClearFilterOnHide","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When enabled the filter will be cleared when the dropdown is closed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ClearFilterOnHide","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"FilterEmptyResultTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Template that defines what should be rendered in case of empty items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterEmptyResultTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FilterEmptyResultText","TypeName":"System.String","Documentation":"\n            <summary>\n            Text to display when the filtered results list is empty and when not using <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.FilterEmptyResultTemplate\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterEmptyResultText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AllowSelectAll","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Enables select all capabilities.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowSelectAll","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"SelectAllText","TypeName":"System.String","Documentation":"\n            <summary>\n            Text to display for the select all dropdown option.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectAllText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FilterSearchIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon displayed in filter input for searching the filter.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterSearchIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"FilterClearIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon displayed in filter input for clearing the filter.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterClearIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Collections.Generic.List<TValue>","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<TValue>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<TValue>>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.List<TValue>>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Collections.Generic.List<TValue>>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Collections.Generic.List<TValue>>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMultiSelect","Components.GenericTyped":"True"}},{"HashCode":-659815302,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            MultiSelect. Unlike a normal select, multiselect allows the user to select multiple options at once.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxMultiSelect\">https://havit.blazor.eu/components/HxMultiSelect</see>\n            </summary>\n            <typeparam name=\"TValue\">Type of values.</typeparam>\n            <typeparam name=\"TItem\">Type of items.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.MultiSelectSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.MultiSelectSettings"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"\n            <summary>\n            Items to display. \n            </summary>\n        ","Metadata":{"Common.PropertyName":"Data","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TextSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Selects text to display from an item.<br />\n            When not set, <c>ToString()</c> is used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueSelector","TypeName":"System.Func<TItem, TValue>","Documentation":"\n            <summary>\n            Selects value from an item.<br />\n            Not required when <c>TValue</c> is the same as <c>TItem</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SortKeySelector","TypeName":"System.Func<TItem, System.IComparable>","Documentation":"\n            <summary>\n            Selects value for item sorting. When not set, <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.TextSelector\" /> property will be used.<br />\n            If you need complex sorting, pre-sort data manually or create a custom comparable property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortKeySelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.IComparable>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"AutoSort","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When set to <c>false</c>, items will no longer be sorted.<br />\n            Default value is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutoSort","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EmptyText","TypeName":"System.String","Documentation":"\n            <summary>\n            Text to display when the selection is empty (the <c>Value</c> property is <c>null</c> or empty).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EmptyText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NullDataText","TypeName":"System.String","Documentation":"\n            <summary>\n            Text to display when <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.Data\" /> is <c>null</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NullDataText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputText","TypeName":"System.String","Documentation":"\n            <summary>\n            Text to display in the input (default is a list of selected values).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputTextSelector","TypeName":"System.Func<System.Collections.Generic.IEnumerable<TItem>, System.String>","Documentation":"\n            <summary>\n            Function to build the text to be displayed in the input from selected items (default is a list of selected values).\n            </summary>\n            <remarks>Currently does not affect the chip being generated. Override <c>RenderChipValue()</c> method to influence the chip.</remarks>\n        ","Metadata":{"Common.PropertyName":"InputTextSelector","Common.GloballyQualifiedTypeName":"global::System.Func<global::System.Collections.Generic.IEnumerable<TItem>, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Enables filtering capabilities.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowFiltering","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"FilterPredicate","TypeName":"System.Func<TItem, System.String, System.Boolean>","Documentation":"\n            <summary>\n            Defines a custom filtering predicate to apply to the list of items.\n            If not specified, the default behavior filters items based on whether the item text (obtained via TextSelector) contains the filter query string.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterPredicate","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String, global::System.Boolean>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ClearFilterOnHide","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When enabled the filter will be cleared when the dropdown is closed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ClearFilterOnHide","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"FilterEmptyResultTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Template that defines what should be rendered in case of empty items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterEmptyResultTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FilterEmptyResultText","TypeName":"System.String","Documentation":"\n            <summary>\n            Text to display when the filtered results list is empty and when not using <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.FilterEmptyResultTemplate\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterEmptyResultText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AllowSelectAll","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Enables select all capabilities.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowSelectAll","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"SelectAllText","TypeName":"System.String","Documentation":"\n            <summary>\n            Text to display for the select all dropdown option.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectAllText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FilterSearchIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon displayed in filter input for searching the filter.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterSearchIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"FilterClearIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon displayed in filter input for clearing the filter.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterClearIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Collections.Generic.List<TValue>","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<TValue>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<TValue>>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.List<TValue>>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Collections.Generic.List<TValue>>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Collections.Generic.List<TValue>>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMultiSelect","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-972050482,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"HxMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMultiSelect","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1549948147,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMultiSelect","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":536088504,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"HxMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMultiSelect","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":465944314,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMultiSelect","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-73953166,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.FilterEmptyResultTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template that defines what should be rendered in case of empty items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FilterEmptyResultTemplate","ParentTag":"HxMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.FilterEmptyResultTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMultiSelect","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":546219772,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.FilterEmptyResultTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template that defines what should be rendered in case of empty items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FilterEmptyResultTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.FilterEmptyResultTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMultiSelect","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-47741293,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"HxMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMultiSelect","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-367983484,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMultiSelect","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1484879983,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"HxMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMultiSelect","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":214281093,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMultiSelect","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1836375088,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"HxMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMultiSelect","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-940858324,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMultiSelect","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":796052270,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Data-based list of radio buttons. Consider creating a custom picker derived from <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonListBase`2\" />.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxRadioButtonList\">https://havit.blazor.eu/components/HxRadioButtonList</see>\n            </summary>\n            <typeparam name=\"TValue\">Type of value.</typeparam>\n            <typeparam name=\"TItem\">Type of items.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxRadioButtonList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ItemValueSelector","TypeName":"System.Func<TItem, TValue>","Documentation":"\n            <summary>\n            Selects the value from the item.\n            Not required when <c>TValue</c> is the same as <c>TItem</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemValueSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"\n            <summary>\n            Items to display. \n            </summary>\n        ","Metadata":{"Common.PropertyName":"Data","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTextSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Selects the text to display from the item. Also used for chip text.\n            When not set, <c>ToString()</c> is used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTextSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Gets the HTML to display from the item.\n            When not set, <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList`2.ItemTextSelector\" /> is used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemSortKeySelector","TypeName":"System.Func<TItem, System.IComparable>","Documentation":"\n            <summary>\n            Selects the value to sort items. Uses the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList`2.ItemTextSelector\" /> property when not set.\n            When complex sorting is required, sort the data manually and don't let this component sort them. Alternatively, create a custom comparable property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSortKeySelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.IComparable>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for underlying radio-buttons (wrapping <c>div</c> element).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemCssClassSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Additional CSS class(es) for underlying radio-buttons (wrapping <c>div</c> element).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemInputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the <c>input</c> element of underlying radio-buttons.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemInputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemInputCssClassSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Additional CSS class(es) for the <c>input</c> element of underlying radio-button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemInputCssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTextCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the text of the underlying radio-buttons.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTextCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemTextCssClassSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Additional CSS class(es) for the text of the underlying radio-buttons.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTextCssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"AutoSort","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, items are sorted before displaying in the select.\n            The default value is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutoSort","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Inline","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows grouping radios on the same horizontal row by rendering them inline. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Inline","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.RadioButtonListSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.RadioButtonListSettings"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxRadioButtonList","Components.GenericTyped":"True"}},{"HashCode":-1805555104,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Data-based list of radio buttons. Consider creating a custom picker derived from <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonListBase`2\" />.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxRadioButtonList\">https://havit.blazor.eu/components/HxRadioButtonList</see>\n            </summary>\n            <typeparam name=\"TValue\">Type of value.</typeparam>\n            <typeparam name=\"TItem\">Type of items.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ItemValueSelector","TypeName":"System.Func<TItem, TValue>","Documentation":"\n            <summary>\n            Selects the value from the item.\n            Not required when <c>TValue</c> is the same as <c>TItem</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemValueSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"\n            <summary>\n            Items to display. \n            </summary>\n        ","Metadata":{"Common.PropertyName":"Data","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTextSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Selects the text to display from the item. Also used for chip text.\n            When not set, <c>ToString()</c> is used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTextSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Gets the HTML to display from the item.\n            When not set, <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList`2.ItemTextSelector\" /> is used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemSortKeySelector","TypeName":"System.Func<TItem, System.IComparable>","Documentation":"\n            <summary>\n            Selects the value to sort items. Uses the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList`2.ItemTextSelector\" /> property when not set.\n            When complex sorting is required, sort the data manually and don't let this component sort them. Alternatively, create a custom comparable property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSortKeySelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.IComparable>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for underlying radio-buttons (wrapping <c>div</c> element).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemCssClassSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Additional CSS class(es) for underlying radio-buttons (wrapping <c>div</c> element).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemInputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the <c>input</c> element of underlying radio-buttons.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemInputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemInputCssClassSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Additional CSS class(es) for the <c>input</c> element of underlying radio-button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemInputCssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTextCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) for the text of the underlying radio-buttons.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTextCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemTextCssClassSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Additional CSS class(es) for the text of the underlying radio-buttons.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTextCssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"AutoSort","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, items are sorted before displaying in the select.\n            The default value is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutoSort","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Inline","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows grouping radios on the same horizontal row by rendering them inline. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Inline","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.RadioButtonListSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.RadioButtonListSettings"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxRadioButtonList","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1298041115,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>.ItemTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Gets the HTML to display from the item.\n            When not set, <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList`2.ItemTextSelector\" /> is used.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"HxRadioButtonList"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>.ItemTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxRadioButtonList","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":318697960,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>.ItemTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Gets the HTML to display from the item.\n            When not set, <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList`2.ItemTextSelector\" /> is used.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>.ItemTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxRadioButtonList","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":699481392,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"HxRadioButtonList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxRadioButtonList","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1734954545,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxRadioButtonList","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1955154318,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"HxRadioButtonList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxRadioButtonList","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1168184086,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxRadioButtonList","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1914230717,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"HxRadioButtonList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxRadioButtonList","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2110504078,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxRadioButtonList","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1928953323,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Select - DropDownList - single-item picker. Consider creating a custom picker derived from <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2\" />.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxSelect\">https://havit.blazor.eu/components/HxSelect</see>\n            </summary>\n            <typeparam name=\"TValue\">The type of value.</typeparam>\n            <typeparam name=\"TItem\">The type of items.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Nullable","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether <c>null</c> is a valid value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Nullable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"NullText","TypeName":"System.String","Documentation":"\n            <summary>\n            The text to display for the <c>null</c> value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NullText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NullDataText","TypeName":"System.String","Documentation":"\n            <summary>\n            The text to display when <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSelect`2.Data\" /> is <c>null</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NullDataText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueSelector","TypeName":"System.Func<TItem, TValue>","Documentation":"\n            <summary>\n            Selects the value from the item.\n            Not required when <c>TValueType</c> is the same as <c>TItemTime</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"\n            <summary>\n            The items to display. \n            </summary>\n        ","Metadata":{"Common.PropertyName":"Data","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TextSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Selects the text to display from the item.\n            When not set, <c>ToString()</c> is used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SortKeySelector","TypeName":"System.Func<TItem, System.IComparable>","Documentation":"\n            <summary>\n            Selects the value to sort items. Uses the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSelect`2.TextSelector\" /> property when not set.\n            When complex sorting is required, sort the data manually and don't let this component sort them. Alternatively, create a custom comparable property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortKeySelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.IComparable>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"AutoSort","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, the items are sorted before displaying in the select.\n            The default value is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutoSort","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.SelectSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSelect.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.SelectSettings"}},{"Kind":"Components.Component","Name":"LabelType","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType?","Metadata":{"Common.PropertyName":"LabelType","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType?"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSelect","Components.GenericTyped":"True"}},{"HashCode":2021887910,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Select - DropDownList - single-item picker. Consider creating a custom picker derived from <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2\" />.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxSelect\">https://havit.blazor.eu/components/HxSelect</see>\n            </summary>\n            <typeparam name=\"TValue\">The type of value.</typeparam>\n            <typeparam name=\"TItem\">The type of items.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Nullable","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether <c>null</c> is a valid value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Nullable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"NullText","TypeName":"System.String","Documentation":"\n            <summary>\n            The text to display for the <c>null</c> value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NullText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NullDataText","TypeName":"System.String","Documentation":"\n            <summary>\n            The text to display when <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSelect`2.Data\" /> is <c>null</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NullDataText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueSelector","TypeName":"System.Func<TItem, TValue>","Documentation":"\n            <summary>\n            Selects the value from the item.\n            Not required when <c>TValueType</c> is the same as <c>TItemTime</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Documentation":"\n            <summary>\n            The items to display. \n            </summary>\n        ","Metadata":{"Common.PropertyName":"Data","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TextSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Selects the text to display from the item.\n            When not set, <c>ToString()</c> is used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SortKeySelector","TypeName":"System.Func<TItem, System.IComparable>","Documentation":"\n            <summary>\n            Selects the value to sort items. Uses the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSelect`2.TextSelector\" /> property when not set.\n            When complex sorting is required, sort the data manually and don't let this component sort them. Alternatively, create a custom comparable property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortKeySelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.IComparable>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"AutoSort","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, the items are sorted before displaying in the select.\n            The default value is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutoSort","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.SelectSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSelect.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.SelectSettings"}},{"Kind":"Components.Component","Name":"LabelType","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType?","Metadata":{"Common.PropertyName":"LabelType","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType?"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSelect","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-841613957,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"HxSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSelect","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2007804556,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSelect","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-527431810,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"HxSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSelect","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1991309826,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSelect","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-275836035,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"HxSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSelect","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1662208738,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSelect","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1808504236,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"HxSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSelect","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-930434273,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSelect","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-990338025,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"HxSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSelect","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1971573244,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSelect","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-694902301,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Switch input.<br />\n            (Replaces the former <c>HxInputSwitch</c> component which was dropped in v4.0.0.)<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxSwitch\">https://havit.blazor.eu/components/HxSwitch</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxSwitch"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CheckboxSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CheckboxSettings"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text to display next to the checkbox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content to display next to the checkbox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TextCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class to apply to the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Inline","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows grouping checkboxes on the same horizontal row by rendering them inline. The default value is <c>false</c>.\n            This only works when there is no label, no hint, and no validation message.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Inline","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Reverse","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Put the checkbox on the opposite side - first text, then checkbox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Reverse","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSwitch"}},{"HashCode":323119177,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Switch input.<br />\n            (Replaces the former <c>HxInputSwitch</c> component which was dropped in v4.0.0.)<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxSwitch\">https://havit.blazor.eu/components/HxSwitch</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CheckboxSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CheckboxSettings"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text to display next to the checkbox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content to display next to the checkbox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TextCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class to apply to the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Inline","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows grouping checkboxes on the same horizontal row by rendering them inline. The default value is <c>false</c>.\n            This only works when there is no label, no hint, and no validation message.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Inline","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Reverse","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Put the checkbox on the opposite side - first text, then checkbox.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Reverse","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSwitch","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1490078148,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch.TextTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content to display next to the checkbox.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TextTemplate","ParentTag":"HxSwitch"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch.TextTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSwitch","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-219208986,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch.TextTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content to display next to the checkbox.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TextTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch.TextTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSwitch","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1101132320,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"HxSwitch"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSwitch","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1639413271,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSwitch","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-944999707,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"HxSwitch"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSwitch","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1477203556,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSwitch","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1754239535,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"HxSwitch"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSwitch","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1196134080,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSwitch","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-941690069,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.EditContext\" />.<br />\n            Reimplementation of Blazor <see cref=\"T:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1\" /> as <see href=\"https://getbootstrap.com/docs/5.3/forms/validation/\">Bootstrap 5 validation</see>.<br />\n            Used by <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1\" /> and derived components.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxValidationMessage\">https://havit.blazor.eu/components/HxValidationMessage</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            EditContext. For exceptional use where EditContext is not used as a CascadingParameter.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            Mutual exclusive with <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.ForFieldName\" /> and <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.ForFieldNames\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ForFieldName","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            Mutual exclusive with <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.For\" /> and <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.ForFieldNames\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ForFieldName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ForFieldNames","TypeName":"System.String[]","Documentation":"\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            Mutual exclusive with <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.For\" /> and <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.ForFieldName\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ForFieldNames","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Mode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxValidationMessage","Components.GenericTyped":"True"}},{"HashCode":-1504125782,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.EditContext\" />.<br />\n            Reimplementation of Blazor <see cref=\"T:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1\" /> as <see href=\"https://getbootstrap.com/docs/5.3/forms/validation/\">Bootstrap 5 validation</see>.<br />\n            Used by <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1\" /> and derived components.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxValidationMessage\">https://havit.blazor.eu/components/HxValidationMessage</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            EditContext. For exceptional use where EditContext is not used as a CascadingParameter.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            Mutual exclusive with <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.ForFieldName\" /> and <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.ForFieldNames\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ForFieldName","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            Mutual exclusive with <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.For\" /> and <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.ForFieldNames\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ForFieldName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ForFieldNames","TypeName":"System.String[]","Documentation":"\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            Mutual exclusive with <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.For\" /> and <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.ForFieldName\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ForFieldNames","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode","IsEnum":true,"Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Mode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxValidationMessage","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":68292227,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            A search input component with automatic suggestions, initial dropdown template, and support for free-text queries.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxSearchBox\">https://havit.blazor.eu/components/HxSearchBox</see>\n            </summary>\n            <typeparam name=\"TItem\"></typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxSearchBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.SearchBoxSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.SearchBoxSettings"}},{"Kind":"Components.Component","Name":"DataProvider","TypeName":"Havit.Blazor.Components.Web.Bootstrap.SearchBoxDataProviderDelegate<TItem>","Documentation":"\n            <summary>\n            Method (delegate) that provides data for the suggestions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataProvider","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.SearchBoxDataProviderDelegate<TItem>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows you to disable the input. The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TextQuery","TypeName":"System.String","Documentation":"\n            <summary>\n            Text written by the user (input text).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextQuery","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextQueryChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Common.PropertyName":"TextQueryChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnTextQueryTriggered","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Raised when the enter key is pressed or when the text-query item is selected in the dropdown menu.\n            (Does not trigger when <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.AllowTextQuery\" /> is <c>false</c>.)\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnTextQueryTriggered","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnItemSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"\n            <summary>\n            Occurs when any of the suggested items (other than plain text-query) is selected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnItemSelected","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemSelectionBehavior","TypeName":"Havit.Blazor.Components.Web.Bootstrap.SearchBoxItemSelectionBehavior?","Documentation":"\n            <summary>\n            Behavior when the item is selected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSelectionBehavior","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.SearchBoxItemSelectionBehavior?"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Placeholder text for the search input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemTitleSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Selector to display the item title from the data item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTitleSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemSubtitleSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Selector to display the item subtitle from the data item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSubtitleSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemIconSelector","TypeName":"System.Func<TItem, Havit.Blazor.Components.Web.IconBase>","Documentation":"\n            <summary>\n            Selector to display the icon from the data item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemIconSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::Havit.Blazor.Components.Web.IconBase>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Template for the item content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TextQueryItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.String>","Documentation":"\n            <summary>\n            Template for the text-query item content (requires <c><see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.AllowTextQuery\" />=\"true\"</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextQueryItemTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.String>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NotFoundTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Rendered when the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.DataProvider\" /> doesn't return any data.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotFoundTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DefaultContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Rendered when no input is entered (i.e. initial state).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DefaultContentTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS classes for the dropdown.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS classes for the items in the dropdown menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS classes for the search box input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the input-group span.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SearchIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon of the input when no text is written.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SearchIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"ClearIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon of the input, displayed when text is entered, allowing the user to clear the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ClearIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"DropdownOffset","TypeName":"(System.Int32 Skidding, System.Int32 Distance)","Documentation":"\n            <summary>\n            Offset between the dropdown and the input.\n            <see href=\"https://popper.js.org/docs/v2/modifiers/offset/#options\" />\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropdownOffset","Common.GloballyQualifiedTypeName":"(global::System.Int32 Skidding, global::System.Int32 Distance)"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            Label of the input field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelType","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType","IsEnum":true,"Documentation":"\n            <summary>\n            Label type of the input field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelType","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Input size of the input field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"MinimumLength","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Minimum length to call the data provider (display any results). Default is <c>2</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinimumLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Debounce delay in milliseconds. Default is <c>300</c> ms.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Delay","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"AllowTextQuery","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether text-query mode is enabled (accepts free text in addition to suggested items).<br />\n            Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowTextQuery","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input-group at the end of the input.<br />\n            Hides the search icon when used!\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input-group at the end of the input.<br />\n            Hides the search icon when used!\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSearchBox","Components.GenericTyped":"True"}},{"HashCode":-1924100714,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            A search input component with automatic suggestions, initial dropdown template, and support for free-text queries.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxSearchBox\">https://havit.blazor.eu/components/HxSearchBox</see>\n            </summary>\n            <typeparam name=\"TItem\"></typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.SearchBoxSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.SearchBoxSettings"}},{"Kind":"Components.Component","Name":"DataProvider","TypeName":"Havit.Blazor.Components.Web.Bootstrap.SearchBoxDataProviderDelegate<TItem>","Documentation":"\n            <summary>\n            Method (delegate) that provides data for the suggestions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataProvider","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.SearchBoxDataProviderDelegate<TItem>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows you to disable the input. The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TextQuery","TypeName":"System.String","Documentation":"\n            <summary>\n            Text written by the user (input text).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextQuery","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextQueryChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Common.PropertyName":"TextQueryChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnTextQueryTriggered","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Raised when the enter key is pressed or when the text-query item is selected in the dropdown menu.\n            (Does not trigger when <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.AllowTextQuery\" /> is <c>false</c>.)\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnTextQueryTriggered","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnItemSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"\n            <summary>\n            Occurs when any of the suggested items (other than plain text-query) is selected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnItemSelected","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemSelectionBehavior","TypeName":"Havit.Blazor.Components.Web.Bootstrap.SearchBoxItemSelectionBehavior?","Documentation":"\n            <summary>\n            Behavior when the item is selected.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSelectionBehavior","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.SearchBoxItemSelectionBehavior?"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Placeholder text for the search input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemTitleSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Selector to display the item title from the data item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTitleSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemSubtitleSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Selector to display the item subtitle from the data item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSubtitleSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemIconSelector","TypeName":"System.Func<TItem, Havit.Blazor.Components.Web.IconBase>","Documentation":"\n            <summary>\n            Selector to display the icon from the data item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemIconSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::Havit.Blazor.Components.Web.IconBase>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Template for the item content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TextQueryItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.String>","Documentation":"\n            <summary>\n            Template for the text-query item content (requires <c><see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.AllowTextQuery\" />=\"true\"</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextQueryItemTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.String>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NotFoundTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Rendered when the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.DataProvider\" /> doesn't return any data.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotFoundTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DefaultContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Rendered when no input is entered (i.e. initial state).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DefaultContentTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS classes for the dropdown.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS classes for the items in the dropdown menu.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS classes for the search box input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the input-group span.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SearchIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon of the input when no text is written.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SearchIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"ClearIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon of the input, displayed when text is entered, allowing the user to clear the text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ClearIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"DropdownOffset","TypeName":"(System.Int32 Skidding, System.Int32 Distance)","Documentation":"\n            <summary>\n            Offset between the dropdown and the input.\n            <see href=\"https://popper.js.org/docs/v2/modifiers/offset/#options\" />\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropdownOffset","Common.GloballyQualifiedTypeName":"(global::System.Int32 Skidding, global::System.Int32 Distance)"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            Label of the input field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelType","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType","IsEnum":true,"Documentation":"\n            <summary>\n            Label type of the input field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelType","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            Input size of the input field.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"MinimumLength","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Minimum length to call the data provider (display any results). Default is <c>2</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinimumLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Debounce delay in milliseconds. Default is <c>300</c> ms.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Delay","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"AllowTextQuery","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether text-query mode is enabled (accepts free text in addition to suggested items).<br />\n            Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowTextQuery","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input-group at the end of the input.<br />\n            Hides the search icon when used!\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input-group at the end of the input.<br />\n            Hides the search icon when used!\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSearchBox","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1522087043,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.ItemTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template for the item content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"HxSearchBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.ItemTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSearchBox","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1592483030,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.ItemTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template for the item content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.ItemTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSearchBox","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-209198985,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.TextQueryItemTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template for the text-query item content (requires <c><see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.AllowTextQuery\" />=\"true\"</c>).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TextQueryItemTemplate","ParentTag":"HxSearchBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'TextQueryItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.TextQueryItemTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSearchBox","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1315437245,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.TextQueryItemTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template for the text-query item content (requires <c><see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.AllowTextQuery\" />=\"true\"</c>).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TextQueryItemTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'TextQueryItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.TextQueryItemTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSearchBox","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1381410258,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.NotFoundTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Rendered when the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.DataProvider\" /> doesn't return any data.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFoundTemplate","ParentTag":"HxSearchBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.NotFoundTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSearchBox","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-876099279,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.NotFoundTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Rendered when the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.DataProvider\" /> doesn't return any data.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFoundTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.NotFoundTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSearchBox","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-423678642,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.DefaultContentTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Rendered when no input is entered (i.e. initial state).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DefaultContentTemplate","ParentTag":"HxSearchBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.DefaultContentTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSearchBox","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1761307163,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.DefaultContentTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Rendered when no input is entered (i.e. initial state).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DefaultContentTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.DefaultContentTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSearchBox","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1558723143,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"HxSearchBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSearchBox","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-574246391,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSearchBox","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1420517870,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input-group at the end of the input.<br />\n            Hides the search icon when used!\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"HxSearchBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSearchBox","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1998975754,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input-group at the end of the input.<br />\n            Hides the search icon when used!\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSearchBox","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1807866579,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Column for displaying the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu\" /> in the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxGrid\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxContextMenuGridColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Order","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The order (display index) of the column.\n            Columns are displayed in the order of this property.\n            Columns with the same value are displayed in the order of appearance in the code (when the columns are not conditionally displayed using @if).\n            </summary>\n            <exception cref=\"T:System.ArgumentException\">Value is <c>Int32.MinValue</c> or <c>Int32.MaxValue</c>.</exception>\n        ","Metadata":{"Common.PropertyName":"Order","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ItemCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Returns the item CSS class (not dependent on data).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemCssClassSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Returns the item CSS class for the specific data item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Context menu template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxContextMenuGridColumn","Components.GenericTyped":"True"}},{"HashCode":-1060243091,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Column for displaying the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu\" /> in the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxGrid\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Order","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The order (display index) of the column.\n            Columns are displayed in the order of this property.\n            Columns with the same value are displayed in the order of appearance in the code (when the columns are not conditionally displayed using @if).\n            </summary>\n            <exception cref=\"T:System.ArgumentException\">Value is <c>Int32.MinValue</c> or <c>Int32.MaxValue</c>.</exception>\n        ","Metadata":{"Common.PropertyName":"Order","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ItemCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Returns the item CSS class (not dependent on data).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemCssClassSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Returns the item CSS class for the specific data item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Context menu template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxContextMenuGridColumn","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1761180227,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn<TItem>.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Context menu template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxContextMenuGridColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn<TItem>.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxContextMenuGridColumn","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":860196872,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn<TItem>.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Context menu template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn<TItem>.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxContextMenuGridColumn","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":542110745,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Grid to display tabular data from data source. Includes support for client-side and server-side paging &amp; sorting (or virtualized scrolling as needed).<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxGrid\">https://havit.blazor.eu/components/HxGrid</see>\n            </summary>\n            <typeparam name=\"TItem\">Type of row data item.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxGrid"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"True"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.GridSettings","Documentation":"\n            <summary>\n            Specifies the grid settings. Overrides default settings in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxGrid.Defaults\" /> and can be further overridden by individual parameters.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.GridSettings"}},{"Kind":"Components.Component","Name":"DataProvider","TypeName":"Havit.Blazor.Components.Web.Bootstrap.GridDataProviderDelegate<TItem>","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Data provider delegate for the grid. The data provider is responsible for fetching items to be rendered in the grid.\n            It must always return an instance of <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.GridDataProviderResult`1\" /> and cannot return null.\n            </summary>\n            <remarks>\n            The delegate is invoked to fetch data based on the current grid state, including pagination and sorting parameters.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"DataProvider","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.GridDataProviderDelegate<TItem>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectionEnabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables or disables single item selection by row click. Can be used alongside multi-selection.\n            Defaults to <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectionEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MultiSelectionEnabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables or disables multi-item selection using checkboxes in the first column.\n            Can be used with single selection.\n            Defaults to <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MultiSelectionEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Columns","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Grid columns.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Columns","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LoadingDataTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Defines a template for the initial data loading phase.\n            This template is not used when loading data for sorting or paging operations.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LoadingDataTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EmptyDataTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Template for rendering when the data source is empty but not null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EmptyDataTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LoadMoreTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Havit.Blazor.Components.Web.Bootstrap.GridLoadMoreTemplateContext>","Documentation":"\n            <summary>\n            Template for the \"load more\" button (or other UI element).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LoadMoreTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Havit.Blazor.Components.Web.Bootstrap.GridLoadMoreTemplateContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SelectedDataItem","TypeName":"TItem","Documentation":"\n            <summary>\n            Represents the currently selected data item in the grid for data binding and state synchronization. Changes trigger <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.SelectedDataItemChanged\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedDataItem","Common.GloballyQualifiedTypeName":"TItem","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedDataItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"\n            <summary>\n            Event that fires when the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.SelectedDataItem\" /> property changes. This event is intended for data binding and state synchronization.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedDataItemChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedDataItems","TypeName":"System.Collections.Generic.HashSet<TItem>","Documentation":"\n            <summary>\n            Represents the collection of currently selected data items in the grid, primarily for data binding and state management in multi-selection scenarios.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedDataItems","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.HashSet<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedDataItemsChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.HashSet<TItem>>","Documentation":"\n            <summary>\n            Event that fires when the collection of selected data items changes. This is particularly relevant in multi-selection scenarios. It is intended for data binding and state synchronization.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedDataItemsChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.HashSet<TItem>>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ContentNavigationMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.GridContentNavigationMode?","Documentation":"\n            <summary>\n            The strategy for how data items are displayed and loaded into the grid. Supported modes include pagination, load more, and infinite scroll.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContentNavigationMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.GridContentNavigationMode?"}},{"Kind":"Components.Component","Name":"PageSize","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The number of items to display per page. Applicable for grid modes such as pagination and load more. Set to 0 to disable paging.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageSize","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ShowFooterWhenEmptyData","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Determines whether the grid footer is rendered when the grid's data source is empty. The default value is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowFooterWhenEmptyData","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"PagerSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.PagerSettings","Documentation":"\n            <summary>\n            Pager settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PagerSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.PagerSettings"}},{"Kind":"Components.Component","Name":"LoadMoreButtonText","TypeName":"System.String","Documentation":"\n            <summary>\n            The text for the \"Load more\" button, used in the <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.GridContentNavigationMode.LoadMore\" /> navigation mode. The default text is obtained from localization resources.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LoadMoreButtonText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LoadMoreButtonSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Configuration for the \"Load more\" button, including appearance and behavior settings. Relevant in grid modes that use a \"Load more\" button for data navigation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LoadMoreButtonSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"CurrentUserState","TypeName":"Havit.Blazor.Components.Web.Bootstrap.GridUserState","Documentation":"\n            <summary>\n            Gets or sets the current state of the grid, including pagination and sorting information. This state can be used to restore the grid to a specific configuration or to synchronize it with external state management systems.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CurrentUserState","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.GridUserState"}},{"Kind":"Components.Component","Name":"CurrentUserStateChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.Bootstrap.GridUserState>","Documentation":"\n            <summary>\n            Event that fires when the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.CurrentUserState\" /> property changes. This event can be used to react to changes in the grid's state, such as sorting or pagination adjustments.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CurrentUserStateChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.Bootstrap.GridUserState>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"InProgress","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether the grid is currently processing data, such as loading or refreshing items.\n            When set to <c>null</c>, the progress state is automatically managed based on the data provider's activity.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InProgress","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"TableContainerCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class for the <c>div</c> element that wraps the main <c>table</c> element. Excludes the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxPager\" /> which is not wrapped in this <c>div</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TableContainerCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TableCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class for the main <c>table</c> element of the grid. This class allows for styling and customization of the grid's appearance.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TableCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderRowCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class for the header <c>tr</c> element in the grid. Enables specific styling for the header row separate from the rest of the grid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderRowCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemRowCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class for the data <c>tr</c> elements in the grid. This class is applied to each row of data, providing a way to customize the styling of data rows.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemRowCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemRowHeight","TypeName":"System.Single?","Documentation":"\n            <summary>\n            Height of each item row, used primarily in calculations for infinite scrolling.\n            The default value (41px) corresponds to the typical row height in the Bootstrap 5 default theme.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemRowHeight","Common.GloballyQualifiedTypeName":"global::System.Single?"}},{"Kind":"Components.Component","Name":"ItemRowCssClassSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Function that defines a custom CSS class for each data <c>tr</c> element based on the item it represents.\n            This allows for conditional styling of rows based on their data.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemRowCssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemKeySelector","TypeName":"System.Func<TItem, System.Object>","Documentation":"\n             <summary>\n             Optionally defines a value for @key on each rendered row. Typically this should be used to specify a\n             unique identifier, such as a primary key value, for each data item.\n            \n             This allows the grid to preserve the association between row elements and data items based on their\n             unique identifiers, even when the TGridItem instances are replaced by new copies (for\n             example, after a new query against the underlying data store).\n            \n             If not set, the @key will be the TItem instance itself.\n             </summary>\n             <remarks>Inspired by QuickGrid</remarks>\n        ","Metadata":{"Common.PropertyName":"ItemKeySelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.Object>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterRowCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            A custom CSS class for the footer <c>tr</c> element in the grid. This allows styling of the grid footer independently of other grid elements.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterRowCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PlaceholdersRowCount","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The number of placeholder rows to be rendered in the grid. Placeholders are used when loading data or when <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.LoadingDataTemplate\" />\n            is not set. Set to 0 to disable placeholders. Default value is 5.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PlaceholdersRowCount","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Defines the number of additional items to be rendered before and after the visible region in an infinite scrolling scenario.\n            This helps to reduce the frequency of rendering during scrolling, though higher values increase the number of elements present in the page.\n            Default is 3.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OverscanCount","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Responsive","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Determines if the grid should be scrollable horizontally across different breakpoints.\n            When set to true, the <c>table-responsive</c> class is added to the table.\n            Default is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Responsive","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Hover","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Enables or disables the hover state on table rows within a <c>&lt;tbody&gt;</c>.\n            When not set, the table is hoverable by default if selection is enabled. This property customizes the hover behavior of the grid rows.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hover","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Striped","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Adds zebra-striping to any table row within the <c>&lt;tbody&gt;</c> for better readability.\n            Rows will have alternating background colors.\n            Default is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Striped","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"SortAscendingIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon to indicate the ascending sort direction in the column header. This icon is displayed when a column is sorted in ascending order.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortAscendingIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"SortDescendingIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon to indicate the descending sort direction in the column header. This icon is shown when a column is sorted in descending order.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortDescendingIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGrid","Components.GenericTyped":"True"}},{"HashCode":-1058174870,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Grid to display tabular data from data source. Includes support for client-side and server-side paging &amp; sorting (or virtualized scrolling as needed).<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxGrid\">https://havit.blazor.eu/components/HxGrid</see>\n            </summary>\n            <typeparam name=\"TItem\">Type of row data item.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"True"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.GridSettings","Documentation":"\n            <summary>\n            Specifies the grid settings. Overrides default settings in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxGrid.Defaults\" /> and can be further overridden by individual parameters.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.GridSettings"}},{"Kind":"Components.Component","Name":"DataProvider","TypeName":"Havit.Blazor.Components.Web.Bootstrap.GridDataProviderDelegate<TItem>","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Data provider delegate for the grid. The data provider is responsible for fetching items to be rendered in the grid.\n            It must always return an instance of <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.GridDataProviderResult`1\" /> and cannot return null.\n            </summary>\n            <remarks>\n            The delegate is invoked to fetch data based on the current grid state, including pagination and sorting parameters.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"DataProvider","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.GridDataProviderDelegate<TItem>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectionEnabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables or disables single item selection by row click. Can be used alongside multi-selection.\n            Defaults to <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectionEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MultiSelectionEnabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enables or disables multi-item selection using checkboxes in the first column.\n            Can be used with single selection.\n            Defaults to <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MultiSelectionEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Columns","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Grid columns.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Columns","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LoadingDataTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Defines a template for the initial data loading phase.\n            This template is not used when loading data for sorting or paging operations.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LoadingDataTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EmptyDataTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Template for rendering when the data source is empty but not null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EmptyDataTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LoadMoreTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Havit.Blazor.Components.Web.Bootstrap.GridLoadMoreTemplateContext>","Documentation":"\n            <summary>\n            Template for the \"load more\" button (or other UI element).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LoadMoreTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Havit.Blazor.Components.Web.Bootstrap.GridLoadMoreTemplateContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SelectedDataItem","TypeName":"TItem","Documentation":"\n            <summary>\n            Represents the currently selected data item in the grid for data binding and state synchronization. Changes trigger <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.SelectedDataItemChanged\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedDataItem","Common.GloballyQualifiedTypeName":"TItem","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedDataItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"\n            <summary>\n            Event that fires when the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.SelectedDataItem\" /> property changes. This event is intended for data binding and state synchronization.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedDataItemChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedDataItems","TypeName":"System.Collections.Generic.HashSet<TItem>","Documentation":"\n            <summary>\n            Represents the collection of currently selected data items in the grid, primarily for data binding and state management in multi-selection scenarios.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedDataItems","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.HashSet<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedDataItemsChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.HashSet<TItem>>","Documentation":"\n            <summary>\n            Event that fires when the collection of selected data items changes. This is particularly relevant in multi-selection scenarios. It is intended for data binding and state synchronization.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedDataItemsChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.HashSet<TItem>>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ContentNavigationMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.GridContentNavigationMode?","Documentation":"\n            <summary>\n            The strategy for how data items are displayed and loaded into the grid. Supported modes include pagination, load more, and infinite scroll.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContentNavigationMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.GridContentNavigationMode?"}},{"Kind":"Components.Component","Name":"PageSize","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The number of items to display per page. Applicable for grid modes such as pagination and load more. Set to 0 to disable paging.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageSize","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ShowFooterWhenEmptyData","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Determines whether the grid footer is rendered when the grid's data source is empty. The default value is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowFooterWhenEmptyData","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"PagerSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.PagerSettings","Documentation":"\n            <summary>\n            Pager settings.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PagerSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.PagerSettings"}},{"Kind":"Components.Component","Name":"LoadMoreButtonText","TypeName":"System.String","Documentation":"\n            <summary>\n            The text for the \"Load more\" button, used in the <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.GridContentNavigationMode.LoadMore\" /> navigation mode. The default text is obtained from localization resources.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LoadMoreButtonText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LoadMoreButtonSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Configuration for the \"Load more\" button, including appearance and behavior settings. Relevant in grid modes that use a \"Load more\" button for data navigation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LoadMoreButtonSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"CurrentUserState","TypeName":"Havit.Blazor.Components.Web.Bootstrap.GridUserState","Documentation":"\n            <summary>\n            Gets or sets the current state of the grid, including pagination and sorting information. This state can be used to restore the grid to a specific configuration or to synchronize it with external state management systems.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CurrentUserState","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.GridUserState"}},{"Kind":"Components.Component","Name":"CurrentUserStateChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.Bootstrap.GridUserState>","Documentation":"\n            <summary>\n            Event that fires when the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.CurrentUserState\" /> property changes. This event can be used to react to changes in the grid's state, such as sorting or pagination adjustments.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CurrentUserStateChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.Bootstrap.GridUserState>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"InProgress","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether the grid is currently processing data, such as loading or refreshing items.\n            When set to <c>null</c>, the progress state is automatically managed based on the data provider's activity.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InProgress","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"TableContainerCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class for the <c>div</c> element that wraps the main <c>table</c> element. Excludes the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxPager\" /> which is not wrapped in this <c>div</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TableContainerCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TableCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class for the main <c>table</c> element of the grid. This class allows for styling and customization of the grid's appearance.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TableCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderRowCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class for the header <c>tr</c> element in the grid. Enables specific styling for the header row separate from the rest of the grid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderRowCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemRowCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class for the data <c>tr</c> elements in the grid. This class is applied to each row of data, providing a way to customize the styling of data rows.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemRowCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemRowHeight","TypeName":"System.Single?","Documentation":"\n            <summary>\n            Height of each item row, used primarily in calculations for infinite scrolling.\n            The default value (41px) corresponds to the typical row height in the Bootstrap 5 default theme.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemRowHeight","Common.GloballyQualifiedTypeName":"global::System.Single?"}},{"Kind":"Components.Component","Name":"ItemRowCssClassSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Function that defines a custom CSS class for each data <c>tr</c> element based on the item it represents.\n            This allows for conditional styling of rows based on their data.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemRowCssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemKeySelector","TypeName":"System.Func<TItem, System.Object>","Documentation":"\n             <summary>\n             Optionally defines a value for @key on each rendered row. Typically this should be used to specify a\n             unique identifier, such as a primary key value, for each data item.\n            \n             This allows the grid to preserve the association between row elements and data items based on their\n             unique identifiers, even when the TGridItem instances are replaced by new copies (for\n             example, after a new query against the underlying data store).\n            \n             If not set, the @key will be the TItem instance itself.\n             </summary>\n             <remarks>Inspired by QuickGrid</remarks>\n        ","Metadata":{"Common.PropertyName":"ItemKeySelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.Object>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterRowCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            A custom CSS class for the footer <c>tr</c> element in the grid. This allows styling of the grid footer independently of other grid elements.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterRowCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PlaceholdersRowCount","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The number of placeholder rows to be rendered in the grid. Placeholders are used when loading data or when <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.LoadingDataTemplate\" />\n            is not set. Set to 0 to disable placeholders. Default value is 5.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PlaceholdersRowCount","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Defines the number of additional items to be rendered before and after the visible region in an infinite scrolling scenario.\n            This helps to reduce the frequency of rendering during scrolling, though higher values increase the number of elements present in the page.\n            Default is 3.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OverscanCount","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Responsive","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Determines if the grid should be scrollable horizontally across different breakpoints.\n            When set to true, the <c>table-responsive</c> class is added to the table.\n            Default is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Responsive","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Hover","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Enables or disables the hover state on table rows within a <c>&lt;tbody&gt;</c>.\n            When not set, the table is hoverable by default if selection is enabled. This property customizes the hover behavior of the grid rows.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hover","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Striped","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Adds zebra-striping to any table row within the <c>&lt;tbody&gt;</c> for better readability.\n            Rows will have alternating background colors.\n            Default is false.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Striped","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"SortAscendingIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon to indicate the ascending sort direction in the column header. This icon is displayed when a column is sorted in ascending order.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortAscendingIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"SortDescendingIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon to indicate the descending sort direction in the column header. This icon is shown when a column is sorted in descending order.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortDescendingIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGrid","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":631812633,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>.Columns","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Grid columns.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Columns","ParentTag":"HxGrid"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>.Columns","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGrid","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-726732016,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>.Columns","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Grid columns.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Columns","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxGrid"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>.Columns","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGrid","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-683067374,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>.LoadingDataTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Defines a template for the initial data loading phase.\n            This template is not used when loading data for sorting or paging operations.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LoadingDataTemplate","ParentTag":"HxGrid"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>.LoadingDataTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGrid","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1208020208,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>.LoadingDataTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Defines a template for the initial data loading phase.\n            This template is not used when loading data for sorting or paging operations.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LoadingDataTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxGrid"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>.LoadingDataTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGrid","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":307093479,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>.EmptyDataTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template for rendering when the data source is empty but not null.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EmptyDataTemplate","ParentTag":"HxGrid"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>.EmptyDataTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGrid","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2077936070,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>.EmptyDataTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template for rendering when the data source is empty but not null.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EmptyDataTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxGrid"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>.EmptyDataTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGrid","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":39148682,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>.LoadMoreTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template for the \"load more\" button (or other UI element).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LoadMoreTemplate","ParentTag":"HxGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'LoadMoreTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>.LoadMoreTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGrid","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1088796953,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>.LoadMoreTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template for the \"load more\" button (or other UI element).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LoadMoreTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'LoadMoreTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>.LoadMoreTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGrid","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-989905554,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Grid column.\n            </summary>\n            <typeparam name=\"TItem\">Grid row data type.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxGridColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Column unique identifier.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the column is visible (otherwise the column is hidden).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Order","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The order (display index) of the column.\n            Columns are displayed in the order of this property.\n            Columns with the same value are displayed in the order of appearance in the code (when the columns are not conditionally displayed using @if).\n            </summary>\n            <exception cref=\"T:System.ArgumentException\">Value is <c>Int32.MinValue</c> or <c>Int32.MaxValue</c>.</exception>\n        ","Metadata":{"Common.PropertyName":"Order","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Documentation":"\n            <summary>\n            Header cell text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Havit.Blazor.Components.Web.Bootstrap.GridHeaderCellContext>","Documentation":"\n            <summary>\n            Header cell template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Havit.Blazor.Components.Web.Bootstrap.GridHeaderCellContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Header cell CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemTextSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Returns text for the item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTextSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Returns template for the item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Returns item CSS class (not dependent on data).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemCssClassSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Returns item CSS class for the specific date item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"PlaceholderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Havit.Blazor.Components.Web.Bootstrap.GridPlaceholderCellContext>","Documentation":"\n            <summary>\n            Placeholder cell template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PlaceholderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Havit.Blazor.Components.Web.Bootstrap.GridPlaceholderCellContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FooterText","TypeName":"System.String","Documentation":"\n            <summary>\n            Footer cell text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Havit.Blazor.Components.Web.Bootstrap.GridFooterCellContext>","Documentation":"\n            <summary>\n            Footer cell template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Havit.Blazor.Components.Web.Bootstrap.GridFooterCellContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FooterCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Footer cell CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SortString","TypeName":"System.String","Documentation":"\n            <summary>\n            Returns column sorting as a string.\n            Used to set sorting as a string, i.e., to get value to pass to the backend.\n            Ignored for client-side sorting.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortString","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SortKeySelector","TypeName":"System.Linq.Expressions.Expression<System.Func<TItem, System.IComparable>>","Documentation":"\n            <summary>\n            Returns column sorting expression for automatic grid sorting.\n            To be used for \"strongly typed\" setting of sorting, required for client-side sorting.\n            Must be <see cref=\"T:System.IComparable\" />.\n            Sorting of the column does not support multiple expressions. Create an artificial property and implement <see cref=\"T:System.IComparable\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortKeySelector","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TItem, global::System.IComparable>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SortDirection","TypeName":"Havit.Collections.SortDirection","IsEnum":true,"Documentation":"\n            <summary>\n            Initial sorting direction. Default is <see cref=\"F:Havit.Collections.SortDirection.Ascending\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortDirection","Common.GloballyQualifiedTypeName":"global::Havit.Collections.SortDirection"}},{"Kind":"Components.Component","Name":"IsDefaultSortColumn","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates that the sorting on the column is default (primary) on the grid.\n            Set <c>true</c> for the column which is to be used for default sorting.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsDefaultSortColumn","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGridColumn","Components.GenericTyped":"True"}},{"HashCode":-1292015382,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Grid column.\n            </summary>\n            <typeparam name=\"TItem\">Grid row data type.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Column unique identifier.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the column is visible (otherwise the column is hidden).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Order","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The order (display index) of the column.\n            Columns are displayed in the order of this property.\n            Columns with the same value are displayed in the order of appearance in the code (when the columns are not conditionally displayed using @if).\n            </summary>\n            <exception cref=\"T:System.ArgumentException\">Value is <c>Int32.MinValue</c> or <c>Int32.MaxValue</c>.</exception>\n        ","Metadata":{"Common.PropertyName":"Order","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Documentation":"\n            <summary>\n            Header cell text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Havit.Blazor.Components.Web.Bootstrap.GridHeaderCellContext>","Documentation":"\n            <summary>\n            Header cell template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Havit.Blazor.Components.Web.Bootstrap.GridHeaderCellContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Header cell CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemTextSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Returns text for the item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTextSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Returns template for the item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Returns item CSS class (not dependent on data).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemCssClassSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Returns item CSS class for the specific date item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"PlaceholderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Havit.Blazor.Components.Web.Bootstrap.GridPlaceholderCellContext>","Documentation":"\n            <summary>\n            Placeholder cell template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PlaceholderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Havit.Blazor.Components.Web.Bootstrap.GridPlaceholderCellContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FooterText","TypeName":"System.String","Documentation":"\n            <summary>\n            Footer cell text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Havit.Blazor.Components.Web.Bootstrap.GridFooterCellContext>","Documentation":"\n            <summary>\n            Footer cell template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Havit.Blazor.Components.Web.Bootstrap.GridFooterCellContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FooterCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Footer cell CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SortString","TypeName":"System.String","Documentation":"\n            <summary>\n            Returns column sorting as a string.\n            Used to set sorting as a string, i.e., to get value to pass to the backend.\n            Ignored for client-side sorting.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortString","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SortKeySelector","TypeName":"System.Linq.Expressions.Expression<System.Func<TItem, System.IComparable>>","Documentation":"\n            <summary>\n            Returns column sorting expression for automatic grid sorting.\n            To be used for \"strongly typed\" setting of sorting, required for client-side sorting.\n            Must be <see cref=\"T:System.IComparable\" />.\n            Sorting of the column does not support multiple expressions. Create an artificial property and implement <see cref=\"T:System.IComparable\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortKeySelector","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TItem, global::System.IComparable>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SortDirection","TypeName":"Havit.Collections.SortDirection","IsEnum":true,"Documentation":"\n            <summary>\n            Initial sorting direction. Default is <see cref=\"F:Havit.Collections.SortDirection.Ascending\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SortDirection","Common.GloballyQualifiedTypeName":"global::Havit.Collections.SortDirection"}},{"Kind":"Components.Component","Name":"IsDefaultSortColumn","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates that the sorting on the column is default (primary) on the grid.\n            Set <c>true</c> for the column which is to be used for default sorting.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsDefaultSortColumn","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGridColumn","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1846243534,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem>.HeaderTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Header cell template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"HxGridColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'HeaderTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem>.HeaderTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGridColumn","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1379863293,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem>.HeaderTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Header cell template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'HeaderTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem>.HeaderTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGridColumn","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1040181906,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem>.ItemTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Returns template for the item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"HxGridColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem>.ItemTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGridColumn","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-341061622,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem>.ItemTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Returns template for the item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem>.ItemTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGridColumn","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-847712667,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem>.PlaceholderTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Placeholder cell template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PlaceholderTemplate","ParentTag":"HxGridColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'PlaceholderTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem>.PlaceholderTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGridColumn","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-274528727,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem>.PlaceholderTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Placeholder cell template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PlaceholderTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'PlaceholderTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem>.PlaceholderTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGridColumn","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-76884343,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem>.FooterTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Footer cell template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"HxGridColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'FooterTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem>.FooterTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGridColumn","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-706692823,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem>.FooterTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Footer cell template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'FooterTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGridColumn<TItem>.FooterTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGridColumn","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1114294391,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGridEmptyDataTemplateDefaultContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxGridEmptyDataTemplateDefaultContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGridEmptyDataTemplateDefaultContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGridEmptyDataTemplateDefaultContent"}},{"HashCode":-1114605268,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGridEmptyDataTemplateDefaultContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxGridEmptyDataTemplateDefaultContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGridEmptyDataTemplateDefaultContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGridEmptyDataTemplateDefaultContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1074787005,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGridEmptyDataTemplateDefaultContent.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxGridEmptyDataTemplateDefaultContent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGridEmptyDataTemplateDefaultContent.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGridEmptyDataTemplateDefaultContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-544324609,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGridEmptyDataTemplateDefaultContent.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxGridEmptyDataTemplateDefaultContent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGridEmptyDataTemplateDefaultContent.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGridEmptyDataTemplateDefaultContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2126733356,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxPager","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Pager.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxPager\">https://havit.blazor.eu/components/HxPager</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxPager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.PagerSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxPager.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.PagerSettings"}},{"Kind":"Components.Component","Name":"TotalPages","TypeName":"System.Int32","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Total number of pages of data items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TotalPages","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"CurrentPageIndex","TypeName":"System.Int32","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Current page index. Zero-based.\n            Displayed numbers start with 1, which is page index 0.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CurrentPageIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"CurrentPageIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"\n            <summary>\n            Event raised when the page index is changed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CurrentPageIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FirstPageIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon for the \"First page\" button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FirstPageIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"LastPageIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon for the \"Last page\" button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LastPageIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"PreviousPageIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon for the \"Previous page\" button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PreviousPageIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"NextPageIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon for the \"Next page\" button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NextPageIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"NumericButtonsCount","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Count of numbers to display. The default value is 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NumericButtonsCount","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxPager","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxPager"}},{"HashCode":1248900971,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxPager","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Pager.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxPager\">https://havit.blazor.eu/components/HxPager</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxPager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.PagerSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxPager.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.PagerSettings"}},{"Kind":"Components.Component","Name":"TotalPages","TypeName":"System.Int32","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Total number of pages of data items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TotalPages","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"CurrentPageIndex","TypeName":"System.Int32","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Current page index. Zero-based.\n            Displayed numbers start with 1, which is page index 0.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CurrentPageIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"CurrentPageIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"\n            <summary>\n            Event raised when the page index is changed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CurrentPageIndexChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FirstPageIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon for the \"First page\" button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FirstPageIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"LastPageIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon for the \"Last page\" button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LastPageIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"PreviousPageIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon for the \"Previous page\" button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PreviousPageIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"NextPageIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon for the \"Next page\" button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NextPageIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"NumericButtonsCount","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Count of numbers to display. The default value is 10.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NumericButtonsCount","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxPager","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxPager","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2028518474,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Provides a unified layout for data presentation components and associated filtering controls.<br />\n            This component orchestrates the interaction between filter controls and the data presentation component.\n            The data list is typically implemented using a <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1\" /> component. Filters are displayed\n            in a <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas\" /> component, while filter values are shown as <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipList\" />.\n            Additionally, it supports predefined named views for quick switching between different filter configurations\n            and other features such as a title, search box, and commands.\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxListLayout\">https://havit.blazor.eu/components/HxListLayout</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxListLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TFilterModel","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TFilterModel for the Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel> component.","Metadata":{"Common.PropertyName":"TFilterModel","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ListLayoutSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ListLayoutSettings"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title of the component.\n            If <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.TitleFromNamedView\" /> is <c>true</c> and <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.SelectedNamedView\" /> is not <c>null</c>, the component's title displays the name of the currently selected Named View.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TitleTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Title of the component (in form of RenderFragment).\n            If <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.TitleFromNamedView\" /> is <c>true</c> and <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.SelectedNamedView\" /> is not <c>null</c>, the component's title displays the name of the currently selected Named View.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TitleTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NamedViews","TypeName":"System.Collections.Generic.IEnumerable<Havit.Blazor.Components.Web.Bootstrap.NamedView<TFilterModel>>","Documentation":"\n            <summary>\n            Represents the collection of Named Views available for selection. \n            Each Named View defines a pre-set filter configuration that can be applied to the data.\n            </summary>\n            <remarks>\n            Named Views provide a convenient way for users to quickly apply commonly used filters to the data set.\n            Ensure that each Named View in the collection has a unique name which accurately describes its filter criteria.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"NamedViews","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::Havit.Blazor.Components.Web.Bootstrap.NamedView<TFilterModel>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedNamedView","TypeName":"Havit.Blazor.Components.Web.Bootstrap.NamedView<TFilterModel>","Documentation":"\n            <summary>\n            Selected named view (highlighted in the list with <c>.active</c> CSS class).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedNamedView","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.NamedView<TFilterModel>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedNamedViewChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.Bootstrap.NamedView<TFilterModel>>","Metadata":{"Common.PropertyName":"SelectedNamedViewChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.Bootstrap.NamedView<TFilterModel>>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TitleFromNamedView","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the name of the selected Named View (<see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.SelectedNamedView\" />) is automatically used as title.\n            If <c>true</c>, the component's title changes to match the name of the currently selected Named View.\n            Useful for dynamic title updates based on user selections from predefined views.\n            The default value is <c>true</c>.\n            </summary>\n            <remarks>\n            This update occurs upon the selection of a new Named View. It allows the Title to reflect the\n            current data filtering context provided by the Named Views, enhancing user understanding of the active filter.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"TitleFromNamedView","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SearchTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"SearchTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FilterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TFilterModel>","Metadata":{"Common.PropertyName":"FilterTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TFilterModel>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FilterModel","TypeName":"TFilterModel","Metadata":{"Common.PropertyName":"FilterModel","Common.GloballyQualifiedTypeName":"TFilterModel","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FilterModelChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TFilterModel>","Metadata":{"Common.PropertyName":"FilterModelChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TFilterModel>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DataTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"DataTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DetailTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"DetailTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CommandsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"CommandsTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CardSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CardSettings","Documentation":"\n            <summary>\n            Settings for the wrapping <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCard\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CardSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CardSettings"}},{"Kind":"Components.Component","Name":"FilterOpenButtonSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Settings for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxButton\" /> opening the filtering offcanvas.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterOpenButtonSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"FilterSubmitButtonSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Settings for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxButton\" /> submitting the filter.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterSubmitButtonSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"FilterOffcanvasSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings","Documentation":"\n            <summary>\n            Settings for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas\" /> with the filter.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterOffcanvasSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS classes for the wrapping <c>div</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListLayout","Components.GenericTyped":"True"}},{"HashCode":2077838959,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Provides a unified layout for data presentation components and associated filtering controls.<br />\n            This component orchestrates the interaction between filter controls and the data presentation component.\n            The data list is typically implemented using a <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1\" /> component. Filters are displayed\n            in a <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas\" /> component, while filter values are shown as <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipList\" />.\n            Additionally, it supports predefined named views for quick switching between different filter configurations\n            and other features such as a title, search box, and commands.\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxListLayout\">https://havit.blazor.eu/components/HxListLayout</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TFilterModel","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TFilterModel for the Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel> component.","Metadata":{"Common.PropertyName":"TFilterModel","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ListLayoutSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ListLayoutSettings"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title of the component.\n            If <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.TitleFromNamedView\" /> is <c>true</c> and <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.SelectedNamedView\" /> is not <c>null</c>, the component's title displays the name of the currently selected Named View.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TitleTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Title of the component (in form of RenderFragment).\n            If <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.TitleFromNamedView\" /> is <c>true</c> and <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.SelectedNamedView\" /> is not <c>null</c>, the component's title displays the name of the currently selected Named View.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TitleTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NamedViews","TypeName":"System.Collections.Generic.IEnumerable<Havit.Blazor.Components.Web.Bootstrap.NamedView<TFilterModel>>","Documentation":"\n            <summary>\n            Represents the collection of Named Views available for selection. \n            Each Named View defines a pre-set filter configuration that can be applied to the data.\n            </summary>\n            <remarks>\n            Named Views provide a convenient way for users to quickly apply commonly used filters to the data set.\n            Ensure that each Named View in the collection has a unique name which accurately describes its filter criteria.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"NamedViews","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::Havit.Blazor.Components.Web.Bootstrap.NamedView<TFilterModel>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedNamedView","TypeName":"Havit.Blazor.Components.Web.Bootstrap.NamedView<TFilterModel>","Documentation":"\n            <summary>\n            Selected named view (highlighted in the list with <c>.active</c> CSS class).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SelectedNamedView","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.NamedView<TFilterModel>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedNamedViewChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.Bootstrap.NamedView<TFilterModel>>","Metadata":{"Common.PropertyName":"SelectedNamedViewChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.Bootstrap.NamedView<TFilterModel>>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TitleFromNamedView","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the name of the selected Named View (<see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.SelectedNamedView\" />) is automatically used as title.\n            If <c>true</c>, the component's title changes to match the name of the currently selected Named View.\n            Useful for dynamic title updates based on user selections from predefined views.\n            The default value is <c>true</c>.\n            </summary>\n            <remarks>\n            This update occurs upon the selection of a new Named View. It allows the Title to reflect the\n            current data filtering context provided by the Named Views, enhancing user understanding of the active filter.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"TitleFromNamedView","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SearchTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"SearchTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FilterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TFilterModel>","Metadata":{"Common.PropertyName":"FilterTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TFilterModel>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FilterModel","TypeName":"TFilterModel","Metadata":{"Common.PropertyName":"FilterModel","Common.GloballyQualifiedTypeName":"TFilterModel","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FilterModelChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TFilterModel>","Metadata":{"Common.PropertyName":"FilterModelChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TFilterModel>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DataTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"DataTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DetailTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"DetailTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CommandsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"CommandsTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CardSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CardSettings","Documentation":"\n            <summary>\n            Settings for the wrapping <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCard\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CardSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CardSettings"}},{"Kind":"Components.Component","Name":"FilterOpenButtonSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Settings for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxButton\" /> opening the filtering offcanvas.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterOpenButtonSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"FilterSubmitButtonSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Settings for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxButton\" /> submitting the filter.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterSubmitButtonSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"FilterOffcanvasSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings","Documentation":"\n            <summary>\n            Settings for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas\" /> with the filter.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FilterOffcanvasSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS classes for the wrapping <c>div</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListLayout","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":602254967,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.TitleTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Title of the component (in form of RenderFragment).\n            If <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.TitleFromNamedView\" /> is <c>true</c> and <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.SelectedNamedView\" /> is not <c>null</c>, the component's title displays the name of the currently selected Named View.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TitleTemplate","ParentTag":"HxListLayout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.TitleTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListLayout","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1478655356,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.TitleTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Title of the component (in form of RenderFragment).\n            If <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.TitleFromNamedView\" /> is <c>true</c> and <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.SelectedNamedView\" /> is not <c>null</c>, the component's title displays the name of the currently selected Named View.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TitleTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.TitleTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListLayout","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":263987423,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.SearchTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SearchTemplate","ParentTag":"HxListLayout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.SearchTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListLayout","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1273938925,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.SearchTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SearchTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.SearchTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListLayout","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2114347471,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.FilterTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FilterTemplate","ParentTag":"HxListLayout"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'FilterTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.FilterTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListLayout","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":414821125,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.FilterTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FilterTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'FilterTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.FilterTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListLayout","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1550189881,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.DataTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DataTemplate","ParentTag":"HxListLayout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.DataTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListLayout","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1218352912,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.DataTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DataTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.DataTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListLayout","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":479222571,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.DetailTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DetailTemplate","ParentTag":"HxListLayout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.DetailTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListLayout","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1727992365,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.DetailTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DetailTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.DetailTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListLayout","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1356516618,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.CommandsTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CommandsTemplate","ParentTag":"HxListLayout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.CommandsTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListLayout","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":611301479,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.CommandsTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CommandsTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>.CommandsTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListLayout","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":148597030,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListGroup","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/list-group/\">Bootstrap 5 List group</see> component.<br />\n            List groups are a flexible and powerful component for displaying a series of content.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxListGroup\">https://havit.blazor.eu/components/HxListGroup</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxListGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content of the list group component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Flush","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If set to <c>true</c>, removes borders and rounded corners to render list group items edge-to-edge.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Flush","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Numbered","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Set to <c>true</c> to opt into numbered list group items. The list group changes from an unordered list to an ordered list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Numbered","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Horizontal","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ListGroupHorizontal","IsEnum":true,"Documentation":"\n            <summary>\n            Changes the layout of the list group items from vertical to horizontal. Cannot be combined with <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxListGroup.Flush\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Horizontal","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ListGroupHorizontal"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxListGroup\" /> component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListGroup","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListGroup"}},{"HashCode":394045567,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListGroup","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/list-group/\">Bootstrap 5 List group</see> component.<br />\n            List groups are a flexible and powerful component for displaying a series of content.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxListGroup\">https://havit.blazor.eu/components/HxListGroup</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxListGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content of the list group component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Flush","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If set to <c>true</c>, removes borders and rounded corners to render list group items edge-to-edge.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Flush","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Numbered","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Set to <c>true</c> to opt into numbered list group items. The list group changes from an unordered list to an ordered list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Numbered","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Horizontal","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ListGroupHorizontal","IsEnum":true,"Documentation":"\n            <summary>\n            Changes the layout of the list group items from vertical to horizontal. Cannot be combined with <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxListGroup.Flush\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Horizontal","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ListGroupHorizontal"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxListGroup\" /> component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListGroup","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListGroup","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1150831312,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListGroup.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content of the list group component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxListGroup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListGroup.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListGroup","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":565415518,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListGroup.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content of the list group component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxListGroup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListGroup.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListGroup","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-781529193,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListGroupItem","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Item for <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxListGroup\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxListGroupItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content of the item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Active","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates the currently active selection.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Active","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Make the item appear disabled by setting it to <c>false</c>.\n            The default value is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Color.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            An event that is fired when the <c>HxListGroupItem</c> is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListGroupItem","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListGroupItem"}},{"HashCode":-212697813,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListGroupItem","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Item for <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxListGroup\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxListGroupItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content of the item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Active","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates the currently active selection.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Active","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Make the item appear disabled by setting it to <c>false</c>.\n            The default value is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Color.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            An event that is fired when the <c>HxListGroupItem</c> is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListGroupItem","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListGroupItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1017907119,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListGroupItem.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content of the item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxListGroupItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListGroupItem.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListGroupItem","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":674037714,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListGroupItem.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content of the item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxListGroupItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListGroupItem.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListGroupItem","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1248399636,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/list-group/#links-and-buttons\">Bootstrap 5 List group link item</see> component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxListGroupItemNavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"\n            <summary>\n            Navigation target.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch?","Documentation":"\n            <summary>\n            URL matching behavior for the underlying <see cref=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\" />.\n            Default is <see cref=\"F:Microsoft.AspNetCore.Components.Routing.NavLinkMatch.Prefix\" />.\n            You can set the value to <c>null</c> to disable the matching.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch?"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised when the item is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Active","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates the current active selection.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Active","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <see cref=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\" /> component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListGroupItemNavLink"}},{"HashCode":1562737824,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/list-group/#links-and-buttons\">Bootstrap 5 List group link item</see> component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"\n            <summary>\n            Navigation target.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch?","Documentation":"\n            <summary>\n            URL matching behavior for the underlying <see cref=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\" />.\n            Default is <see cref=\"F:Microsoft.AspNetCore.Components.Routing.NavLinkMatch.Prefix\" />.\n            You can set the value to <c>null</c> to disable the matching.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch?"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised when the item is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Active","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates the current active selection.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Active","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <see cref=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\" /> component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListGroupItemNavLink","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":122404211,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxListGroupItemNavLink"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListGroupItemNavLink","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":93949412,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListGroupItemNavLink","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1232473847,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMessageBox","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Component for displaying message boxes.<br />\n            Usually used via <see cref=\"T:Havit.Blazor.Components.Web.HxMessageBoxService\" /> and <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxMessageBoxHost\" />.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxMessageBox\">https://havit.blazor.eu/components/HxMessageBox</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxMessageBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title text (Header).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Header template (Header).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Content (body) text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BodyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Body (content) template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BodyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether to show the close button.\n            The default is taken from the underlying <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxModal\" /> (<c>true</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Buttons","TypeName":"Havit.Blazor.Components.Web.MessageBoxButtons","IsEnum":true,"Documentation":"\n            <summary>\n            Buttons to show. The default is <see cref=\"F:Havit.Blazor.Components.Web.MessageBoxButtons.Ok\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Buttons","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.MessageBoxButtons"}},{"Kind":"Components.Component","Name":"PrimaryButton","TypeName":"Havit.Blazor.Components.Web.MessageBoxButtons?","Documentation":"\n            <summary>\n            Primary button (if you want to override the default).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PrimaryButton","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.MessageBoxButtons?"}},{"Kind":"Components.Component","Name":"CustomButtonText","TypeName":"System.String","Documentation":"\n            <summary>\n            Text for <see cref=\"F:Havit.Blazor.Components.Web.MessageBoxButtons.Custom\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomButtonText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PrimaryButtonSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Settings for the dialog primary button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PrimaryButtonSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"SecondaryButtonSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Settings for dialog secondary button(s).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SecondaryButtonSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"ModalSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ModalSettings","Documentation":"\n            <summary>\n            Settings for the underlying <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxModal\" /> component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ModalSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ModalSettings"}},{"Kind":"Components.Component","Name":"OnClosed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.MessageBoxButtons>","Documentation":"\n            <summary>\n            Raised when the message box gets closed. Returns the button clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClosed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.MessageBoxButtons>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxModal\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMessageBox","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMessageBox"}},{"HashCode":1517066694,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMessageBox","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Component for displaying message boxes.<br />\n            Usually used via <see cref=\"T:Havit.Blazor.Components.Web.HxMessageBoxService\" /> and <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxMessageBoxHost\" />.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxMessageBox\">https://havit.blazor.eu/components/HxMessageBox</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxMessageBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title text (Header).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Header template (Header).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Content (body) text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BodyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Body (content) template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BodyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether to show the close button.\n            The default is taken from the underlying <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxModal\" /> (<c>true</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Buttons","TypeName":"Havit.Blazor.Components.Web.MessageBoxButtons","IsEnum":true,"Documentation":"\n            <summary>\n            Buttons to show. The default is <see cref=\"F:Havit.Blazor.Components.Web.MessageBoxButtons.Ok\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Buttons","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.MessageBoxButtons"}},{"Kind":"Components.Component","Name":"PrimaryButton","TypeName":"Havit.Blazor.Components.Web.MessageBoxButtons?","Documentation":"\n            <summary>\n            Primary button (if you want to override the default).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PrimaryButton","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.MessageBoxButtons?"}},{"Kind":"Components.Component","Name":"CustomButtonText","TypeName":"System.String","Documentation":"\n            <summary>\n            Text for <see cref=\"F:Havit.Blazor.Components.Web.MessageBoxButtons.Custom\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CustomButtonText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PrimaryButtonSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Settings for the dialog primary button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PrimaryButtonSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"SecondaryButtonSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Settings for dialog secondary button(s).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SecondaryButtonSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"ModalSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ModalSettings","Documentation":"\n            <summary>\n            Settings for the underlying <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxModal\" /> component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ModalSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ModalSettings"}},{"Kind":"Components.Component","Name":"OnClosed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.MessageBoxButtons>","Documentation":"\n            <summary>\n            Raised when the message box gets closed. Returns the button clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClosed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.MessageBoxButtons>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxModal\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMessageBox","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMessageBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":489150737,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.HeaderTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Header template (Header).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"HxMessageBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.HeaderTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMessageBox","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1893809863,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.HeaderTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Header template (Header).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxMessageBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.HeaderTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMessageBox","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-192382382,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.BodyTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Body (content) template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BodyTemplate","ParentTag":"HxMessageBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.BodyTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMessageBox","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1793097525,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.BodyTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Body (content) template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BodyTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxMessageBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.BodyTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMessageBox","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":203539642,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMessageBoxHost","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Displays message boxes initiated through <see cref=\"T:Havit.Blazor.Components.Web.IHxMessageBoxService\" />.\n            To be placed in the root application component / main layout.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxMessageBoxHost"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMessageBoxHost","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMessageBoxHost"}},{"HashCode":-1587485905,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMessageBoxHost","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Displays message boxes initiated through <see cref=\"T:Havit.Blazor.Components.Web.IHxMessageBoxService\" />.\n            To be placed in the root application component / main layout.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxMessageBoxHost"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMessageBoxHost","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMessageBoxHost","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":448356679,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxModal","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Component for rendering a modal dialog as a Bootstrap Modal.\n            Visit <see href=\"https://getbootstrap.com/docs/5.3/components/modal/\">Bootstrap Modal</see> for more information.\n            Full documentation and demos available at <see href=\"https://havit.blazor.eu/components/HxModal\">https://havit.blazor.eu/components/HxModal</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxModal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ModalSettings","Documentation":"\n            <summary>\n            A set of settings applied to this component instance. Overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxModal.Defaults\" /> and is itself overridden by individual parameters.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ModalSettings"}},{"Kind":"Components.Component","Name":"Animated","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Determines whether modals appear without fading in. Setting to <c>false</c> removes the <c>.fade</c> class from the modal markup.\n            Default value is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animated","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title in modal header.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Header template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BodyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Body template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BodyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Footer template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ModalSize?","Documentation":"\n            <summary>\n            Size of the modal. Default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ModalSize.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ModalSize?"}},{"Kind":"Components.Component","Name":"Fullscreen","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ModalFullscreen?","Documentation":"\n            <summary>\n            Fullscreen behavior of the modal. Default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ModalFullscreen.Disabled\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Fullscreen","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ModalFullscreen?"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether the modal shows close button in header.\n            Default value is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CloseButtonIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Close icon to be used in header.\n            If set to <c>null</c>, Bootstrap default close-button will be used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CloseButtonIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"CloseOnEscape","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether the modal closes when escape key is pressed.\n            Default value is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CloseOnEscape","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Backdrop","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ModalBackdrop?","Documentation":"\n            <summary>\n            Indicates whether to apply a backdrop on body while the modal is open.\n            If set to <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ModalBackdrop.Static\" />, the modal cannot be closed by clicking on the backdrop.\n            Default value (from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxModal.Defaults\" />) is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ModalBackdrop.True\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Backdrop","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ModalBackdrop?"}},{"Kind":"Components.Component","Name":"Scrollable","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Allows scrolling the modal body. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Scrollable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Centered","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Allows vertical centering of the modal.<br />\n            Default is <c>false</c> (horizontal only).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Centered","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the main element (<c>div.modal</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DialogCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the dialog (<c>div.modal-dialog</c> element).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DialogCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional header CSS class (<c>div.modal-header</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BodyCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional body CSS class (<c>div.modal-body</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BodyCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContentCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional content CSS class (<c>div.modal-content</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContentCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional footer CSS class (<c>div.modal-footer</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnHiding","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.Bootstrap.ModalHidingEventArgs>","Documentation":"\n            <summary>\n            Fired immediately when the 'hide' instance method is called.\n            This can be triggered by <see cref=\"M:Havit.Blazor.Components.Web.Bootstrap.HxModal.HideAsync\" />, the close button, the <kbd>Esc</kbd> key, or other interactions.\n            To cancel hiding, set <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ModalHidingEventArgs.Cancel\" /> to <c>true</c>.\n            </summary>\n            <remarks>\n            There is intentionally no <c>virtual InvokeOnHidingAsync()</c> method to override to avoid confusion.\n            The <code>hide.bs.modal</code> event is only subscribed to when the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxModal.OnHiding\" /> callback is set.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"OnHiding","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.Bootstrap.ModalHidingEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClosed","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fired when the modal has finished hiding from the user, after CSS transitions complete.\n            Triggered by <see cref=\"M:Havit.Blazor.Components.Web.Bootstrap.HxModal.HideAsync\" />, the close button, the <kbd>Esc</kbd> key, or other interactions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClosed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fired when a modal element becomes visible to the user, after CSS transitions complete.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxModal","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxModal"}},{"HashCode":734447919,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxModal","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Component for rendering a modal dialog as a Bootstrap Modal.\n            Visit <see href=\"https://getbootstrap.com/docs/5.3/components/modal/\">Bootstrap Modal</see> for more information.\n            Full documentation and demos available at <see href=\"https://havit.blazor.eu/components/HxModal\">https://havit.blazor.eu/components/HxModal</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxModal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ModalSettings","Documentation":"\n            <summary>\n            A set of settings applied to this component instance. Overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxModal.Defaults\" /> and is itself overridden by individual parameters.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ModalSettings"}},{"Kind":"Components.Component","Name":"Animated","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Determines whether modals appear without fading in. Setting to <c>false</c> removes the <c>.fade</c> class from the modal markup.\n            Default value is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animated","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title in modal header.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Header template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BodyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Body template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BodyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Footer template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ModalSize?","Documentation":"\n            <summary>\n            Size of the modal. Default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ModalSize.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ModalSize?"}},{"Kind":"Components.Component","Name":"Fullscreen","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ModalFullscreen?","Documentation":"\n            <summary>\n            Fullscreen behavior of the modal. Default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ModalFullscreen.Disabled\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Fullscreen","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ModalFullscreen?"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether the modal shows close button in header.\n            Default value is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CloseButtonIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Close icon to be used in header.\n            If set to <c>null</c>, Bootstrap default close-button will be used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CloseButtonIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"CloseOnEscape","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether the modal closes when escape key is pressed.\n            Default value is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CloseOnEscape","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Backdrop","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ModalBackdrop?","Documentation":"\n            <summary>\n            Indicates whether to apply a backdrop on body while the modal is open.\n            If set to <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ModalBackdrop.Static\" />, the modal cannot be closed by clicking on the backdrop.\n            Default value (from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxModal.Defaults\" />) is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ModalBackdrop.True\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Backdrop","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ModalBackdrop?"}},{"Kind":"Components.Component","Name":"Scrollable","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Allows scrolling the modal body. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Scrollable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Centered","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Allows vertical centering of the modal.<br />\n            Default is <c>false</c> (horizontal only).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Centered","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the main element (<c>div.modal</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DialogCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class for the dialog (<c>div.modal-dialog</c> element).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DialogCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional header CSS class (<c>div.modal-header</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BodyCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional body CSS class (<c>div.modal-body</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BodyCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContentCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional content CSS class (<c>div.modal-content</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContentCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional footer CSS class (<c>div.modal-footer</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnHiding","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.Bootstrap.ModalHidingEventArgs>","Documentation":"\n            <summary>\n            Fired immediately when the 'hide' instance method is called.\n            This can be triggered by <see cref=\"M:Havit.Blazor.Components.Web.Bootstrap.HxModal.HideAsync\" />, the close button, the <kbd>Esc</kbd> key, or other interactions.\n            To cancel hiding, set <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ModalHidingEventArgs.Cancel\" /> to <c>true</c>.\n            </summary>\n            <remarks>\n            There is intentionally no <c>virtual InvokeOnHidingAsync()</c> method to override to avoid confusion.\n            The <code>hide.bs.modal</code> event is only subscribed to when the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxModal.OnHiding\" /> callback is set.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"OnHiding","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.Bootstrap.ModalHidingEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClosed","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fired when the modal has finished hiding from the user, after CSS transitions complete.\n            Triggered by <see cref=\"M:Havit.Blazor.Components.Web.Bootstrap.HxModal.HideAsync\" />, the close button, the <kbd>Esc</kbd> key, or other interactions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClosed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fired when a modal element becomes visible to the user, after CSS transitions complete.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxModal","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxModal","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-280783726,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxModal.HeaderTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Header template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"HxModal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxModal.HeaderTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxModal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-84136385,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxModal.HeaderTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Header template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxModal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxModal.HeaderTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxModal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":320561020,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxModal.BodyTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Body template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BodyTemplate","ParentTag":"HxModal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxModal.BodyTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxModal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1980422516,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxModal.BodyTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Body template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BodyTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxModal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxModal.BodyTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxModal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-138170575,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxModal.FooterTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Footer template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"HxModal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxModal.FooterTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxModal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":417472701,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxModal.FooterTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Footer template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxModal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxModal.FooterTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxModal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1692215107,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAnchorFragmentNavigation","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Temporarily (?) compensates for a Blazor deficiency in anchor fragments (scrolling to <c>page#id</c> URLs). Supports navigation with the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxScrollspy\" /> component.\n            <see href=\"https://github.com/dotnet/aspnetcore/issues/8393\">GitHub Issue: Blazor 0.8.0: hash routing to named element #8393</see>.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxAnchorFragmentNavigation\">https://havit.blazor.eu/components/HxAnchorFragmentNavigation</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxAnchorFragmentNavigation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Automation","TypeName":"Havit.Blazor.Components.Web.Bootstrap.AnchorFragmentNavigationAutomationMode","IsEnum":true,"Documentation":"\n            <summary>\n            The level of automation.\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.AnchorFragmentNavigationAutomationMode.Full\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Automation","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.AnchorFragmentNavigationAutomationMode"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAnchorFragmentNavigation","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAnchorFragmentNavigation"}},{"HashCode":2009444819,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAnchorFragmentNavigation","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Temporarily (?) compensates for a Blazor deficiency in anchor fragments (scrolling to <c>page#id</c> URLs). Supports navigation with the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxScrollspy\" /> component.\n            <see href=\"https://github.com/dotnet/aspnetcore/issues/8393\">GitHub Issue: Blazor 0.8.0: hash routing to named element #8393</see>.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxAnchorFragmentNavigation\">https://havit.blazor.eu/components/HxAnchorFragmentNavigation</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxAnchorFragmentNavigation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Automation","TypeName":"Havit.Blazor.Components.Web.Bootstrap.AnchorFragmentNavigationAutomationMode","IsEnum":true,"Documentation":"\n            <summary>\n            The level of automation.\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.AnchorFragmentNavigationAutomationMode.Full\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Automation","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.AnchorFragmentNavigationAutomationMode"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAnchorFragmentNavigation","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAnchorFragmentNavigation","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1339005023,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumb","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/breadcrumb/\">Bootstrap 5 Breadcrumb</see> component.<br />\n            Indicates the current page's location within a navigational hierarchy.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxBreadcrumb\">https://havit.blazor.eu/components/HxBreadcrumb</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxBreadcrumb"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Divider","TypeName":"System.String","Documentation":"\n            <summary>\n            Breadcrumb divider. Default is <c>/</c>.\n            Enter either a character (such as <c>&gt;</c>) or use an embedded SVG icon.\n            Disable the divider with <c>null</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Divider","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumb","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxBreadcrumb"}},{"HashCode":2042025757,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumb","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/breadcrumb/\">Bootstrap 5 Breadcrumb</see> component.<br />\n            Indicates the current page's location within a navigational hierarchy.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxBreadcrumb\">https://havit.blazor.eu/components/HxBreadcrumb</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumb"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Divider","TypeName":"System.String","Documentation":"\n            <summary>\n            Breadcrumb divider. Default is <c>/</c>.\n            Enter either a character (such as <c>&gt;</c>) or use an embedded SVG icon.\n            Disable the divider with <c>null</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Divider","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumb","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxBreadcrumb","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1432607067,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumb.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Child content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxBreadcrumb"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumb.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxBreadcrumb","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1597440849,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumb.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Child content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumb"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumb.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxBreadcrumb","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-519643505,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumbItem","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Item for <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumb\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxBreadcrumbItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Item text (usually the name of the page).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"\n            <summary>\n            The link of the breadcrumb (the page where the user will be led on click).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Active","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Determines whether the <c>HxBreadcrumbItem</c> is active (used for a page that the user is currently on).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Active","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Item content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumbItem","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxBreadcrumbItem"}},{"HashCode":-110878600,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumbItem","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Item for <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumb\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumbItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Item text (usually the name of the page).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"\n            <summary>\n            The link of the breadcrumb (the page where the user will be led on click).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Active","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Determines whether the <c>HxBreadcrumbItem</c> is active (used for a page that the user is currently on).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Active","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Item content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumbItem","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxBreadcrumbItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-152191437,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumbItem.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Item content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxBreadcrumbItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumbItem.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxBreadcrumbItem","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1310333944,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumbItem.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Item content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumbItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumbItem.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxBreadcrumbItem","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-844937884,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNav","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/navs-tabs/\">Bootstrap Nav</see> component.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxNav\">https://havit.blazor.eu/components/HxNav</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxNav"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Orientation","TypeName":"Havit.Blazor.Components.Web.Bootstrap.NavOrientation","IsEnum":true,"Documentation":"\n            <summary>\n            Orientation of the nav.\n            The default value is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.NavOrientation.Horizontal\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Orientation","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.NavOrientation"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"Havit.Blazor.Components.Web.Bootstrap.NavVariant","IsEnum":true,"Documentation":"\n            <summary>\n            The visual variant of the nav items.\n            The default value is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.NavVariant.Standard\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.NavVariant"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            ID of the nav which can be used for <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxScrollspy.TargetId\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content of the nav.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNav","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNav"}},{"HashCode":1271405384,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNav","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/navs-tabs/\">Bootstrap Nav</see> component.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxNav\">https://havit.blazor.eu/components/HxNav</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxNav"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Orientation","TypeName":"Havit.Blazor.Components.Web.Bootstrap.NavOrientation","IsEnum":true,"Documentation":"\n            <summary>\n            Orientation of the nav.\n            The default value is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.NavOrientation.Horizontal\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Orientation","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.NavOrientation"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"Havit.Blazor.Components.Web.Bootstrap.NavVariant","IsEnum":true,"Documentation":"\n            <summary>\n            The visual variant of the nav items.\n            The default value is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.NavVariant.Standard\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.NavVariant"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            ID of the nav which can be used for <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxScrollspy.TargetId\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content of the nav.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNav","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNav","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1557557744,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNav.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content of the nav.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxNav"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNav.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNav","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1677159831,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNav.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content of the nav.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxNav"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNav.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNav","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-509078348,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavbar","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/navbar/\">Bootstrap 5 Navbar</see> component - a responsive navigation header.<br />\n            Provides support for branding, navigation, and more, including support for the collapse plugin.<br />\n            For full documentation and demos, visit: <see href=\"https://havit.blazor.eu/components/HxNavbar\">https://havit.blazor.eu/components/HxNavbar</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxNavbar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor","IsEnum":true,"Documentation":"\n            <summary>\n            Color (background).\n            The default value is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor"}},{"Kind":"Components.Component","Name":"ColorMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ColorMode","IsEnum":true,"Documentation":"\n            <summary>\n            Bootstrap theme (color mode) applied to the navbar.\n            The default value is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ColorMode.Auto\" /> (none).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ColorMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ColorMode"}},{"Kind":"Components.Component","Name":"Expand","TypeName":"Havit.Blazor.Components.Web.Bootstrap.NavbarExpand","IsEnum":true,"Documentation":"\n            <summary>\n            Responsive expand setting (breakpoint) for <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxNavbar\" />.<br />\n            The default value is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.NavbarExpand.LargeUp\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Expand","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.NavbarExpand"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Element ID.\n            (An autogenerated GUID is used if not set explicitly.)\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContainerCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Container CSS class. The default value is <c>container-fluid</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContainerCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content of the navbar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbar","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavbar"}},{"HashCode":-1083671935,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavbar","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/navbar/\">Bootstrap 5 Navbar</see> component - a responsive navigation header.<br />\n            Provides support for branding, navigation, and more, including support for the collapse plugin.<br />\n            For full documentation and demos, visit: <see href=\"https://havit.blazor.eu/components/HxNavbar\">https://havit.blazor.eu/components/HxNavbar</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor","IsEnum":true,"Documentation":"\n            <summary>\n            Color (background).\n            The default value is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor"}},{"Kind":"Components.Component","Name":"ColorMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ColorMode","IsEnum":true,"Documentation":"\n            <summary>\n            Bootstrap theme (color mode) applied to the navbar.\n            The default value is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ColorMode.Auto\" /> (none).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ColorMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ColorMode"}},{"Kind":"Components.Component","Name":"Expand","TypeName":"Havit.Blazor.Components.Web.Bootstrap.NavbarExpand","IsEnum":true,"Documentation":"\n            <summary>\n            Responsive expand setting (breakpoint) for <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxNavbar\" />.<br />\n            The default value is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.NavbarExpand.LargeUp\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Expand","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.NavbarExpand"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Element ID.\n            (An autogenerated GUID is used if not set explicitly.)\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContainerCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Container CSS class. The default value is <c>container-fluid</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContainerCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content of the navbar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbar","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavbar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":704369117,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavbar.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content of the navbar.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxNavbar"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbar.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavbar","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":94957419,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavbar.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content of the navbar.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxNavbar"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbar.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavbar","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":870420502,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarBrand","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap <see href=\"https://getbootstrap.com/docs/5.3/components/navbar/#brand\">navbar-brand</see> component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxNavbarBrand"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"\n            <summary>\n            The navigation target. Default is <c>\"/\"</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content of the navbar-brand.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarBrand","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavbarBrand"}},{"HashCode":1217750501,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarBrand","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap <see href=\"https://getbootstrap.com/docs/5.3/components/navbar/#brand\">navbar-brand</see> component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarBrand"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"\n            <summary>\n            The navigation target. Default is <c>\"/\"</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content of the navbar-brand.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarBrand","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavbarBrand","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":97718337,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarBrand.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content of the navbar-brand.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxNavbarBrand"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarBrand.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavbarBrand","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-20137742,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarBrand.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content of the navbar-brand.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarBrand"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarBrand.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavbarBrand","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1636477613,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarCollapse","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Collapse section for Bootstrap 5 <see href=\"https://getbootstrap.com/docs/5.3/components/navbar/\">navbar</see> component.\n            Derived from <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxNavbarCollapse"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Element ID. To be referenced by <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleButton.CollapseTarget\" />.\n            (Autogenerated GUID if not set explicitly.)\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CollapseDirection","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CollapseDirection","IsEnum":true,"Documentation":"\n            <summary>\n            Direction of the animation.\n            Default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.CollapseDirection.Vertical\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CollapseDirection","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CollapseDirection"}},{"Kind":"Components.Component","Name":"Parent","TypeName":"System.String","Documentation":"\n            <summary>\n            If a parent is provided, then all collapsible elements under the specified parent will be closed when this collapsible item is shown.\n            (Similar to traditional accordion behavior.)\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Parent","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InitiallyExpanded","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Determines whether the collapse will be open or closed (expanded or collapsed) when first rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InitiallyExpanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content of the collapse.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            This event is fired when a collapse element has become visible to the user (will wait for CSS transitions to complete).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            This event is fired when a collapse element has been hidden from the user (will wait for CSS transitions to complete).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>div</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarCollapse","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavbarCollapse"}},{"HashCode":-2007388996,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarCollapse","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Collapse section for Bootstrap 5 <see href=\"https://getbootstrap.com/docs/5.3/components/navbar/\">navbar</see> component.\n            Derived from <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarCollapse"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Element ID. To be referenced by <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleButton.CollapseTarget\" />.\n            (Autogenerated GUID if not set explicitly.)\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CollapseDirection","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CollapseDirection","IsEnum":true,"Documentation":"\n            <summary>\n            Direction of the animation.\n            Default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.CollapseDirection.Vertical\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CollapseDirection","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CollapseDirection"}},{"Kind":"Components.Component","Name":"Parent","TypeName":"System.String","Documentation":"\n            <summary>\n            If a parent is provided, then all collapsible elements under the specified parent will be closed when this collapsible item is shown.\n            (Similar to traditional accordion behavior.)\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Parent","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InitiallyExpanded","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Determines whether the collapse will be open or closed (expanded or collapsed) when first rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InitiallyExpanded","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content of the collapse.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            This event is fired when a collapse element has become visible to the user (will wait for CSS transitions to complete).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            This event is fired when a collapse element has been hidden from the user (will wait for CSS transitions to complete).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>div</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarCollapse","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavbarCollapse","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1367671921,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarCollapse.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content of the collapse.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxNavbarCollapse"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarCollapse.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavbarCollapse","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":297940945,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarCollapse.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content of the collapse.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarCollapse"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarCollapse.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavbarCollapse","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1632638660,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarText","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Text content for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxNavbar\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxNavbarText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarText","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavbarText"}},{"HashCode":2078789494,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarText","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Text content for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxNavbar\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarText","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavbarText","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1697579535,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarText.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxNavbarText"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarText.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavbarText","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":224992216,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarText.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarText"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarText.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavbarText","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1997683133,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarToggler","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap 5 <see href=\"https://getbootstrap.com/docs/5.3/components/navbar/#toggler\">navbar-toggler</see> component.\n            Derived from <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleButton\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxNavbarToggler"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CollapseTarget","TypeName":"System.String","Documentation":"\n            <summary>\n            Target selector of the toggle.\n            Use <c>#id</c> to reference a single <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse\" /> or <c>.class</c> for multiple <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse\" />s.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CollapseTarget","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon to render into the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"IconPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?","Documentation":"\n            <summary>\n            Position of the icon within the button. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement.Start\" /> (configurable through <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Bootstrap button style - theme color.<br />\n            The default is taken from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" /> (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None\" /> if not customized).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSize?","Documentation":"\n            <summary>\n            Button size. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonSize.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSize?"}},{"Kind":"Components.Component","Name":"Outline","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/buttons/#outline-buttons\">Bootstrap \"outline\" button</see> style.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Outline","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the <c>&lt;button /&gt;</c>.<br />\n            When using <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> you might want to use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" /> to get the desired result.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class to be rendered with the button icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Associated <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"FormId","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the form the button belongs to.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FormId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Tooltip text.<br />\n            If set, a <c>span</c> wrapper will be rendered around the <c>&lt;button /&gt;</c>. For most scenarios, you will then use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            Tooltip placement.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement"}},{"Kind":"Components.Component","Name":"TooltipCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipWrapperCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip <c>span</c> wrapper of the <c>&lt;button /&gt;</c>.<br />\n            If set, the <c>span</c> wrapper will be rendered no matter whether the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> text is set or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipWrapperCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation succeeds.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Stops onClick-event propagation. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickStopPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClickPreventDefault","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Prevents the default action for the onclick event. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Spinner","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Sets the state of the embedded <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSpinner\" />.\n            Leave <c>null</c> if you want automated spinner when any of the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers is running.\n            You can set an explicit <c>false</c> constant to disable (override) the spinner automation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Spinner","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"SingleClickProtection","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Sets <c>false</c> if you want to allow multiple <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers in parallel. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SingleClickProtection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>&lt;button&gt;</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarToggler","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavbarToggler"}},{"HashCode":2088163718,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarToggler","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap 5 <see href=\"https://getbootstrap.com/docs/5.3/components/navbar/#toggler\">navbar-toggler</see> component.\n            Derived from <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleButton\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarToggler"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CollapseTarget","TypeName":"System.String","Documentation":"\n            <summary>\n            Target selector of the toggle.\n            Use <c>#id</c> to reference a single <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse\" /> or <c>.class</c> for multiple <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse\" />s.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CollapseTarget","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon to render into the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"IconPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?","Documentation":"\n            <summary>\n            Position of the icon within the button. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement.Start\" /> (configurable through <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Bootstrap button style - theme color.<br />\n            The default is taken from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" /> (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None\" /> if not customized).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSize?","Documentation":"\n            <summary>\n            Button size. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonSize.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSize?"}},{"Kind":"Components.Component","Name":"Outline","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/buttons/#outline-buttons\">Bootstrap \"outline\" button</see> style.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Outline","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the <c>&lt;button /&gt;</c>.<br />\n            When using <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> you might want to use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" /> to get the desired result.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class to be rendered with the button icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Associated <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"FormId","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the form the button belongs to.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FormId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Tooltip text.<br />\n            If set, a <c>span</c> wrapper will be rendered around the <c>&lt;button /&gt;</c>. For most scenarios, you will then use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            Tooltip placement.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement"}},{"Kind":"Components.Component","Name":"TooltipCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipWrapperCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip <c>span</c> wrapper of the <c>&lt;button /&gt;</c>.<br />\n            If set, the <c>span</c> wrapper will be rendered no matter whether the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> text is set or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipWrapperCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation succeeds.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Stops onClick-event propagation. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickStopPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClickPreventDefault","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Prevents the default action for the onclick event. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Spinner","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Sets the state of the embedded <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSpinner\" />.\n            Leave <c>null</c> if you want automated spinner when any of the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers is running.\n            You can set an explicit <c>false</c> constant to disable (override) the spinner automation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Spinner","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"SingleClickProtection","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Sets <c>false</c> if you want to allow multiple <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers in parallel. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SingleClickProtection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>&lt;button&gt;</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarToggler","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavbarToggler","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2084763171,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarToggler.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxNavbarToggler"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarToggler.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavbarToggler","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1182156404,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarToggler.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarToggler"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavbarToggler.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavbarToggler","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-291719731,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavLink","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/navs-tabs/\">Bootstrap nav-link</see> component.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxNavLink#HxNavLink\">https://havit.blazor.eu/components/HxNavLink#HxNavLink</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxNavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"\n            <summary>\n            Navigation target.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch?","Documentation":"\n            <summary>\n            URL matching behavior for the underlying <see cref=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\" />.\n            Default is <see cref=\"F:Microsoft.AspNetCore.Components.Routing.NavLinkMatch.Prefix\" />.\n            You can set the value to <c>null</c> to disable the matching.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch?"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised when the item is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <see cref=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\" /> component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavLink","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavLink"}},{"HashCode":-1049212623,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavLink","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/navs-tabs/\">Bootstrap nav-link</see> component.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxNavLink#HxNavLink\">https://havit.blazor.eu/components/HxNavLink#HxNavLink</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxNavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"\n            <summary>\n            Navigation target.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch?","Documentation":"\n            <summary>\n            URL matching behavior for the underlying <see cref=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\" />.\n            Default is <see cref=\"F:Microsoft.AspNetCore.Components.Routing.NavLinkMatch.Prefix\" />.\n            You can set the value to <c>null</c> to disable the matching.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch?"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised when the item is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <see cref=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\" /> component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavLink","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavLink","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-823118829,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavLink.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxNavLink"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavLink.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavLink","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1298172845,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxNavLink.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxNavLink"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxNavLink.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxNavLink","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1985180102,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxScrollspy","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/scrollspy/\">Bootstrap Scrollspy</see> component.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxScrollspy\">https://havit.blazor.eu/components/HxScrollspy</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxScrollspy"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TargetId","TypeName":"System.String","IsEditorRequired":true,"Documentation":"\n            <summary>\n            ID of the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxNav\" /> or list-group with scrollspy navigation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TargetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Scrollspy additional CSS class. Added to the main div (.hx-scrollspy).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content to be spied on. Elements with IDs are required (corresponding IDs to be used in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxNavLink.Href\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxScrollspy","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxScrollspy"}},{"HashCode":-541902655,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxScrollspy","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/scrollspy/\">Bootstrap Scrollspy</see> component.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxScrollspy\">https://havit.blazor.eu/components/HxScrollspy</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxScrollspy"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TargetId","TypeName":"System.String","IsEditorRequired":true,"Documentation":"\n            <summary>\n            ID of the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxNav\" /> or list-group with scrollspy navigation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TargetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Scrollspy additional CSS class. Added to the main div (.hx-scrollspy).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content to be spied on. Elements with IDs are required (corresponding IDs to be used in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxNavLink.Href\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxScrollspy","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxScrollspy","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-837906852,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxScrollspy.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content to be spied on. Elements with IDs are required (corresponding IDs to be used in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxNavLink.Href\" />).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxScrollspy"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxScrollspy.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxScrollspy","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1834312578,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxScrollspy.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content to be spied on. Elements with IDs are required (corresponding IDs to be used in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxNavLink.Href\" />).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxScrollspy"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxScrollspy.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxScrollspy","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2087708015,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxScrollspyNavLink","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Temporary (?) NavLink component to be used with <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxScrollspy\" /> where <c>#id</c> anchors are required and <c>page-route#id</c> cannot be used.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxScrollspyNavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","IsEditorRequired":true,"Documentation":"\n            <summary>\n            The navigation target in <c>#id</c> form.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised when the item is clicked (before the navigation location is changed to <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxScrollspyNavLink.Href\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>&lt;a&gt;</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxScrollspyNavLink","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxScrollspyNavLink"}},{"HashCode":-1904299008,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxScrollspyNavLink","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Temporary (?) NavLink component to be used with <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxScrollspy\" /> where <c>#id</c> anchors are required and <c>page-route#id</c> cannot be used.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxScrollspyNavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","IsEditorRequired":true,"Documentation":"\n            <summary>\n            The navigation target in <c>#id</c> form.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised when the item is clicked (before the navigation location is changed to <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxScrollspyNavLink.Href\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>&lt;a&gt;</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxScrollspyNavLink","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxScrollspyNavLink","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2145914938,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxScrollspyNavLink.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxScrollspyNavLink"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxScrollspyNavLink.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxScrollspyNavLink","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1503598611,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxScrollspyNavLink.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxScrollspyNavLink"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxScrollspyNavLink.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxScrollspyNavLink","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1057572414,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Sidebar component - responsive navigation sidebar.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxSidebar\">https://havit.blazor.eu/components/HxSidebar</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxSidebar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sidebar header.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sidebar items. Use <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemsTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ExpandIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            <c>ExpandIcon</c> is obsolete and will be removed in a future release. Use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.TogglerTemplate\" /> if you want to render an icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"CollapseIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            <c>CollapseIcon</c> is obsolete and will be removed in a future release. Use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.TogglerTemplate\" /> if you want to render an icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CollapseIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Havit.Blazor.Components.Web.Bootstrap.SidebarFooterTemplateContext>","Documentation":"\n            <summary>\n            Sidebar footer (e.g. logged user, language switch, ...).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Havit.Blazor.Components.Web.Bootstrap.SidebarFooterTemplateContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TogglerTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Havit.Blazor.Components.Web.Bootstrap.SidebarTogglerTemplateContext>","Documentation":"\n            <summary>\n            Vertical toggler (desktop version) to be rendered instead of the default bar/arrow.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TogglerTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Havit.Blazor.Components.Web.Bootstrap.SidebarTogglerTemplateContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            ID of the root sidebar HTML element.\n            (Autogenerated if not set.)\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Collapsed","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSidebar\" /> is collapsed, can be used to alter the state (expand or collapse the sidebar).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Collapsed","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CollapsedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Fires when the sidebar is expanded or collapsed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CollapsedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"MultipleItemsExpansion","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Whether multiple items can be in the expanded state at once.\n            If set to <c>false</c>, upon item expansion, all other items are collapsed.\n            The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MultipleItemsExpansion","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ResponsiveBreakpoint","TypeName":"Havit.Blazor.Components.Web.Bootstrap.SidebarResponsiveBreakpoint","IsEnum":true,"Documentation":"\n            <summary>\n            The breakpoint below which the sidebar switches to the mobile version (exclusive).<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.SidebarResponsiveBreakpoint.Medium\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ResponsiveBreakpoint","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.SidebarResponsiveBreakpoint"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebar"}},{"HashCode":409602350,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Sidebar component - responsive navigation sidebar.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxSidebar\">https://havit.blazor.eu/components/HxSidebar</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sidebar header.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sidebar items. Use <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemsTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ExpandIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            <c>ExpandIcon</c> is obsolete and will be removed in a future release. Use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.TogglerTemplate\" /> if you want to render an icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"CollapseIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            <c>CollapseIcon</c> is obsolete and will be removed in a future release. Use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.TogglerTemplate\" /> if you want to render an icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CollapseIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Havit.Blazor.Components.Web.Bootstrap.SidebarFooterTemplateContext>","Documentation":"\n            <summary>\n            Sidebar footer (e.g. logged user, language switch, ...).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Havit.Blazor.Components.Web.Bootstrap.SidebarFooterTemplateContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TogglerTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Havit.Blazor.Components.Web.Bootstrap.SidebarTogglerTemplateContext>","Documentation":"\n            <summary>\n            Vertical toggler (desktop version) to be rendered instead of the default bar/arrow.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TogglerTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Havit.Blazor.Components.Web.Bootstrap.SidebarTogglerTemplateContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            ID of the root sidebar HTML element.\n            (Autogenerated if not set.)\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Collapsed","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSidebar\" /> is collapsed, can be used to alter the state (expand or collapse the sidebar).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Collapsed","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CollapsedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Fires when the sidebar is expanded or collapsed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CollapsedChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"MultipleItemsExpansion","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Whether multiple items can be in the expanded state at once.\n            If set to <c>false</c>, upon item expansion, all other items are collapsed.\n            The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MultipleItemsExpansion","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ResponsiveBreakpoint","TypeName":"Havit.Blazor.Components.Web.Bootstrap.SidebarResponsiveBreakpoint","IsEnum":true,"Documentation":"\n            <summary>\n            The breakpoint below which the sidebar switches to the mobile version (exclusive).<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.SidebarResponsiveBreakpoint.Medium\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ResponsiveBreakpoint","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.SidebarResponsiveBreakpoint"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2120942269,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar.HeaderTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Sidebar header.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"HxSidebar"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar.HeaderTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebar","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":53965334,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar.HeaderTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Sidebar header.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar.HeaderTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebar","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":550330161,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar.ItemsTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Sidebar items. Use <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemsTemplate","ParentTag":"HxSidebar"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar.ItemsTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebar","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-431466450,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar.ItemsTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Sidebar items. Use <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemsTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar.ItemsTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebar","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1745223344,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar.FooterTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Sidebar footer (e.g. logged user, language switch, ...).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"HxSidebar"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'FooterTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar.FooterTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebar","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-743145632,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar.FooterTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Sidebar footer (e.g. logged user, language switch, ...).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'FooterTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar.FooterTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebar","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2002167916,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar.TogglerTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Vertical toggler (desktop version) to be rendered instead of the default bar/arrow.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TogglerTemplate","ParentTag":"HxSidebar"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'TogglerTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar.TogglerTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebar","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1154422201,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar.TogglerTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Vertical toggler (desktop version) to be rendered instead of the default bar/arrow.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TogglerTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'TogglerTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar.TogglerTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebar","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-575210174,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarBrand","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Brand for the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.HeaderTemplate\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxSidebarBrand"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"BrandName","TypeName":"System.String","Documentation":"\n            <summary>\n            The long name of the brand.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BrandName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LogoTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Havit.Blazor.Components.Web.Bootstrap.SidebarBrandLogoTemplateContext>","Documentation":"\n            <summary>\n            The logo of the brand.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LogoTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Havit.Blazor.Components.Web.Bootstrap.SidebarBrandLogoTemplateContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BrandNameShort","TypeName":"System.String","Documentation":"\n            <summary>\n            The short name of the brand.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BrandNameShort","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarBrand","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebarBrand"}},{"HashCode":-58409492,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarBrand","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Brand for the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.HeaderTemplate\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarBrand"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"BrandName","TypeName":"System.String","Documentation":"\n            <summary>\n            The long name of the brand.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BrandName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LogoTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Havit.Blazor.Components.Web.Bootstrap.SidebarBrandLogoTemplateContext>","Documentation":"\n            <summary>\n            The logo of the brand.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LogoTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Havit.Blazor.Components.Web.Bootstrap.SidebarBrandLogoTemplateContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BrandNameShort","TypeName":"System.String","Documentation":"\n            <summary>\n            The short name of the brand.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BrandNameShort","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarBrand","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebarBrand","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-979379651,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarBrand.LogoTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The logo of the brand.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LogoTemplate","ParentTag":"HxSidebarBrand"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'LogoTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarBrand.LogoTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebarBrand","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":329529226,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarBrand.LogoTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The logo of the brand.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LogoTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarBrand"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'LogoTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarBrand.LogoTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebarBrand","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1580072621,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarFooter","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Item for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSidebar\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxSidebarFooter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Item text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Item icon (optional).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"\n            <summary>\n            Item navigation target.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch?","Documentation":"\n            <summary>\n            URL matching behavior for the underlying <see cref=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\" />.\n            The default value is <see cref=\"F:Microsoft.AspNetCore.Components.Routing.NavLinkMatch.Prefix\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Allows you to disable the item with <c>false</c>.\n            The default value is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sub-items (not intended to be used for any other purpose).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarFooter","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebarFooter"}},{"HashCode":927629864,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarFooter","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Item for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSidebar\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarFooter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Item text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Item icon (optional).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"\n            <summary>\n            Item navigation target.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch?","Documentation":"\n            <summary>\n            URL matching behavior for the underlying <see cref=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\" />.\n            The default value is <see cref=\"F:Microsoft.AspNetCore.Components.Routing.NavLinkMatch.Prefix\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Allows you to disable the item with <c>false</c>.\n            The default value is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sub-items (not intended to be used for any other purpose).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarFooter","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebarFooter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2117907135,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarFooter.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Sub-items (not intended to be used for any other purpose).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxSidebarFooter"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarFooter.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebarFooter","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1292785192,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarFooter.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Sub-items (not intended to be used for any other purpose).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarFooter"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarFooter.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebarFooter","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-957377248,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Item for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSidebar\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxSidebarItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Item text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Item icon (optional).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"TooltipText","TypeName":"System.String","Documentation":"\n            <summary>\n            Text content of tooltip displayed while hovering item of collapsed Sidebar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"\n            <summary>\n            Item navigation target.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch?","Documentation":"\n            <summary>\n            URL matching behavior for the underlying <see cref=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\" />.\n            Default is <see cref=\"F:Microsoft.AspNetCore.Components.Routing.NavLinkMatch.Prefix\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch?"}},{"Kind":"Components.Component","Name":"ExpandOnMatch","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Set to <c>false</c> if you don't want to expand the sidebar if URL matches.<br />\n            Default is <c>true</c>.\n            NOTE: The expansion is only applied on initial load, the sidebar does not track the URL changes (this may change in the future).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandOnMatch","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HighlightOnActiveChild","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Set to <c>false</c> if you don't want to highlight the item if one of the children items is active (URL matches).<br />\n            Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HighlightOnActiveChild","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows you to disable the item with <c>false</c>.\n            Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to add.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Havit.Blazor.Components.Web.Bootstrap.SidebarItemContentTemplateContext>","Documentation":"\n            <summary>\n            Inner custom content for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContentTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Havit.Blazor.Components.Web.Bootstrap.SidebarItemContentTemplateContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sub-items (not intended to be used for any other purpose).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebarItem"}},{"HashCode":-1097258566,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Item for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSidebar\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Item text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Item icon (optional).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"TooltipText","TypeName":"System.String","Documentation":"\n            <summary>\n            Text content of tooltip displayed while hovering item of collapsed Sidebar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Documentation":"\n            <summary>\n            Item navigation target.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch?","Documentation":"\n            <summary>\n            URL matching behavior for the underlying <see cref=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\" />.\n            Default is <see cref=\"F:Microsoft.AspNetCore.Components.Routing.NavLinkMatch.Prefix\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch?"}},{"Kind":"Components.Component","Name":"ExpandOnMatch","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Set to <c>false</c> if you don't want to expand the sidebar if URL matches.<br />\n            Default is <c>true</c>.\n            NOTE: The expansion is only applied on initial load, the sidebar does not track the URL changes (this may change in the future).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpandOnMatch","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HighlightOnActiveChild","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Set to <c>false</c> if you don't want to highlight the item if one of the children items is active (URL matches).<br />\n            Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HighlightOnActiveChild","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows you to disable the item with <c>false</c>.\n            Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to add.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Havit.Blazor.Components.Web.Bootstrap.SidebarItemContentTemplateContext>","Documentation":"\n            <summary>\n            Inner custom content for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContentTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Havit.Blazor.Components.Web.Bootstrap.SidebarItemContentTemplateContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Sub-items (not intended to be used for any other purpose).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebarItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1621980243,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem.ContentTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Inner custom content for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentTemplate","ParentTag":"HxSidebarItem"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ContentTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem.ContentTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebarItem","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-353417924,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem.ContentTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Inner custom content for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ContentTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem.ContentTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebarItem","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2125529948,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Sub-items (not intended to be used for any other purpose).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxSidebarItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebarItem","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":668072903,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Sub-items (not intended to be used for any other purpose).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebarItem","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1393834645,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/offcanvas/\">Bootstrap Offcanvas</see> component (aka Drawer).<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxOffcanvas\">https://havit.blazor.eu/components/HxOffcanvas</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxOffcanvas"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Text for the title in the header.\n            (Is rendered into <c>&lt;h5 class=\"offcanvas-title\"&gt;</c> - in contrast to <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.HeaderTemplate\" /> which is rendered directly into <c>offcanvas-header</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content for the header.\n            (Is rendered directly into <c>offcanvas-header</c> - in contrast to <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.Title\" /> which is rendered into <c>&lt;h5 class=\"offcanvas-title\"&gt;</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BodyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Body content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BodyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Footer content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.OffcanvasPlacement?","Documentation":"\n            <summary>\n            Placement of the offcanvas. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.OffcanvasPlacement.End\" /> (right).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.OffcanvasPlacement?"}},{"Kind":"Components.Component","Name":"ResponsiveBreakpoint","TypeName":"Havit.Blazor.Components.Web.Bootstrap.OffcanvasResponsiveBreakpoint?","Documentation":"\n            <summary>\n            Breakpoint below which the contents are rendered outside the viewport in an offcanvas (above this breakpoint, the offcanvas body is rendered inside the viewport).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ResponsiveBreakpoint","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.OffcanvasResponsiveBreakpoint?"}},{"Kind":"Components.Component","Name":"RenderMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.OffcanvasRenderMode","IsEnum":true,"Documentation":"\n            <summary>\n            Determines whether the content is always rendered or only if the offcanvas is open.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.OffcanvasRenderMode.OpenOnly\" />.<br />\n            Please note, this setting applies only when <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.OffcanvasResponsiveBreakpoint.None\" /> is set. For all other values, the content is always rendered (to be available for the mobile version).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RenderMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.OffcanvasRenderMode"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.OffcanvasSize?","Documentation":"\n            <summary>\n            Size of the offcanvas. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.OffcanvasSize.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.OffcanvasSize?"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether the modal shows a close button in the header.\n            The default value is <c>true</c>.\n            Use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.CloseButtonIcon\" /> to change the shape of the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CloseOnEscape","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether the offcanvas closes when the escape key is pressed.\n            The default value is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CloseOnEscape","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CloseButtonIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            The close icon to be used in the header.\n            If set to <c>null</c>, the Bootstrap default close button will be used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CloseButtonIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"Backdrop","TypeName":"Havit.Blazor.Components.Web.Bootstrap.OffcanvasBackdrop?","Documentation":"\n            <summary>\n            Indicates whether to apply a backdrop on the body while the offcanvas is open.\n            If set to <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.OffcanvasBackdrop.Static\" />, the offcanvas cannot be closed by clicking on the backdrop.\n            The default value (from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.Defaults\" />) is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.OffcanvasBackdrop.True\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Backdrop","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.OffcanvasBackdrop?"}},{"Kind":"Components.Component","Name":"ScrollingEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether body (page) scrolling is allowed while the offcanvas is open.\n            The default value (from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.Defaults\" />) is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ScrollingEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Offcanvas additional CSS class. Added to root <c>div</c> (<c>.offcanvas</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional header CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BodyCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional body CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BodyCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional footer CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClosed","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            This event is fired when an offcanvas element has been hidden from the user (will wait for CSS transitions to complete).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClosed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            This event is fired when an offcanvas element has been made visible to the user (will wait for CSS transitions to complete).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxOffcanvas"}},{"HashCode":1255771844,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/offcanvas/\">Bootstrap Offcanvas</see> component (aka Drawer).<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxOffcanvas\">https://havit.blazor.eu/components/HxOffcanvas</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Text for the title in the header.\n            (Is rendered into <c>&lt;h5 class=\"offcanvas-title\"&gt;</c> - in contrast to <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.HeaderTemplate\" /> which is rendered directly into <c>offcanvas-header</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content for the header.\n            (Is rendered directly into <c>offcanvas-header</c> - in contrast to <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.Title\" /> which is rendered into <c>&lt;h5 class=\"offcanvas-title\"&gt;</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BodyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Body content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BodyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Footer content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.OffcanvasPlacement?","Documentation":"\n            <summary>\n            Placement of the offcanvas. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.OffcanvasPlacement.End\" /> (right).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.OffcanvasPlacement?"}},{"Kind":"Components.Component","Name":"ResponsiveBreakpoint","TypeName":"Havit.Blazor.Components.Web.Bootstrap.OffcanvasResponsiveBreakpoint?","Documentation":"\n            <summary>\n            Breakpoint below which the contents are rendered outside the viewport in an offcanvas (above this breakpoint, the offcanvas body is rendered inside the viewport).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ResponsiveBreakpoint","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.OffcanvasResponsiveBreakpoint?"}},{"Kind":"Components.Component","Name":"RenderMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.OffcanvasRenderMode","IsEnum":true,"Documentation":"\n            <summary>\n            Determines whether the content is always rendered or only if the offcanvas is open.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.OffcanvasRenderMode.OpenOnly\" />.<br />\n            Please note, this setting applies only when <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.OffcanvasResponsiveBreakpoint.None\" /> is set. For all other values, the content is always rendered (to be available for the mobile version).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RenderMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.OffcanvasRenderMode"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.OffcanvasSize?","Documentation":"\n            <summary>\n            Size of the offcanvas. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.OffcanvasSize.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.OffcanvasSize?"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether the modal shows a close button in the header.\n            The default value is <c>true</c>.\n            Use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.CloseButtonIcon\" /> to change the shape of the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CloseOnEscape","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether the offcanvas closes when the escape key is pressed.\n            The default value is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CloseOnEscape","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CloseButtonIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            The close icon to be used in the header.\n            If set to <c>null</c>, the Bootstrap default close button will be used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CloseButtonIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"Backdrop","TypeName":"Havit.Blazor.Components.Web.Bootstrap.OffcanvasBackdrop?","Documentation":"\n            <summary>\n            Indicates whether to apply a backdrop on the body while the offcanvas is open.\n            If set to <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.OffcanvasBackdrop.Static\" />, the offcanvas cannot be closed by clicking on the backdrop.\n            The default value (from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.Defaults\" />) is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.OffcanvasBackdrop.True\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Backdrop","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.OffcanvasBackdrop?"}},{"Kind":"Components.Component","Name":"ScrollingEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether body (page) scrolling is allowed while the offcanvas is open.\n            The default value (from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.Defaults\" />) is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ScrollingEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Offcanvas additional CSS class. Added to root <c>div</c> (<c>.offcanvas</c>).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional header CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BodyCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional body CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BodyCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional footer CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClosed","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            This event is fired when an offcanvas element has been hidden from the user (will wait for CSS transitions to complete).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClosed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            This event is fired when an offcanvas element has been made visible to the user (will wait for CSS transitions to complete).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxOffcanvas","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1809088878,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.HeaderTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content for the header.\n            (Is rendered directly into <c>offcanvas-header</c> - in contrast to <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.Title\" /> which is rendered into <c>&lt;h5 class=\"offcanvas-title\"&gt;</c>).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"HxOffcanvas"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.HeaderTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxOffcanvas","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1239696260,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.HeaderTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content for the header.\n            (Is rendered directly into <c>offcanvas-header</c> - in contrast to <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.Title\" /> which is rendered into <c>&lt;h5 class=\"offcanvas-title\"&gt;</c>).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.HeaderTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxOffcanvas","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1209081934,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.BodyTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Body content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BodyTemplate","ParentTag":"HxOffcanvas"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.BodyTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxOffcanvas","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-594114558,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.BodyTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Body content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BodyTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.BodyTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxOffcanvas","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-265969269,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.FooterTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Footer content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"HxOffcanvas"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.FooterTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxOffcanvas","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":172968878,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.FooterTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Footer content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.FooterTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxOffcanvas","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":280074849,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/placeholders/\">Bootstrap 5 Placeholder</see> component, also known as Skeleton.<br />\n            Use loading placeholders for your components or pages to indicate that something may still be loading.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxPlaceholder\">https://havit.blazor.eu/components/HxPlaceholder</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxPlaceholder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.PlaceholderSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.PlaceholderSettings"}},{"Kind":"Components.Component","Name":"Columns","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.Columns\" />\n        ","Metadata":{"Common.PropertyName":"Columns","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColumnsSmallUp","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.ColumnsSmallUp\" />\n        ","Metadata":{"Common.PropertyName":"ColumnsSmallUp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColumnsMediumUp","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.ColumnsMediumUp\" />\n        ","Metadata":{"Common.PropertyName":"ColumnsMediumUp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColumnsLargeUp","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.ColumnsLargeUp\" />\n        ","Metadata":{"Common.PropertyName":"ColumnsLargeUp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColumnsExtraLargeUp","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.ColumnsExtraLargeUp\" />\n        ","Metadata":{"Common.PropertyName":"ColumnsExtraLargeUp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColumnsXxlUp","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.ColumnsXxlUp\" />\n        ","Metadata":{"Common.PropertyName":"ColumnsXxlUp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.PlaceholderSize?","Documentation":"\n            <summary>\n            Size of the placeholder.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.PlaceholderSize?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Color of the placeholder.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Optional content of the placeholder (usually not used).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying HTML element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxPlaceholder"}},{"HashCode":1624429366,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/placeholders/\">Bootstrap 5 Placeholder</see> component, also known as Skeleton.<br />\n            Use loading placeholders for your components or pages to indicate that something may still be loading.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxPlaceholder\">https://havit.blazor.eu/components/HxPlaceholder</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.PlaceholderSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.PlaceholderSettings"}},{"Kind":"Components.Component","Name":"Columns","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.Columns\" />\n        ","Metadata":{"Common.PropertyName":"Columns","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColumnsSmallUp","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.ColumnsSmallUp\" />\n        ","Metadata":{"Common.PropertyName":"ColumnsSmallUp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColumnsMediumUp","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.ColumnsMediumUp\" />\n        ","Metadata":{"Common.PropertyName":"ColumnsMediumUp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColumnsLargeUp","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.ColumnsLargeUp\" />\n        ","Metadata":{"Common.PropertyName":"ColumnsLargeUp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColumnsExtraLargeUp","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.ColumnsExtraLargeUp\" />\n        ","Metadata":{"Common.PropertyName":"ColumnsExtraLargeUp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColumnsXxlUp","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.ColumnsXxlUp\" />\n        ","Metadata":{"Common.PropertyName":"ColumnsXxlUp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.PlaceholderSize?","Documentation":"\n            <summary>\n            Size of the placeholder.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.PlaceholderSize?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Color of the placeholder.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Optional content of the placeholder (usually not used).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying HTML element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxPlaceholder","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":849715469,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Optional content of the placeholder (usually not used).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxPlaceholder"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxPlaceholder","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1856794092,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Optional content of the placeholder (usually not used).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxPlaceholder","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1665599944,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderButton","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/placeholders/\">Bootstrap 5 placeholder</see> in the form of a button.<br />\n            Derives from <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxButton\" /> (adds the <c>placeholder</c> class and changes the default value of <c>Enabled</c> to <c>false</c>).<br />\n            Set the size of the button by using the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderButton.Columns\" /> parameter.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxPlaceholderButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Columns","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.Columns\" />\n        ","Metadata":{"Common.PropertyName":"Columns","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColumnsSmallUp","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.ColumnsSmallUp\" />\n        ","Metadata":{"Common.PropertyName":"ColumnsSmallUp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColumnsMediumUp","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.ColumnsMediumUp\" />\n        ","Metadata":{"Common.PropertyName":"ColumnsMediumUp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColumnsLargeUp","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.ColumnsLargeUp\" />\n        ","Metadata":{"Common.PropertyName":"ColumnsLargeUp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColumnsExtraLargeUp","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.ColumnsExtraLargeUp\" />\n        ","Metadata":{"Common.PropertyName":"ColumnsExtraLargeUp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColumnsXxlUp","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.ColumnsXxlUp\" />\n        ","Metadata":{"Common.PropertyName":"ColumnsXxlUp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon to render into the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"IconPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?","Documentation":"\n            <summary>\n            Position of the icon within the button. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement.Start\" /> (configurable through <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Bootstrap button style - theme color.<br />\n            The default is taken from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" /> (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None\" /> if not customized).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSize?","Documentation":"\n            <summary>\n            Button size. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonSize.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSize?"}},{"Kind":"Components.Component","Name":"Outline","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/buttons/#outline-buttons\">Bootstrap \"outline\" button</see> style.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Outline","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the <c>&lt;button /&gt;</c>.<br />\n            When using <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> you might want to use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" /> to get the desired result.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class to be rendered with the button icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Associated <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"FormId","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the form the button belongs to.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FormId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Tooltip text.<br />\n            If set, a <c>span</c> wrapper will be rendered around the <c>&lt;button /&gt;</c>. For most scenarios, you will then use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            Tooltip placement.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement"}},{"Kind":"Components.Component","Name":"TooltipCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipWrapperCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip <c>span</c> wrapper of the <c>&lt;button /&gt;</c>.<br />\n            If set, the <c>span</c> wrapper will be rendered no matter whether the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> text is set or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipWrapperCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation succeeds.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Stops onClick-event propagation. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickStopPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClickPreventDefault","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Prevents the default action for the onclick event. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Spinner","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Sets the state of the embedded <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSpinner\" />.\n            Leave <c>null</c> if you want automated spinner when any of the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers is running.\n            You can set an explicit <c>false</c> constant to disable (override) the spinner automation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Spinner","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"SingleClickProtection","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Sets <c>false</c> if you want to allow multiple <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers in parallel. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SingleClickProtection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>&lt;button&gt;</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderButton","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxPlaceholderButton"}},{"HashCode":1592663868,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderButton","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/placeholders/\">Bootstrap 5 placeholder</see> in the form of a button.<br />\n            Derives from <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxButton\" /> (adds the <c>placeholder</c> class and changes the default value of <c>Enabled</c> to <c>false</c>).<br />\n            Set the size of the button by using the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderButton.Columns\" /> parameter.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Columns","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.Columns\" />\n        ","Metadata":{"Common.PropertyName":"Columns","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColumnsSmallUp","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.ColumnsSmallUp\" />\n        ","Metadata":{"Common.PropertyName":"ColumnsSmallUp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColumnsMediumUp","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.ColumnsMediumUp\" />\n        ","Metadata":{"Common.PropertyName":"ColumnsMediumUp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColumnsLargeUp","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.ColumnsLargeUp\" />\n        ","Metadata":{"Common.PropertyName":"ColumnsLargeUp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColumnsExtraLargeUp","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.ColumnsExtraLargeUp\" />\n        ","Metadata":{"Common.PropertyName":"ColumnsExtraLargeUp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ColumnsXxlUp","TypeName":"System.String","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Bootstrap.ILayoutColumnComponent.ColumnsXxlUp\" />\n        ","Metadata":{"Common.PropertyName":"ColumnsXxlUp","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSettings"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Text of the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Icon to render into the button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"IconPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?","Documentation":"\n            <summary>\n            Position of the icon within the button. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement.Start\" /> (configurable through <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" />).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Bootstrap button style - theme color.<br />\n            The default is taken from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults\" /> (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None\" /> if not customized).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ButtonSize?","Documentation":"\n            <summary>\n            Button size. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ButtonSize.Regular\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ButtonSize?"}},{"Kind":"Components.Component","Name":"Outline","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/buttons/#outline-buttons\">Bootstrap \"outline\" button</see> style.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Outline","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the <c>&lt;button /&gt;</c>.<br />\n            When using <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> you might want to use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" /> to get the desired result.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class to be rendered with the button icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IconCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <inheritdoc cref=\"P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled\" />\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Associated <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"FormId","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies the form the button belongs to.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FormId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"\n            <summary>\n            Tooltip text.<br />\n            If set, a <c>span</c> wrapper will be rendered around the <c>&lt;button /&gt;</c>. For most scenarios, you will then use <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass\" /> instead of <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Tooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipPlacement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            Tooltip placement.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipPlacement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement"}},{"Kind":"Components.Component","Name":"TooltipCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipWrapperCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the tooltip <c>span</c> wrapper of the <c>&lt;button /&gt;</c>.<br />\n            If set, the <c>span</c> wrapper will be rendered no matter whether the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip\" /> text is set or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TooltipWrapperCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation succeeds.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the button is clicked and EditContext validation fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Stops onClick-event propagation. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickStopPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClickPreventDefault","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Prevents the default action for the onclick event. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Spinner","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Sets the state of the embedded <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxSpinner\" />.\n            Leave <c>null</c> if you want automated spinner when any of the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers is running.\n            You can set an explicit <c>false</c> constant to disable (override) the spinner automation.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Spinner","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"SingleClickProtection","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Sets <c>false</c> if you want to allow multiple <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick\" /> handlers in parallel. Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SingleClickProtection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying <c>&lt;button&gt;</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderButton","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxPlaceholderButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1433959431,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderButton.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxPlaceholderButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderButton.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxPlaceholderButton","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":530312911,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderButton.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Button content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderButton.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxPlaceholderButton","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1775552970,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Optional container for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder\" /> components where you can set the animation and some common properties\n            for all placeholders contained.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxPlaceholderContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.PlaceholderContainerSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.PlaceholderContainerSettings"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"Havit.Blazor.Components.Web.Bootstrap.PlaceholderAnimation?","Documentation":"\n            <summary>\n            Animation of the placeholders in the container.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animation","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.PlaceholderAnimation?"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.PlaceholderSize?","Documentation":"\n            <summary>\n            Size of the placeholders (propagated to the child <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder\" />s).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.PlaceholderSize?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Color of the placeholders (propagated to the child <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder\" />s).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content of the placeholder container (put your <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder\" />s here).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying HTML element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxPlaceholderContainer"}},{"HashCode":-1416180688,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Optional container for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder\" /> components where you can set the animation and some common properties\n            for all placeholders contained.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.PlaceholderContainerSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.PlaceholderContainerSettings"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"Havit.Blazor.Components.Web.Bootstrap.PlaceholderAnimation?","Documentation":"\n            <summary>\n            Animation of the placeholders in the container.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animation","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.PlaceholderAnimation?"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.PlaceholderSize?","Documentation":"\n            <summary>\n            Size of the placeholders (propagated to the child <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder\" />s).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.PlaceholderSize?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Color of the placeholders (propagated to the child <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder\" />s).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content of the placeholder container (put your <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder\" />s here).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying HTML element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxPlaceholderContainer","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2080009201,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content of the placeholder container (put your <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder\" />s here).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxPlaceholderContainer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxPlaceholderContainer","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-872927717,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content of the placeholder container (put your <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder\" />s here).\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxPlaceholderContainer","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":933636453,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxProgress","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/progress/\">Bootstrap 5 Progress</see> component.<br />\n            A wrapping component for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxProgressBar\" />.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxProgress\">https://havit.blazor.eu/components/HxProgress</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxProgress"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content consisting of one or multiple <c>HxProgressBar</c> components.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS classes for the progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Height of all inner progress bars. The default value is <c>15px</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"MinValue","TypeName":"System.Single","Documentation":"\n            <summary>\n            Lowest possible value. The default value is <c>0</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinValue","Common.GloballyQualifiedTypeName":"global::System.Single"}},{"Kind":"Components.Component","Name":"MaxValue","TypeName":"System.Single","Documentation":"\n            <summary>\n            Highest possible value. The default value is <c>100</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxValue","Common.GloballyQualifiedTypeName":"global::System.Single"}},{"Kind":"Components.Component","Name":"Striped","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If <c>true</c>, applies a stripe via CSS gradient over the background color of the progress bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Striped","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Animated","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If <c>true</c>, the stripes are animated right to left using CSS3 animations. The stripes are automatically switched on.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animated","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxProgress","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxProgress"}},{"HashCode":-1943234278,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxProgress","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/progress/\">Bootstrap 5 Progress</see> component.<br />\n            A wrapping component for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxProgressBar\" />.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxProgress\">https://havit.blazor.eu/components/HxProgress</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxProgress"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content consisting of one or multiple <c>HxProgressBar</c> components.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS classes for the progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Height of all inner progress bars. The default value is <c>15px</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"MinValue","TypeName":"System.Single","Documentation":"\n            <summary>\n            Lowest possible value. The default value is <c>0</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinValue","Common.GloballyQualifiedTypeName":"global::System.Single"}},{"Kind":"Components.Component","Name":"MaxValue","TypeName":"System.Single","Documentation":"\n            <summary>\n            Highest possible value. The default value is <c>100</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxValue","Common.GloballyQualifiedTypeName":"global::System.Single"}},{"Kind":"Components.Component","Name":"Striped","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If <c>true</c>, applies a stripe via CSS gradient over the background color of the progress bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Striped","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Animated","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If <c>true</c>, the stripes are animated right to left using CSS3 animations. The stripes are automatically switched on.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animated","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxProgress","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxProgress","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2005667717,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxProgress.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content consisting of one or multiple <c>HxProgressBar</c> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxProgress"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxProgress.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxProgress","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-196755785,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxProgress.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content consisting of one or multiple <c>HxProgressBar</c> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxProgress"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxProgress.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxProgress","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1445593912,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxProgressBar","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            A progress bar to be placed inside <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxProgress\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxProgressBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Inner content of the progress bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS classes to be applied to the progress bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Single","Documentation":"\n            <summary>\n            Current value (proportion of the progress bar that is filled).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Single"}},{"Kind":"Components.Component","Name":"MinValue","TypeName":"System.Single?","Documentation":"\n            <summary>\n            Lowest possible value. Default is <c>0</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinValue","Common.GloballyQualifiedTypeName":"global::System.Single?"}},{"Kind":"Components.Component","Name":"MaxValue","TypeName":"System.Single?","Documentation":"\n            <summary>\n            Highest possible value. Default is <c>100</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxValue","Common.GloballyQualifiedTypeName":"global::System.Single?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            Text to be displayed on the progress bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Fill (background) color of the progress bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"Striped","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            If <c>true</c>, applies a stripe via CSS gradient over the progress bar's background color.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Striped","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Animated","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            If <c>true</c>, stripes are animated right to left via CSS3 animations, stripes are automatically switched on.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animated","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxProgressBar","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxProgressBar"}},{"HashCode":68394218,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxProgressBar","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            A progress bar to be placed inside <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxProgress\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxProgressBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Inner content of the progress bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS classes to be applied to the progress bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Single","Documentation":"\n            <summary>\n            Current value (proportion of the progress bar that is filled).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Single"}},{"Kind":"Components.Component","Name":"MinValue","TypeName":"System.Single?","Documentation":"\n            <summary>\n            Lowest possible value. Default is <c>0</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinValue","Common.GloballyQualifiedTypeName":"global::System.Single?"}},{"Kind":"Components.Component","Name":"MaxValue","TypeName":"System.Single?","Documentation":"\n            <summary>\n            Highest possible value. Default is <c>100</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxValue","Common.GloballyQualifiedTypeName":"global::System.Single?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            Text to be displayed on the progress bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Fill (background) color of the progress bar.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"Striped","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            If <c>true</c>, applies a stripe via CSS gradient over the progress bar's background color.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Striped","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Animated","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            If <c>true</c>, stripes are animated right to left via CSS3 animations, stripes are automatically switched on.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animated","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxProgressBar","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxProgressBar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1391809921,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxProgressBar.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Inner content of the progress bar.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxProgressBar"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxProgressBar.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxProgressBar","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1957968881,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxProgressBar.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Inner content of the progress bar.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxProgressBar"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxProgressBar.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxProgressBar","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1067313179,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Displays the content of the component as \"in progress\".<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxProgressIndicator\">https://havit.blazor.eu/components/HxProgressIndicator</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxProgressIndicator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ProgressIndicatorSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ProgressIndicatorSettings"}},{"Kind":"Components.Component","Name":"InProgress","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the content should be displayed as \"in progress\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InProgress","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Debounce delay in milliseconds. The default is <c>300 ms</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Delay","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Wrapped content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxProgressIndicator"}},{"HashCode":-902468543,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Displays the content of the component as \"in progress\".<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxProgressIndicator\">https://havit.blazor.eu/components/HxProgressIndicator</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ProgressIndicatorSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ProgressIndicatorSettings"}},{"Kind":"Components.Component","Name":"InProgress","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the content should be displayed as \"in progress\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InProgress","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Debounce delay in milliseconds. The default is <c>300 ms</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Delay","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Wrapped content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxProgressIndicator","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1862330132,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Wrapped content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxProgressIndicator"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxProgressIndicator","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-744782714,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Wrapped content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxProgressIndicator","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1555185733,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSpinner","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap <see href=\"https://getbootstrap.com/docs/5.3/components/spinners/\">Spinner</see> (usually indicates an operation in progress).<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxSpinner\">https://havit.blazor.eu/components/HxSpinner</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxSpinner"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"Havit.Blazor.Components.Web.Bootstrap.SpinnerType","IsEnum":true,"Documentation":"\n            <summary>\n            Spinner type. The spinner type can be Border (default) or Grow.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.SpinnerType"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.SpinnerSize","IsEnum":true,"Documentation":"\n            <summary>\n            Spinner size. You can also use a custom <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSpinner.CssClass\" /> to change the dimensions as needed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.SpinnerSize"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor","IsEnum":true,"Documentation":"\n            <summary>\n            Spinner color.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class to be applied.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSpinner","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSpinner"}},{"HashCode":-1347760849,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSpinner","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Bootstrap <see href=\"https://getbootstrap.com/docs/5.3/components/spinners/\">Spinner</see> (usually indicates an operation in progress).<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxSpinner\">https://havit.blazor.eu/components/HxSpinner</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxSpinner"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"Havit.Blazor.Components.Web.Bootstrap.SpinnerType","IsEnum":true,"Documentation":"\n            <summary>\n            Spinner type. The spinner type can be Border (default) or Grow.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.SpinnerType"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Havit.Blazor.Components.Web.Bootstrap.SpinnerSize","IsEnum":true,"Documentation":"\n            <summary>\n            Spinner size. You can also use a custom <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxSpinner.CssClass\" /> to change the dimensions as needed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.SpinnerSize"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor","IsEnum":true,"Documentation":"\n            <summary>\n            Spinner color.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class to be applied.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSpinner","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSpinner","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1314815025,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTab","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Single tab for <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxTab"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            ID of the tab (<see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.ActiveTabId\" />).\n            Autogenerated GUID if not set.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Tab title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TitleCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class(es) to be applied to the tab title (navigation).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TitleCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContentCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) to be applied to the tab content (pane).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContentCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TitleTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Tab title template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TitleTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content of the tab.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Order","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The order (display index) of the tab.<br />\n            Due to stable sorting used, the order in which the tabs are rendered is preserved when the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxTab.Order\" /> parameter is not set.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Order","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <c>True</c> for visible tab. Set <c>false</c> when tab should not be visible.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the Enabled value is received from cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxTab.FormState\" />.\n            When value is <c>false</c>, input is rendered as disabled.\n            To set multiple controls as disabled use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"OnTabActivated","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Raised when the tab is activated.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnTabActivated","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnTabDeactivated","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Raised when the tab is deactivated (another tab is activates or when <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel\" /> is disposed).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnTabDeactivated","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTab","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTab"}},{"HashCode":1179198980,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTab","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Single tab for <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxTab"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            ID of the tab (<see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.ActiveTabId\" />).\n            Autogenerated GUID if not set.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Tab title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TitleCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class(es) to be applied to the tab title (navigation).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TitleCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContentCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class(es) to be applied to the tab content (pane).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContentCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TitleTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Tab title template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TitleTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content of the tab.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Order","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The order (display index) of the tab.<br />\n            Due to stable sorting used, the order in which the tabs are rendered is preserved when the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxTab.Order\" /> parameter is not set.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Order","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            <c>True</c> for visible tab. Set <c>false</c> when tab should not be visible.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the Enabled value is received from cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxTab.FormState\" />.\n            When value is <c>false</c>, input is rendered as disabled.\n            To set multiple controls as disabled use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"OnTabActivated","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Raised when the tab is activated.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnTabActivated","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnTabDeactivated","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Raised when the tab is deactivated (another tab is activates or when <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel\" /> is disposed).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnTabDeactivated","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTab","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTab","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1193014682,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTab.TitleTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Tab title template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TitleTemplate","ParentTag":"HxTab"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTab.TitleTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTab","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2078430166,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTab.TitleTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Tab title template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TitleTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxTab"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTab.TitleTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTab","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1375370624,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTab.Content","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content of the tab.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"HxTab"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTab.Content","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTab","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1376262286,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTab.Content","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content of the tab.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxTab"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTab.Content","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTab","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":377827381,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTabPanel","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Container for <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxTab\" />s for easier implementation of tabbed UI.<br />\n            Encapsulates <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxNav\" /> (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.NavVariant.Tabs\" /> variant as default) and <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxNavLink\" />s so you don't have to bother with them explicitly.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxTabPanel\">https://havit.blazor.eu/components/HxTabPanel</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxTabPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NavVariant","TypeName":"Havit.Blazor.Components.Web.Bootstrap.NavVariant","IsEnum":true,"Documentation":"\n            <summary>\n            The visual variant of the nav items.\n            Default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.NavVariant.Tabs\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NavVariant","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.NavVariant"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TabPanelVariant","IsEnum":true,"Documentation":"\n            <summary>\n            Set to <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.TabPanelVariant.Card\" /> if you want to wrap the tab panel in a card with the tab navigation in the header.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TabPanelVariant"}},{"Kind":"Components.Component","Name":"RenderMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TabPanelRenderMode","IsEnum":true,"Documentation":"\n            <summary>\n            Determines whether the content of all tabs is always rendered or only if the tab is active.<br />\n            Default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.TabPanelRenderMode.AllTabs\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RenderMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TabPanelRenderMode"}},{"Kind":"Components.Component","Name":"CardSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CardSettings","Documentation":"\n            <summary>\n            Card settings for the wrapping card.\n            Applies only if <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.Variant\" /> is set to <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.TabPanelVariant.Card\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CardSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CardSettings"}},{"Kind":"Components.Component","Name":"ActiveTabId","TypeName":"System.String","Documentation":"\n            <summary>\n            ID of the active tab (@bindable).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActiveTabId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ActiveTabIdChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Raised when the ID of the active tab changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActiveTabIdChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"InitialActiveTabId","TypeName":"System.String","Documentation":"\n            <summary>\n            ID of the tab which should be active at the very beginning.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InitialActiveTabId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Tabs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTabPanel","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTabPanel"}},{"HashCode":745576085,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTabPanel","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Container for <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxTab\" />s for easier implementation of tabbed UI.<br />\n            Encapsulates <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxNav\" /> (<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.NavVariant.Tabs\" /> variant as default) and <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxNavLink\" />s so you don't have to bother with them explicitly.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxTabPanel\">https://havit.blazor.eu/components/HxTabPanel</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxTabPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NavVariant","TypeName":"Havit.Blazor.Components.Web.Bootstrap.NavVariant","IsEnum":true,"Documentation":"\n            <summary>\n            The visual variant of the nav items.\n            Default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.NavVariant.Tabs\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NavVariant","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.NavVariant"}},{"Kind":"Components.Component","Name":"Variant","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TabPanelVariant","IsEnum":true,"Documentation":"\n            <summary>\n            Set to <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.TabPanelVariant.Card\" /> if you want to wrap the tab panel in a card with the tab navigation in the header.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Variant","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TabPanelVariant"}},{"Kind":"Components.Component","Name":"RenderMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TabPanelRenderMode","IsEnum":true,"Documentation":"\n            <summary>\n            Determines whether the content of all tabs is always rendered or only if the tab is active.<br />\n            Default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.TabPanelRenderMode.AllTabs\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RenderMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TabPanelRenderMode"}},{"Kind":"Components.Component","Name":"CardSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CardSettings","Documentation":"\n            <summary>\n            Card settings for the wrapping card.\n            Applies only if <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.Variant\" /> is set to <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.TabPanelVariant.Card\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CardSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CardSettings"}},{"Kind":"Components.Component","Name":"ActiveTabId","TypeName":"System.String","Documentation":"\n            <summary>\n            ID of the active tab (@bindable).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActiveTabId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ActiveTabIdChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Raised when the ID of the active tab changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActiveTabIdChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"InitialActiveTabId","TypeName":"System.String","Documentation":"\n            <summary>\n            ID of the tab which should be active at the very beginning.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InitialActiveTabId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Tabs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTabPanel","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTabPanel","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2034927964,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Tabs.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxTabPanel"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTabPanel","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1751546206,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Tabs.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxTabPanel"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTabPanel","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-759356955,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input for entering tags.\n            Does not allow duplicate tags.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxInputTags\">https://havit.blazor.eu/components/HxInputTags</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputTags"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputTagsSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputTagsSettings"}},{"Kind":"Components.Component","Name":"AllowCustomTags","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether you are restricted to suggested items only (<c>false</c>).\n            Default is <c>true</c> (you can type your own tags).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowCustomTags","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DataProvider","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputTagsDataProviderDelegate","Documentation":"\n            <summary>\n            Set to a method providing data for tag suggestions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataProvider","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputTagsDataProviderDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"SuggestMinimumLength","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The minimum number of characters to start suggesting. The default is <c>2</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SuggestMinimumLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"SuggestDelay","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The debounce delay in milliseconds. The default is <c>300 ms</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SuggestDelay","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Delimiters","TypeName":"System.Collections.Generic.List<System.Char>","Documentation":"\n            <summary>\n            Characters that divide the current input into separate tags when typed. The default is comma, semicolon, and space.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Delimiters","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::System.Char>"}},{"Kind":"Components.Component","Name":"ShowAddButton","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether the add icon (+) should be displayed. The default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowAddButton","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AddButtonText","TypeName":"System.String","Documentation":"\n            <summary>\n            The optional text for the add button. Displayed only when there are no tags (the <c>Value</c> is empty). The default is <c>null</c> (none).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AddButtonText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Naked","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether a \"naked\" variant should be displayed (no border). The default is <c>false</c>. Consider enabling <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.ShowAddButton\" /> when using <c>Naked</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Naked","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            A short hint displayed in the input field before the user enters a value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TagBadgeSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.BadgeSettings","Documentation":"\n            <summary>\n            The settings for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxBadge\" /> used to render tags. The default is <c>Color=\"<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.Light\" />\"</c> and <c>TextColor=\"<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.Dark\" />\"</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TagBadgeSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.BadgeSettings"}},{"Kind":"Components.Component","Name":"LabelType","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType?","Documentation":"\n            <inheritdoc cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1\" />\n        ","Metadata":{"Common.PropertyName":"LabelType","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType?"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            The size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"InputGroupCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input-group span.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            The input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            The input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Collections.Generic.List<System.String>","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::System.String>"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<System.String>>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.List<global::System.String>>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Collections.Generic.List<System.String>>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Collections.Generic.List<global::System.String>>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTags"}},{"HashCode":-407045434,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input for entering tags.\n            Does not allow duplicate tags.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxInputTags\">https://havit.blazor.eu/components/HxInputTags</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputTagsSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputTagsSettings"}},{"Kind":"Components.Component","Name":"AllowCustomTags","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether you are restricted to suggested items only (<c>false</c>).\n            Default is <c>true</c> (you can type your own tags).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowCustomTags","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DataProvider","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputTagsDataProviderDelegate","Documentation":"\n            <summary>\n            Set to a method providing data for tag suggestions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DataProvider","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputTagsDataProviderDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"SuggestMinimumLength","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The minimum number of characters to start suggesting. The default is <c>2</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SuggestMinimumLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"SuggestDelay","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The debounce delay in milliseconds. The default is <c>300 ms</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SuggestDelay","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Delimiters","TypeName":"System.Collections.Generic.List<System.Char>","Documentation":"\n            <summary>\n            Characters that divide the current input into separate tags when typed. The default is comma, semicolon, and space.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Delimiters","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::System.Char>"}},{"Kind":"Components.Component","Name":"ShowAddButton","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether the add icon (+) should be displayed. The default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowAddButton","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AddButtonText","TypeName":"System.String","Documentation":"\n            <summary>\n            The optional text for the add button. Displayed only when there are no tags (the <c>Value</c> is empty). The default is <c>null</c> (none).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AddButtonText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Naked","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether a \"naked\" variant should be displayed (no border). The default is <c>false</c>. Consider enabling <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.ShowAddButton\" /> when using <c>Naked</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Naked","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            A short hint displayed in the input field before the user enters a value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TagBadgeSettings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.BadgeSettings","Documentation":"\n            <summary>\n            The settings for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxBadge\" /> used to render tags. The default is <c>Color=\"<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.Light\" />\"</c> and <c>TextColor=\"<see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.Dark\" />\"</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TagBadgeSettings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.BadgeSettings"}},{"Kind":"Components.Component","Name":"LabelType","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType?","Documentation":"\n            <inheritdoc cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1\" />\n        ","Metadata":{"Common.PropertyName":"LabelType","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType?"}},{"Kind":"Components.Component","Name":"InputSize","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize?","Documentation":"\n            <summary>\n            The size of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputSize","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize?"}},{"Kind":"Components.Component","Name":"InputGroupCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input-group span.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            The input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            The input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ValidationMessageMode","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?","Documentation":"\n            <summary>\n            Specifies how the validation message should be displayed.<br />\n            The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode.Regular\" />, you can override the application-wide default for all inputs in <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase.Defaults\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValidationMessageMode","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"\n            <summary>\n            The label text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HintTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HintTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the wrapping div.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"LabelCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The custom CSS class to render with the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GenerateChip","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>true</c>, <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator\" /> is used to generate chip item(s). The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"GenerateChip","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChipTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChipTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            When <c>null</c> (default), the <c>Enabled</c> value is received from the cascading <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState\" />.\n            When the value is <c>false</c>, the input is rendered as disabled.\n            To set multiple controls as disabled, use <seealso cref=\"T:Havit.Blazor.Components.Web.HxFormState\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Collections.Generic.List<System.String>","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::System.String>"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<System.String>>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.List<global::System.String>>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Collections.Generic.List<System.String>>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Collections.Generic.List<global::System.String>>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTags","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1077879933,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The input-group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"HxInputTags"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTags","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1368241864,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The input-group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTags","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":134788166,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The input-group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"HxInputTags"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTags","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1979610272,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The input-group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTags","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1440627380,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"HxInputTags"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTags","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1389632830,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags.LabelTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The label content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags.LabelTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTags","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-718072678,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"HxInputTags"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTags","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":757625619,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags.HintTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The hint to render after the input as form-text.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HintTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags.HintTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTags","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1542609381,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"HxInputTags"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTags","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1077760128,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags.ChipTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            The chip template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChipTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags.ChipTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTags","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-351798674,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMessenger","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxToastContainer\" /> wrapper for displaying <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxToast\" /> messages dispatched through <see cref=\"T:Havit.Blazor.Components.Web.IHxMessengerService\" />.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxMessenger\">https://havit.blazor.eu/components/HxMessenger</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxMessenger"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Position","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ToastContainerPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Position of the messages. The default value is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ToastContainerPosition.None\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ToastContainerPosition"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMessenger","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMessenger"}},{"HashCode":1843582066,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMessenger","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxToastContainer\" /> wrapper for displaying <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxToast\" /> messages dispatched through <see cref=\"T:Havit.Blazor.Components.Web.IHxMessengerService\" />.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxMessenger\">https://havit.blazor.eu/components/HxMessenger</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxMessenger"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Position","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ToastContainerPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Position of the messages. The default value is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.ToastContainerPosition.None\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ToastContainerPosition"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMessenger","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMessenger","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1628215569,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxToast","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/toasts/\">Bootstrap Toast</see> component. Not intended to be used in user code, use <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxMessenger\" />.\n            After the first render, the component never updates.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxToast\">https://havit.blazor.eu/components/HxToast</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxToast"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Color scheme.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"AutohideDelay","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Delay in milliseconds to automatically hide the toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutohideDelay","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class to render with the toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Header icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Documentation":"\n            <summary>\n            Header text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Header template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ContentText","TypeName":"System.String","Documentation":"\n            <summary>\n            Content (body) text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content (body) template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContentTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether to show the close button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnToastHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fires when the toast is hidden (button or autohide).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnToastHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxToast","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxToast"}},{"HashCode":-810392143,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxToast","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/toasts/\">Bootstrap Toast</see> component. Not intended to be used in user code, use <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxMessenger\" />.\n            After the first render, the component never updates.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxToast\">https://havit.blazor.eu/components/HxToast</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxToast"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ThemeColor?","Documentation":"\n            <summary>\n            Color scheme.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ThemeColor?"}},{"Kind":"Components.Component","Name":"AutohideDelay","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Delay in milliseconds to automatically hide the toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AutohideDelay","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS class to render with the toast.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            Header icon.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Documentation":"\n            <summary>\n            Header text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Header template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ContentText","TypeName":"System.String","Documentation":"\n            <summary>\n            Content (body) text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContentText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Content (body) template.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ContentTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether to show the close button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnToastHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fires when the toast is hidden (button or autohide).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnToastHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxToast","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxToast","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1035470337,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxToast.HeaderTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Header template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"HxToast"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxToast.HeaderTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxToast","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-832116213,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxToast.HeaderTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Header template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxToast"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxToast.HeaderTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxToast","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1889233535,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxToast.ContentTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content (body) template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentTemplate","ParentTag":"HxToast"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxToast.ContentTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxToast","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1050376837,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxToast.ContentTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Content (body) template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxToast"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxToast.ContentTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxToast","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":754641966,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxToastContainer","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxToastContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Position","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ToastContainerPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positioning of the toasts on the screen.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ToastContainerPosition"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Toasts to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxToastContainer","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxToastContainer"}},{"HashCode":2135291604,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxToastContainer","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxToastContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Position","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ToastContainerPosition","IsEnum":true,"Documentation":"\n            <summary>\n            Positioning of the toasts on the screen.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ToastContainerPosition"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Toasts to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxToastContainer","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxToastContainer","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1122769852,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxToastContainer.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Toasts to display.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxToastContainer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxToastContainer.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxToastContainer","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1633208271,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxToastContainer.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Toasts to display.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxToastContainer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxToastContainer.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxToastContainer","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-70930086,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxPopover","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/popovers/\">Bootstrap Popover</see> component.<br />\n            Rendered as a <c>span</c> wrapper to fully support popovers on disabled elements (see example in <see href=\"https://getbootstrap.com/docs/5.3/components/popovers/#disabled-elements\">Disabled elements</see> in the Bootstrap popover documentation).<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxPopover\">https://havit.blazor.eu/components/HxPopover</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxPopover"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.PopoverSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxPopover.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.PopoverSettings"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Popover title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Popover content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.PopoverPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            Popover placement. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.PopoverPlacement.Right\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.PopoverPlacement"}},{"Kind":"Components.Component","Name":"Trigger","TypeName":"Havit.Blazor.Components.Web.Bootstrap.PopoverTrigger","IsEnum":true,"Documentation":"\n            <summary>\n            Popover trigger(s). The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.PopoverTrigger.Click\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Trigger","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.PopoverTrigger"}},{"Kind":"Components.Component","Name":"Html","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows you to insert HTML. If <c>false</c>, <c>innerText</c> property will be used to insert content into the DOM.\n            Use text if you're worried about XSS attacks.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Html","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Container","TypeName":"System.String","Documentation":"\n            <summary>\n            Appends the tooltip/popover to a specific element. Default is <c>body</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Container","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Sanitize","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the sanitization. If activated HTML content will be sanitized. <see href=\"https://getbootstrap.com/docs/5.3/getting-started/javascript/#sanitizer\">See the sanitizer section in Bootstrap JavaScript documentation</see>.\n            Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Sanitize","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Offset","TypeName":"(System.Int32 X, System.Int32 Y)?","Documentation":"\n            <summary>\n            Offset of the component relative to its target (ChildContent).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Offset","Common.GloballyQualifiedTypeName":"(global::System.Int32 X, global::System.Int32 Y)?"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Apply a CSS fade transition to the tooltip (enable/disable).<br />\n            Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animation","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to add.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WrapperCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the <c>span</c> wrapper of the child-content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"WrapperCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child content to wrap.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fired when the content has been made visible to the user and CSS transitions have completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fired when the content has finished being hidden from the user and CSS transitions have completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxPopover","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxPopover"}},{"HashCode":687789658,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxPopover","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/popovers/\">Bootstrap Popover</see> component.<br />\n            Rendered as a <c>span</c> wrapper to fully support popovers on disabled elements (see example in <see href=\"https://getbootstrap.com/docs/5.3/components/popovers/#disabled-elements\">Disabled elements</see> in the Bootstrap popover documentation).<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxPopover\">https://havit.blazor.eu/components/HxPopover</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxPopover"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.PopoverSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxPopover.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.PopoverSettings"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Popover title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"\n            <summary>\n            Popover content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.PopoverPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            Popover placement. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.PopoverPlacement.Right\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.PopoverPlacement"}},{"Kind":"Components.Component","Name":"Trigger","TypeName":"Havit.Blazor.Components.Web.Bootstrap.PopoverTrigger","IsEnum":true,"Documentation":"\n            <summary>\n            Popover trigger(s). The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.PopoverTrigger.Click\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Trigger","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.PopoverTrigger"}},{"Kind":"Components.Component","Name":"Html","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows you to insert HTML. If <c>false</c>, <c>innerText</c> property will be used to insert content into the DOM.\n            Use text if you're worried about XSS attacks.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Html","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Container","TypeName":"System.String","Documentation":"\n            <summary>\n            Appends the tooltip/popover to a specific element. Default is <c>body</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Container","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Sanitize","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the sanitization. If activated HTML content will be sanitized. <see href=\"https://getbootstrap.com/docs/5.3/getting-started/javascript/#sanitizer\">See the sanitizer section in Bootstrap JavaScript documentation</see>.\n            Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Sanitize","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Offset","TypeName":"(System.Int32 X, System.Int32 Y)?","Documentation":"\n            <summary>\n            Offset of the component relative to its target (ChildContent).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Offset","Common.GloballyQualifiedTypeName":"(global::System.Int32 X, global::System.Int32 Y)?"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Apply a CSS fade transition to the tooltip (enable/disable).<br />\n            Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animation","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to add.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WrapperCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the <c>span</c> wrapper of the child-content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"WrapperCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child content to wrap.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fired when the content has been made visible to the user and CSS transitions have completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fired when the content has finished being hidden from the user and CSS transitions have completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxPopover","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxPopover","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-693841675,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxPopover.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Child content to wrap.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxPopover"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxPopover.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxPopover","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":143287338,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxPopover.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Child content to wrap.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxPopover"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxPopover.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxPopover","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1388688982,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTooltip","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/tooltips/\">Bootstrap Tooltip</see> component, activates on hover.<br />\n            Rendered as a <c>span</c> wrapper to fully support tooltips on disabled elements (see example in <see href=\"https://getbootstrap.com/docs/5.3/components/tooltips/#disabled-elements\">Disabled elements</see> in the Bootstrap tooltip documentation).<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxTooltip\">https://havit.blazor.eu/components/HxTooltip</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxTooltip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TooltipSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxTooltip.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TooltipSettings"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Tooltip text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            Tooltip placement. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement.Top\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement"}},{"Kind":"Components.Component","Name":"Trigger","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TooltipTrigger","IsEnum":true,"Documentation":"\n            <summary>\n            Tooltip trigger(s). The default is <c><see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.TooltipTrigger.Hover\" /> | <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.TooltipTrigger.Focus\" /></c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Trigger","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TooltipTrigger"}},{"Kind":"Components.Component","Name":"Html","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows you to insert HTML. If <c>false</c>, <c>innerText</c> property will be used to insert content into the DOM.\n            Use text if you're worried about XSS attacks.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Html","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Container","TypeName":"System.String","Documentation":"\n            <summary>\n            Appends the tooltip/popover to a specific element. Default is <c>body</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Container","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Sanitize","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the sanitization. If activated HTML content will be sanitized. <see href=\"https://getbootstrap.com/docs/5.3/getting-started/javascript/#sanitizer\">See the sanitizer section in Bootstrap JavaScript documentation</see>.\n            Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Sanitize","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Offset","TypeName":"(System.Int32 X, System.Int32 Y)?","Documentation":"\n            <summary>\n            Offset of the component relative to its target (ChildContent).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Offset","Common.GloballyQualifiedTypeName":"(global::System.Int32 X, global::System.Int32 Y)?"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Apply a CSS fade transition to the tooltip (enable/disable).<br />\n            Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animation","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to add.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WrapperCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the <c>span</c> wrapper of the child-content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"WrapperCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child content to wrap.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fired when the content has been made visible to the user and CSS transitions have completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fired when the content has finished being hidden from the user and CSS transitions have completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTooltip","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTooltip"}},{"HashCode":479603733,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTooltip","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see href=\"https://getbootstrap.com/docs/5.3/components/tooltips/\">Bootstrap Tooltip</see> component, activates on hover.<br />\n            Rendered as a <c>span</c> wrapper to fully support tooltips on disabled elements (see example in <see href=\"https://getbootstrap.com/docs/5.3/components/tooltips/#disabled-elements\">Disabled elements</see> in the Bootstrap tooltip documentation).<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxTooltip\">https://havit.blazor.eu/components/HxTooltip</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxTooltip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TooltipSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxTooltip.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TooltipSettings"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Tooltip text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement","IsEnum":true,"Documentation":"\n            <summary>\n            Tooltip placement. The default is <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement.Top\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placement","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement"}},{"Kind":"Components.Component","Name":"Trigger","TypeName":"Havit.Blazor.Components.Web.Bootstrap.TooltipTrigger","IsEnum":true,"Documentation":"\n            <summary>\n            Tooltip trigger(s). The default is <c><see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.TooltipTrigger.Hover\" /> | <see cref=\"F:Havit.Blazor.Components.Web.Bootstrap.TooltipTrigger.Focus\" /></c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Trigger","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.TooltipTrigger"}},{"Kind":"Components.Component","Name":"Html","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Allows you to insert HTML. If <c>false</c>, <c>innerText</c> property will be used to insert content into the DOM.\n            Use text if you're worried about XSS attacks.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Html","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Container","TypeName":"System.String","Documentation":"\n            <summary>\n            Appends the tooltip/popover to a specific element. Default is <c>body</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Container","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Sanitize","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Enable or disable the sanitization. If activated HTML content will be sanitized. <see href=\"https://getbootstrap.com/docs/5.3/getting-started/javascript/#sanitizer\">See the sanitizer section in Bootstrap JavaScript documentation</see>.\n            Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Sanitize","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Offset","TypeName":"(System.Int32 X, System.Int32 Y)?","Documentation":"\n            <summary>\n            Offset of the component relative to its target (ChildContent).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Offset","Common.GloballyQualifiedTypeName":"(global::System.Int32 X, global::System.Int32 Y)?"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Apply a CSS fade transition to the tooltip (enable/disable).<br />\n            Default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Animation","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to add.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WrapperCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with the <c>span</c> wrapper of the child-content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"WrapperCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child content to wrap.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fired when the content has been made visible to the user and CSS transitions have completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"\n            <summary>\n            Fired when the content has finished being hidden from the user and CSS transitions have completed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTooltip","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTooltip","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1044819871,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTooltip.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Child content to wrap.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxTooltip"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTooltip.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTooltip","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1134744104,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTooltip.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Child content to wrap.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxTooltip"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTooltip.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTooltip","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-774099776,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTreeView<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Component to display a hierarchy data structure.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxTreeView\">https://havit.blazor.eu/components/HxTreeView</see>\n            </summary>\n            <typeparam name=\"TItem\">Type of tree data item.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxTreeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.HxTreeView<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TItem>","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Collection of hierarchical data to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedItem","TypeName":"TItem","Documentation":"\n            <summary>\n            Selected data item.\n            </summary>\t\t\n        ","Metadata":{"Common.PropertyName":"SelectedItem","Common.GloballyQualifiedTypeName":"TItem","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"\n            <summary>\n            Event fired when the selected data item changes.\n            </summary>\t\t\n        ","Metadata":{"Common.PropertyName":"SelectedItemChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnItemExpanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"\n            <summary>\n            Event fired when an item is expanded.\n            </summary>\t\t\n        ","Metadata":{"Common.PropertyName":"OnItemExpanded","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnItemCollapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"\n            <summary>\n            Event fired when an item is collapsed.\n            </summary>\t\t\n        ","Metadata":{"Common.PropertyName":"OnItemCollapsed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTitleSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Selector to display the item title from the data item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTitleSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemIconSelector","TypeName":"System.Func<TItem, Havit.Blazor.Components.Web.IconBase>","Documentation":"\n            <summary>\n            Selector to display the icon from the data item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemIconSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::Havit.Blazor.Components.Web.IconBase>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemInitialExpandedSelector","TypeName":"System.Func<TItem, System.Boolean>","Documentation":"\n            <summary>\n            Selector for the initial expansion state of the data item.<br />\n            The default state is <c>false</c> (collapsed).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemInitialExpandedSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.Boolean>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Item CSS class (same for all items).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemCssClassSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Selector for the item CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemChildrenSelector","TypeName":"System.Func<TItem, System.Collections.Generic.IEnumerable<TItem>>","Documentation":"\n            <summary>\n            Selector to display the children collection for the current data item. The children collection should have the same type as the current item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemChildrenSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.Collections.Generic.IEnumerable<TItem>>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Template for the item content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class to be applied.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTreeView<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTreeView","Components.GenericTyped":"True"}},{"HashCode":-1205278709,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTreeView<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Component to display a hierarchy data structure.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxTreeView\">https://havit.blazor.eu/components/HxTreeView</see>\n            </summary>\n            <typeparam name=\"TItem\">Type of tree data item.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxTreeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.HxTreeView<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.IEnumerable<TItem>","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Collection of hierarchical data to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedItem","TypeName":"TItem","Documentation":"\n            <summary>\n            Selected data item.\n            </summary>\t\t\n        ","Metadata":{"Common.PropertyName":"SelectedItem","Common.GloballyQualifiedTypeName":"TItem","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"\n            <summary>\n            Event fired when the selected data item changes.\n            </summary>\t\t\n        ","Metadata":{"Common.PropertyName":"SelectedItemChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnItemExpanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"\n            <summary>\n            Event fired when an item is expanded.\n            </summary>\t\t\n        ","Metadata":{"Common.PropertyName":"OnItemExpanded","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnItemCollapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"\n            <summary>\n            Event fired when an item is collapsed.\n            </summary>\t\t\n        ","Metadata":{"Common.PropertyName":"OnItemCollapsed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTitleSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Selector to display the item title from the data item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTitleSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemIconSelector","TypeName":"System.Func<TItem, Havit.Blazor.Components.Web.IconBase>","Documentation":"\n            <summary>\n            Selector to display the icon from the data item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemIconSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::Havit.Blazor.Components.Web.IconBase>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemInitialExpandedSelector","TypeName":"System.Func<TItem, System.Boolean>","Documentation":"\n            <summary>\n            Selector for the initial expansion state of the data item.<br />\n            The default state is <c>false</c> (collapsed).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemInitialExpandedSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.Boolean>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Item CSS class (same for all items).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ItemCssClassSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Selector for the item CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemCssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemChildrenSelector","TypeName":"System.Func<TItem, System.Collections.Generic.IEnumerable<TItem>>","Documentation":"\n            <summary>\n            Selector to display the children collection for the current data item. The children collection should have the same type as the current item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemChildrenSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.Collections.Generic.IEnumerable<TItem>>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Template for the item content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Additional CSS class to be applied.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTreeView<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTreeView","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":188171457,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTreeView<TItem>.ItemTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template for the item content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"HxTreeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTreeView<TItem>.ItemTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTreeView","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1814182303,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTreeView<TItem>.ItemTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template for the item content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.HxTreeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTreeView<TItem>.ItemTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTreeView","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1027884652,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap._Imports","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap._Imports","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"_Imports"}},{"HashCode":1584034294,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap._Imports","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap._Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap._Imports","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"_Imports","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":176135603,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInputInternal","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxAutosuggestInputInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Common.PropertyName":"OnInput","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnFocus","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnMouseDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"InputId","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EnabledEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnabledEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DropdownOffset","TypeName":"(System.Int32 Skidding, System.Int32 Distance)","Documentation":"\n            <summary>\n            Offset between the dropdown and the input.\n            <see href=\"https://popper.js.org/docs/v2/modifiers/offset/#options\" />\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropdownOffset","Common.GloballyQualifiedTypeName":"(global::System.Int32 Skidding, global::System.Int32 Distance)"}},{"Kind":"Components.Component","Name":"NameAttributeValue","TypeName":"System.String","Metadata":{"Common.PropertyName":"NameAttributeValue","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying HTML element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInputInternal","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxAutosuggestInputInternal"}},{"HashCode":223596094,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInputInternal","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInputInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Common.PropertyName":"OnInput","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnFocus","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnMouseDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"InputId","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EnabledEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnabledEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DropdownOffset","TypeName":"(System.Int32 Skidding, System.Int32 Distance)","Documentation":"\n            <summary>\n            Offset between the dropdown and the input.\n            <see href=\"https://popper.js.org/docs/v2/modifiers/offset/#options\" />\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropdownOffset","Common.GloballyQualifiedTypeName":"(global::System.Int32 Skidding, global::System.Int32 Distance)"}},{"Kind":"Components.Component","Name":"NameAttributeValue","TypeName":"System.String","Metadata":{"Common.PropertyName":"NameAttributeValue","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying HTML element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInputInternal","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxAutosuggestInputInternal","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1046887625,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxAutosuggestInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DataProvider","TypeName":"Havit.Blazor.Components.Web.Bootstrap.AutosuggestDataProviderDelegate<TItem>","Metadata":{"Common.PropertyName":"DataProvider","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.AutosuggestDataProviderDelegate<TItem>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueSelector","TypeName":"System.Func<TItem, TValue>","Documentation":"\n            <summary>\n            Selects value from item.\n            Not required when TValue is same as TItemTime.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TextSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Selects text to display from item.\n            When not set ToString() is used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Template to display item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"EmptyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Template to display when items collection is empty\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EmptyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemFromValueResolver","TypeName":"System.Func<TValue, System.Threading.Tasks.Task<TItem>>","Documentation":"\n            <summary>\n            Gets item from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal`2.Value\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemFromValueResolver","Common.GloballyQualifiedTypeName":"global::System.Func<TValue, global::System.Threading.Tasks.Task<TItem>>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"MinimumLengthEffective","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Minimal number of characters to start suggesting. Default is <c>2</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinimumLengthEffective","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Short hint displayed in the input field before the user enters a value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DelayEffective","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Debounce delay in milliseconds. Default is <c>300 ms</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DelayEffective","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputId","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SearchIconEffective","TypeName":"Havit.Blazor.Components.Web.IconBase","Metadata":{"Common.PropertyName":"SearchIconEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"ClearIconEffective","TypeName":"Havit.Blazor.Components.Web.IconBase","Metadata":{"Common.PropertyName":"ClearIconEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"EnabledEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnabledEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LabelTypeEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType","IsEnum":true,"Metadata":{"Common.PropertyName":"LabelTypeEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType"}},{"Kind":"Components.Component","Name":"FormValueComponent","TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent","Metadata":{"Common.PropertyName":"FormValueComponent","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent"}},{"Kind":"Components.Component","Name":"DropdownOffset","TypeName":"(System.Int32 Skidding, System.Int32 Distance)","Documentation":"\n            <summary>\n            Offset between the dropdown and the input.\n            <see href=\"https://popper.js.org/docs/v2/modifiers/offset/#options\" />\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropdownOffset","Common.GloballyQualifiedTypeName":"(global::System.Int32 Skidding, global::System.Int32 Distance)"}},{"Kind":"Components.Component","Name":"InputGroupCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with input-group span.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NameAttributeValue","TypeName":"System.String","Metadata":{"Common.PropertyName":"NameAttributeValue","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying HTML element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxAutosuggestInternal","Components.GenericTyped":"True"}},{"HashCode":1843732270,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DataProvider","TypeName":"Havit.Blazor.Components.Web.Bootstrap.AutosuggestDataProviderDelegate<TItem>","Metadata":{"Common.PropertyName":"DataProvider","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.AutosuggestDataProviderDelegate<TItem>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueSelector","TypeName":"System.Func<TItem, TValue>","Documentation":"\n            <summary>\n            Selects value from item.\n            Not required when TValue is same as TItemTime.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TextSelector","TypeName":"System.Func<TItem, System.String>","Documentation":"\n            <summary>\n            Selects text to display from item.\n            When not set ToString() is used.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Template to display item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"EmptyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Template to display when items collection is empty\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EmptyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemFromValueResolver","TypeName":"System.Func<TValue, System.Threading.Tasks.Task<TItem>>","Documentation":"\n            <summary>\n            Gets item from <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal`2.Value\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemFromValueResolver","Common.GloballyQualifiedTypeName":"global::System.Func<TValue, global::System.Threading.Tasks.Task<TItem>>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"MinimumLengthEffective","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Minimal number of characters to start suggesting. Default is <c>2</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MinimumLengthEffective","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Short hint displayed in the input field before the user enters a value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DelayEffective","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Debounce delay in milliseconds. Default is <c>300 ms</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DelayEffective","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputId","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SearchIconEffective","TypeName":"Havit.Blazor.Components.Web.IconBase","Metadata":{"Common.PropertyName":"SearchIconEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"ClearIconEffective","TypeName":"Havit.Blazor.Components.Web.IconBase","Metadata":{"Common.PropertyName":"ClearIconEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"EnabledEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnabledEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LabelTypeEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType","IsEnum":true,"Metadata":{"Common.PropertyName":"LabelTypeEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType"}},{"Kind":"Components.Component","Name":"FormValueComponent","TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent","Metadata":{"Common.PropertyName":"FormValueComponent","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent"}},{"Kind":"Components.Component","Name":"DropdownOffset","TypeName":"(System.Int32 Skidding, System.Int32 Distance)","Documentation":"\n            <summary>\n            Offset between the dropdown and the input.\n            <see href=\"https://popper.js.org/docs/v2/modifiers/offset/#options\" />\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DropdownOffset","Common.GloballyQualifiedTypeName":"(global::System.Int32 Skidding, global::System.Int32 Distance)"}},{"Kind":"Components.Component","Name":"InputGroupCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with input-group span.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NameAttributeValue","TypeName":"System.String","Metadata":{"Common.PropertyName":"NameAttributeValue","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying HTML element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxAutosuggestInternal","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-758024301,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>.ItemTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template to display item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"HxAutosuggestInternal"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>.ItemTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxAutosuggestInternal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1808972477,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>.ItemTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template to display item.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>.ItemTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxAutosuggestInternal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2090834283,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>.EmptyTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template to display when items collection is empty\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EmptyTemplate","ParentTag":"HxAutosuggestInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>.EmptyTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxAutosuggestInternal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-48886661,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>.EmptyTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Template to display when items collection is empty\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EmptyTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>.EmptyTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxAutosuggestInternal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1451279544,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"HxAutosuggestInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxAutosuggestInternal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2071813343,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxAutosuggestInternal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1129265787,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"HxAutosuggestInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxAutosuggestInternal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1884430385,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxAutosuggestInternal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":463838931,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestItemsInternal<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxAutosuggestItemsInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestItemsInternal<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<TItem>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnItemClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Metadata":{"Common.PropertyName":"OnItemClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Common.PropertyName":"ItemTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"EmptyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"EmptyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FocusedItemIndex","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"FocusedItemIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"FocusedItemCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"FocusedItemCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestItemsInternal<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxAutosuggestItemsInternal","Components.GenericTyped":"True"}},{"HashCode":114739550,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestItemsInternal<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestItemsInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestItemsInternal<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<TItem>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnItemClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Metadata":{"Common.PropertyName":"OnItemClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Common.PropertyName":"ItemTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"EmptyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"EmptyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FocusedItemIndex","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"FocusedItemIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"FocusedItemCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"FocusedItemCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestItemsInternal<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxAutosuggestItemsInternal","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-288795848,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestItemsInternal<TItem>.ItemTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"HxAutosuggestItemsInternal"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestItemsInternal<TItem>.ItemTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxAutosuggestItemsInternal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1455310233,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestItemsInternal<TItem>.ItemTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestItemsInternal"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestItemsInternal<TItem>.ItemTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxAutosuggestItemsInternal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1240351778,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestItemsInternal<TItem>.EmptyTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EmptyTemplate","ParentTag":"HxAutosuggestItemsInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestItemsInternal<TItem>.EmptyTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxAutosuggestItemsInternal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-291601537,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestItemsInternal<TItem>.EmptyTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EmptyTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestItemsInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestItemsInternal<TItem>.EmptyTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxAutosuggestItemsInternal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":323697195,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxFormValueComponentRenderer","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxFormValueComponentRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FormValueComponent","TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent","Documentation":"\n            <summary>\n            Values for the component renderer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FormValueComponent","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxFormValueComponentRenderer","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxFormValueComponentRenderer"}},{"HashCode":-1625096089,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxFormValueComponentRenderer","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxFormValueComponentRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FormValueComponent","TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent","Documentation":"\n            <summary>\n            Values for the component renderer.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FormValueComponent","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxFormValueComponentRenderer","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxFormValueComponentRenderer","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-687530410,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxFormValueComponentRenderer_Label","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxFormValueComponentRenderer_Label"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FormValueComponent","TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent","Metadata":{"Common.PropertyName":"FormValueComponent","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxFormValueComponentRenderer_Label","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxFormValueComponentRenderer_Label"}},{"HashCode":1101062569,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxFormValueComponentRenderer_Label","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxFormValueComponentRenderer_Label"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FormValueComponent","TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent","Metadata":{"Common.PropertyName":"FormValueComponent","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxFormValueComponentRenderer_Label","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxFormValueComponentRenderer_Label","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-698186728,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputDateInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"InputId","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EnabledEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnabledEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ShowPredefinedDatesEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowPredefinedDatesEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PredefinedDatesEffective","TypeName":"System.Collections.Generic.IEnumerable<Havit.Blazor.Components.Web.Bootstrap.InputDatePredefinedDatesItem>","Metadata":{"Common.PropertyName":"PredefinedDatesEffective","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::Havit.Blazor.Components.Web.Bootstrap.InputDatePredefinedDatesItem>"}},{"Kind":"Components.Component","Name":"ParsingErrorMessageEffective","TypeName":"System.String","Metadata":{"Common.PropertyName":"ParsingErrorMessageEffective","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputSizeEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize","IsEnum":true,"Metadata":{"Common.PropertyName":"InputSizeEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize"}},{"Kind":"Components.Component","Name":"CalendarIconEffective","TypeName":"Havit.Blazor.Components.Web.IconBase","Metadata":{"Common.PropertyName":"CalendarIconEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"ShowClearButtonEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowClearButtonEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MinDateEffective","TypeName":"System.DateTime","Metadata":{"Common.PropertyName":"MinDateEffective","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"MaxDateEffective","TypeName":"System.DateTime","Metadata":{"Common.PropertyName":"MaxDateEffective","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"CalendarDateCustomizationProviderEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate","Metadata":{"Common.PropertyName":"CalendarDateCustomizationProviderEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"LabelTypeEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType","IsEnum":true,"Metadata":{"Common.PropertyName":"LabelTypeEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType"}},{"Kind":"Components.Component","Name":"InputGroupCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with input-group span.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FormValueComponent","TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent","Metadata":{"Common.PropertyName":"FormValueComponent","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent"}},{"Kind":"Components.Component","Name":"TimeProviderEffective","TypeName":"System.TimeProvider","Metadata":{"Common.PropertyName":"TimeProviderEffective","Common.GloballyQualifiedTypeName":"global::System.TimeProvider"}},{"Kind":"Components.Component","Name":"CalendarDisplayMonth","TypeName":"System.DateTime","Metadata":{"Common.PropertyName":"CalendarDisplayMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputDateInternal","Components.GenericTyped":"True"}},{"HashCode":1266153216,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"InputId","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EnabledEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnabledEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ShowPredefinedDatesEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowPredefinedDatesEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PredefinedDatesEffective","TypeName":"System.Collections.Generic.IEnumerable<Havit.Blazor.Components.Web.Bootstrap.InputDatePredefinedDatesItem>","Metadata":{"Common.PropertyName":"PredefinedDatesEffective","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::Havit.Blazor.Components.Web.Bootstrap.InputDatePredefinedDatesItem>"}},{"Kind":"Components.Component","Name":"ParsingErrorMessageEffective","TypeName":"System.String","Metadata":{"Common.PropertyName":"ParsingErrorMessageEffective","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputSizeEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize","IsEnum":true,"Metadata":{"Common.PropertyName":"InputSizeEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize"}},{"Kind":"Components.Component","Name":"CalendarIconEffective","TypeName":"Havit.Blazor.Components.Web.IconBase","Metadata":{"Common.PropertyName":"CalendarIconEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"ShowClearButtonEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowClearButtonEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MinDateEffective","TypeName":"System.DateTime","Metadata":{"Common.PropertyName":"MinDateEffective","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"MaxDateEffective","TypeName":"System.DateTime","Metadata":{"Common.PropertyName":"MaxDateEffective","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"CalendarDateCustomizationProviderEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate","Metadata":{"Common.PropertyName":"CalendarDateCustomizationProviderEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"LabelTypeEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType","IsEnum":true,"Metadata":{"Common.PropertyName":"LabelTypeEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType"}},{"Kind":"Components.Component","Name":"InputGroupCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with input-group span.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FormValueComponent","TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent","Metadata":{"Common.PropertyName":"FormValueComponent","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent"}},{"Kind":"Components.Component","Name":"TimeProviderEffective","TypeName":"System.TimeProvider","Metadata":{"Common.PropertyName":"TimeProviderEffective","Common.GloballyQualifiedTypeName":"global::System.TimeProvider"}},{"Kind":"Components.Component","Name":"CalendarDisplayMonth","TypeName":"System.DateTime","Metadata":{"Common.PropertyName":"CalendarDisplayMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputDateInternal","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-826440677,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal<TValue>.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"HxInputDateInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal<TValue>.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputDateInternal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":222036115,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal<TValue>.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal<TValue>.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputDateInternal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1344027312,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal<TValue>.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"HxInputDateInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal<TValue>.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputDateInternal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1390091742,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal<TValue>.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal<TValue>.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputDateInternal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1615701818,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateRangeInternal","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputDateRangeInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FromInputId","TypeName":"System.String","Metadata":{"Common.PropertyName":"FromInputId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputSizeEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize","IsEnum":true,"Metadata":{"Common.PropertyName":"InputSizeEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize"}},{"Kind":"Components.Component","Name":"EnabledEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnabledEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValidationMessageModeEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode","IsEnum":true,"Metadata":{"Common.PropertyName":"ValidationMessageModeEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode"}},{"Kind":"Components.Component","Name":"ShowPredefinedDateRangesEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowPredefinedDateRangesEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PredefinedDateRangesEffective","TypeName":"System.Collections.Generic.IEnumerable<Havit.Blazor.Components.Web.Bootstrap.InputDateRangePredefinedRangesItem>","Metadata":{"Common.PropertyName":"PredefinedDateRangesEffective","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::Havit.Blazor.Components.Web.Bootstrap.InputDateRangePredefinedRangesItem>"}},{"Kind":"Components.Component","Name":"FromParsingErrorMessageEffective","TypeName":"System.String","Metadata":{"Common.PropertyName":"FromParsingErrorMessageEffective","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ToParsingErrorMessageEffective","TypeName":"System.String","Metadata":{"Common.PropertyName":"ToParsingErrorMessageEffective","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ShowClearButtonEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowClearButtonEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MinDateEffective","TypeName":"System.DateTime","Metadata":{"Common.PropertyName":"MinDateEffective","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"MaxDateEffective","TypeName":"System.DateTime","Metadata":{"Common.PropertyName":"MaxDateEffective","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"CalendarDateCustomizationProviderEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate","Metadata":{"Common.PropertyName":"CalendarDateCustomizationProviderEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"FromCalendarDisplayMonth","TypeName":"System.DateTime","Metadata":{"Common.PropertyName":"FromCalendarDisplayMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"ToCalendarDisplayMonth","TypeName":"System.DateTime","Metadata":{"Common.PropertyName":"ToCalendarDisplayMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"TimeProviderEffective","TypeName":"System.TimeProvider","Metadata":{"Common.PropertyName":"TimeProviderEffective","Common.GloballyQualifiedTypeName":"global::System.TimeProvider"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"Havit.DateTimeRange","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::Havit.DateTimeRange"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.DateTimeRange>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.DateTimeRange>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<Havit.DateTimeRange>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::Havit.DateTimeRange>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateRangeInternal","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputDateRangeInternal"}},{"HashCode":-932612934,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateRangeInternal","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateRangeInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FromInputId","TypeName":"System.String","Metadata":{"Common.PropertyName":"FromInputId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputSizeEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize","IsEnum":true,"Metadata":{"Common.PropertyName":"InputSizeEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize"}},{"Kind":"Components.Component","Name":"EnabledEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnabledEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValidationMessageModeEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode","IsEnum":true,"Metadata":{"Common.PropertyName":"ValidationMessageModeEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.ValidationMessageMode"}},{"Kind":"Components.Component","Name":"ShowPredefinedDateRangesEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowPredefinedDateRangesEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PredefinedDateRangesEffective","TypeName":"System.Collections.Generic.IEnumerable<Havit.Blazor.Components.Web.Bootstrap.InputDateRangePredefinedRangesItem>","Metadata":{"Common.PropertyName":"PredefinedDateRangesEffective","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::Havit.Blazor.Components.Web.Bootstrap.InputDateRangePredefinedRangesItem>"}},{"Kind":"Components.Component","Name":"FromParsingErrorMessageEffective","TypeName":"System.String","Metadata":{"Common.PropertyName":"FromParsingErrorMessageEffective","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ToParsingErrorMessageEffective","TypeName":"System.String","Metadata":{"Common.PropertyName":"ToParsingErrorMessageEffective","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ShowClearButtonEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowClearButtonEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"MinDateEffective","TypeName":"System.DateTime","Metadata":{"Common.PropertyName":"MinDateEffective","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"MaxDateEffective","TypeName":"System.DateTime","Metadata":{"Common.PropertyName":"MaxDateEffective","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"CalendarDateCustomizationProviderEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate","Metadata":{"Common.PropertyName":"CalendarDateCustomizationProviderEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"FromCalendarDisplayMonth","TypeName":"System.DateTime","Metadata":{"Common.PropertyName":"FromCalendarDisplayMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"ToCalendarDisplayMonth","TypeName":"System.DateTime","Metadata":{"Common.PropertyName":"ToCalendarDisplayMonth","Common.GloballyQualifiedTypeName":"global::System.DateTime"}},{"Kind":"Components.Component","Name":"TimeProviderEffective","TypeName":"System.TimeProvider","Metadata":{"Common.PropertyName":"TimeProviderEffective","Common.GloballyQualifiedTypeName":"global::System.TimeProvider"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"Havit.DateTimeRange","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::Havit.DateTimeRange"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.DateTimeRange>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.DateTimeRange>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<Havit.DateTimeRange>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::Havit.DateTimeRange>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateRangeInternal","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputDateRangeInternal","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-868564872,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxMultiSelectInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"InputId","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputSizeEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize","IsEnum":true,"Metadata":{"Common.PropertyName":"InputSizeEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize"}},{"Kind":"Components.Component","Name":"InputText","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EnabledEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnabledEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ItemsToRender","TypeName":"System.Collections.Generic.List<TItem>","Metadata":{"Common.PropertyName":"ItemsToRender","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedValues","TypeName":"System.Collections.Generic.List<TValue>","Metadata":{"Common.PropertyName":"SelectedValues","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<TValue>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedValuesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<TValue>>","Metadata":{"Common.PropertyName":"SelectedValuesChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.List<TValue>>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TextSelector","TypeName":"System.Func<TItem, System.String>","Metadata":{"Common.PropertyName":"TextSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueSelector","TypeName":"System.Func<TItem, TValue>","Metadata":{"Common.PropertyName":"ValueSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NullDataText","TypeName":"System.String","Metadata":{"Common.PropertyName":"NullDataText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputGroupCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllowFiltering","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FilterPredicate","TypeName":"System.Func<TItem, System.String, System.Boolean>","Metadata":{"Common.PropertyName":"FilterPredicate","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String, global::System.Boolean>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ClearFilterOnHide","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ClearFilterOnHide","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FilterEmptyResultTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"FilterEmptyResultTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FilterEmptyResultText","TypeName":"System.String","Metadata":{"Common.PropertyName":"FilterEmptyResultText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AllowSelectAll","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllowSelectAll","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SelectAllText","TypeName":"System.String","Metadata":{"Common.PropertyName":"SelectAllText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FilterSearchIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Metadata":{"Common.PropertyName":"FilterSearchIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"FilterClearIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Metadata":{"Common.PropertyName":"FilterClearIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying HTML element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxMultiSelectInternal","Components.GenericTyped":"True"}},{"HashCode":133083062,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"InputId","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputSizeEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize","IsEnum":true,"Metadata":{"Common.PropertyName":"InputSizeEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize"}},{"Kind":"Components.Component","Name":"InputText","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EnabledEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnabledEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ItemsToRender","TypeName":"System.Collections.Generic.List<TItem>","Metadata":{"Common.PropertyName":"ItemsToRender","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedValues","TypeName":"System.Collections.Generic.List<TValue>","Metadata":{"Common.PropertyName":"SelectedValues","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<TValue>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedValuesChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<TValue>>","Metadata":{"Common.PropertyName":"SelectedValuesChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.List<TValue>>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"TextSelector","TypeName":"System.Func<TItem, System.String>","Metadata":{"Common.PropertyName":"TextSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueSelector","TypeName":"System.Func<TItem, TValue>","Metadata":{"Common.PropertyName":"ValueSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, TValue>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"NullDataText","TypeName":"System.String","Metadata":{"Common.PropertyName":"NullDataText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputGroupCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllowFiltering","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FilterPredicate","TypeName":"System.Func<TItem, System.String, System.Boolean>","Metadata":{"Common.PropertyName":"FilterPredicate","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String, global::System.Boolean>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ClearFilterOnHide","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ClearFilterOnHide","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FilterEmptyResultTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"FilterEmptyResultTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FilterEmptyResultText","TypeName":"System.String","Metadata":{"Common.PropertyName":"FilterEmptyResultText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AllowSelectAll","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllowSelectAll","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SelectAllText","TypeName":"System.String","Metadata":{"Common.PropertyName":"SelectAllText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FilterSearchIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Metadata":{"Common.PropertyName":"FilterSearchIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"FilterClearIcon","TypeName":"Havit.Blazor.Components.Web.IconBase","Metadata":{"Common.PropertyName":"FilterClearIcon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying HTML element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxMultiSelectInternal","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1072313817,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem>.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"HxMultiSelectInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem>.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxMultiSelectInternal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1266253695,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem>.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem>.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxMultiSelectInternal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1931115694,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem>.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"HxMultiSelectInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem>.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxMultiSelectInternal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":371203030,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem>.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem>.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxMultiSelectInternal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1070293340,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem>.FilterEmptyResultTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FilterEmptyResultTemplate","ParentTag":"HxMultiSelectInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem>.FilterEmptyResultTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxMultiSelectInternal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1187984409,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem>.FilterEmptyResultTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FilterEmptyResultTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem>.FilterEmptyResultTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxMultiSelectInternal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":269791908,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxSearchBoxItemInternal","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxSearchBoxItemInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Subtitle","TypeName":"System.String","Metadata":{"Common.PropertyName":"Subtitle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxSearchBoxItemInternal","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxSearchBoxItemInternal"}},{"HashCode":-459204082,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxSearchBoxItemInternal","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxSearchBoxItemInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Subtitle","TypeName":"System.String","Metadata":{"Common.PropertyName":"Subtitle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxSearchBoxItemInternal","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxSearchBoxItemInternal","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1152486592,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectGridColumnInternal<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxMultiSelectGridColumnInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectGridColumnInternal<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"SelectedDataItems","TypeName":"System.Collections.Generic.HashSet<TItem>","Metadata":{"Common.PropertyName":"SelectedDataItems","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.HashSet<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"AllDataItemsSelected","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllDataItemsSelected","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnSelectAllClicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSelectAllClicked","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSelectNoneClicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSelectNoneClicked","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSelectDataItemClicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Metadata":{"Common.PropertyName":"OnSelectDataItemClicked","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnUnselectDataItemClicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Metadata":{"Common.PropertyName":"OnUnselectDataItemClicked","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectGridColumnInternal<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxMultiSelectGridColumnInternal","Components.GenericTyped":"True"}},{"HashCode":-814472035,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectGridColumnInternal<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectGridColumnInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectGridColumnInternal<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"SelectedDataItems","TypeName":"System.Collections.Generic.HashSet<TItem>","Metadata":{"Common.PropertyName":"SelectedDataItems","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.HashSet<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"AllDataItemsSelected","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllDataItemsSelected","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnSelectAllClicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSelectAllClicked","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSelectNoneClicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSelectNoneClicked","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSelectDataItemClicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Metadata":{"Common.PropertyName":"OnSelectDataItemClicked","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnUnselectDataItemClicked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Metadata":{"Common.PropertyName":"OnUnselectDataItemClicked","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectGridColumnInternal<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxMultiSelectGridColumnInternal","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-400718445,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxNavLinkInternal","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\" /> variation which adds <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxNavLinkInternal.OnClick\" /> and related stuff.\n            </summary>\n            <remarks>\n            <see href=\"https://github.com/dotnet/aspnetcore/issues/18460#issuecomment-577175682\">https://github.com/dotnet/aspnetcore/issues/18460#issuecomment-577175682</see>.\n            </remarks>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxNavLinkInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised when the item is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActiveClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxNavLinkInternal","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxNavLinkInternal"}},{"HashCode":-234396999,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxNavLinkInternal","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\" /> variation which adds <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxNavLinkInternal.OnClick\" /> and related stuff.\n            </summary>\n            <remarks>\n            <see href=\"https://github.com/dotnet/aspnetcore/issues/18460#issuecomment-577175682\">https://github.com/dotnet/aspnetcore/issues/18460#issuecomment-577175682</see>.\n            </remarks>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxNavLinkInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised when the item is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActiveClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxNavLinkInternal","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxNavLinkInternal","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1303206623,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxNavLinkInternal.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxNavLinkInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxNavLinkInternal.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxNavLinkInternal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":905538947,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxNavLinkInternal.ChildContent","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxNavLinkInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxNavLinkInternal.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxNavLinkInternal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1848594987,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInputInternal","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputTagsInputInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Common.PropertyName":"OnInput","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnFocus","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnMouseDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"InputId","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EnabledEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnabledEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Offset","TypeName":"(System.Int32 X, System.Int32 Y)","Documentation":"\n            <summary>\n            Offset between dropdown input and dropdown menu\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Offset","Common.GloballyQualifiedTypeName":"(global::System.Int32 X, global::System.Int32 Y)"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInputInternal","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputTagsInputInternal"}},{"HashCode":-383160241,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInputInternal","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInputInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnInput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Common.PropertyName":"OnInput","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnFocus","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnMouseDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"InputId","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EnabledEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnabledEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Offset","TypeName":"(System.Int32 X, System.Int32 Y)","Documentation":"\n            <summary>\n            Offset between dropdown input and dropdown menu\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Offset","Common.GloballyQualifiedTypeName":"(global::System.Int32 X, global::System.Int32 Y)"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInputInternal","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputTagsInputInternal","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2129175778,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Internal implementation for <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxInputTags\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputTagsInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AllowCustomTags","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether you are restricted to suggested items only (<c>false</c>).\n            Default is <c>true</c> (you can type your own tags).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowCustomTags","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Collections.Generic.List<System.String>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::System.String>"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<System.String>>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.List<global::System.String>>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DataProvider","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputTagsDataProviderDelegate","Metadata":{"Common.PropertyName":"DataProvider","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputTagsDataProviderDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"SuggestMinimumLengthEffective","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Minimal number of characters to start suggesting. Default is <c>2</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SuggestMinimumLengthEffective","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"DelimitersEffective","TypeName":"System.Collections.Generic.List<System.Char>","Documentation":"\n            <summary>\n            Characters, when typed, divide the current input into separate tags.\n            Default is comma, semicolon and space.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DelimitersEffective","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::System.Char>"}},{"Kind":"Components.Component","Name":"ShowAddButtonEffective","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the add-icon (+) should be displayed.\n            Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowAddButtonEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AddButtonText","TypeName":"System.String","Documentation":"\n            <summary>\n            Optional text for the add-button.\n            Displayed only when there are no tags (the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.Value\" /> is empty).\n            Default is <c>null</c> (none).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AddButtonText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Naked","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether a \"naked\" variant should be displayed (no border).\n            Default is <c>false</c>.\n            Consider enabling <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.ShowAddButton\" /> when using <c>Naked</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Naked","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Short hint displayed in the input field before the user enters a value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TagBadgeSettingsEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.BadgeSettings","Documentation":"\n            <summary>\n            Settings for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxBadge\" /> used to render tags.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TagBadgeSettingsEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.BadgeSettings"}},{"Kind":"Components.Component","Name":"SuggestDelayEffective","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"SuggestDelayEffective","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"CoreFormControlCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS of the wrapping .form-control container (corresponds to InputCssClass on regular inputs)\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CoreFormControlCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputId","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EnabledEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnabledEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LabelTypeEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType","IsEnum":true,"Metadata":{"Common.PropertyName":"LabelTypeEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType"}},{"Kind":"Components.Component","Name":"InputSizeEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize","IsEnum":true,"Metadata":{"Common.PropertyName":"InputSizeEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize"}},{"Kind":"Components.Component","Name":"InputOffset","TypeName":"(System.Int32 X, System.Int32 Y)","Documentation":"\n            <summary>\n            Offset between dropdown input and dropdown menu\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputOffset","Common.GloballyQualifiedTypeName":"(global::System.Int32 X, global::System.Int32 Y)"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with input-group span.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying HTML input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputTagsInternal"}},{"HashCode":826368641,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Internal implementation for <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxInputTags\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AllowCustomTags","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether you are restricted to suggested items only (<c>false</c>).\n            Default is <c>true</c> (you can type your own tags).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AllowCustomTags","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Collections.Generic.List<System.String>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::System.String>"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<System.String>>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.List<global::System.String>>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DataProvider","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputTagsDataProviderDelegate","Metadata":{"Common.PropertyName":"DataProvider","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputTagsDataProviderDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"SuggestMinimumLengthEffective","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Minimal number of characters to start suggesting. Default is <c>2</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SuggestMinimumLengthEffective","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"DelimitersEffective","TypeName":"System.Collections.Generic.List<System.Char>","Documentation":"\n            <summary>\n            Characters, when typed, divide the current input into separate tags.\n            Default is comma, semicolon and space.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DelimitersEffective","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::System.Char>"}},{"Kind":"Components.Component","Name":"ShowAddButtonEffective","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether the add-icon (+) should be displayed.\n            Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ShowAddButtonEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AddButtonText","TypeName":"System.String","Documentation":"\n            <summary>\n            Optional text for the add-button.\n            Displayed only when there are no tags (the <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.Value\" /> is empty).\n            Default is <c>null</c> (none).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AddButtonText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Naked","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Indicates whether a \"naked\" variant should be displayed (no border).\n            Default is <c>false</c>.\n            Consider enabling <see cref=\"P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.ShowAddButton\" /> when using <c>Naked</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Naked","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Short hint displayed in the input field before the user enters a value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TagBadgeSettingsEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.BadgeSettings","Documentation":"\n            <summary>\n            Settings for the <see cref=\"T:Havit.Blazor.Components.Web.Bootstrap.HxBadge\" /> used to render tags.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TagBadgeSettingsEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.BadgeSettings"}},{"Kind":"Components.Component","Name":"SuggestDelayEffective","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"SuggestDelayEffective","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"CoreFormControlCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            CSS of the wrapping .form-control container (corresponds to InputCssClass on regular inputs)\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CoreFormControlCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputId","TypeName":"System.String","Metadata":{"Common.PropertyName":"InputId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"EnabledEffective","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnabledEffective","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LabelTypeEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.LabelType","IsEnum":true,"Metadata":{"Common.PropertyName":"LabelTypeEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.LabelType"}},{"Kind":"Components.Component","Name":"InputSizeEffective","TypeName":"Havit.Blazor.Components.Web.Bootstrap.InputSize","IsEnum":true,"Metadata":{"Common.PropertyName":"InputSizeEffective","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.Bootstrap.InputSize"}},{"Kind":"Components.Component","Name":"InputOffset","TypeName":"(System.Int32 X, System.Int32 Y)","Documentation":"\n            <summary>\n            Offset between dropdown input and dropdown menu\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputOffset","Common.GloballyQualifiedTypeName":"(global::System.Int32 X, global::System.Int32 Y)"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Any additional CSS class to apply.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupCssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Custom CSS class to render with input-group span.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupStartTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupStartTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"InputGroupEndText","TypeName":"System.String","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"InputGroupEndTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"InputGroupEndTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying HTML input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputTagsInternal","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1342518490,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"HxInputTagsInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputTagsInternal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-458005370,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.InputGroupStartTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input-group at the beginning of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupStartTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.InputGroupStartTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputTagsInternal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1331763116,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"HxInputTagsInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputTagsInternal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-669967992,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.InputGroupEndTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"\n            <summary>\n            Input-group at the end of the input.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputGroupEndTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.InputGroupEndTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputTagsInternal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1396059562,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxTreeViewItemInternal<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxTreeViewItemInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.Internal.HxTreeViewItemInternal<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Item","TypeName":"TItem","Metadata":{"Common.PropertyName":"Item","Common.GloballyQualifiedTypeName":"TItem","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnItemSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Metadata":{"Common.PropertyName":"OnItemSelected","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnItemExpanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Metadata":{"Common.PropertyName":"OnItemExpanded","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnItemCollapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Metadata":{"Common.PropertyName":"OnItemCollapsed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"IsExpanded","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsExpanded","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"TitleSelector","TypeName":"System.Func<TItem, System.String>","Metadata":{"Common.PropertyName":"TitleSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"IconSelector","TypeName":"System.Func<TItem, Havit.Blazor.Components.Web.IconBase>","Metadata":{"Common.PropertyName":"IconSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::Havit.Blazor.Components.Web.IconBase>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"InitialExpandedSelector","TypeName":"System.Func<TItem, System.Boolean>","Metadata":{"Common.PropertyName":"InitialExpandedSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.Boolean>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClassSelector","TypeName":"System.Func<TItem, System.String>","Metadata":{"Common.PropertyName":"CssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildrenSelector","TypeName":"System.Func<TItem, System.Collections.Generic.IEnumerable<TItem>>","Metadata":{"Common.PropertyName":"ChildrenSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.Collections.Generic.IEnumerable<TItem>>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"Level","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Common.PropertyName":"ContentTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxTreeViewItemInternal<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxTreeViewItemInternal","Components.GenericTyped":"True"}},{"HashCode":1451999382,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxTreeViewItemInternal<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxTreeViewItemInternal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.Bootstrap.Internal.HxTreeViewItemInternal<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Item","TypeName":"TItem","Metadata":{"Common.PropertyName":"Item","Common.GloballyQualifiedTypeName":"TItem","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnItemSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Metadata":{"Common.PropertyName":"OnItemSelected","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnItemExpanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Metadata":{"Common.PropertyName":"OnItemExpanded","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnItemCollapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Metadata":{"Common.PropertyName":"OnItemCollapsed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"IsExpanded","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsExpanded","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"TitleSelector","TypeName":"System.Func<TItem, System.String>","Metadata":{"Common.PropertyName":"TitleSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"IconSelector","TypeName":"System.Func<TItem, Havit.Blazor.Components.Web.IconBase>","Metadata":{"Common.PropertyName":"IconSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::Havit.Blazor.Components.Web.IconBase>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"InitialExpandedSelector","TypeName":"System.Func<TItem, System.Boolean>","Metadata":{"Common.PropertyName":"InitialExpandedSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.Boolean>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CssClassSelector","TypeName":"System.Func<TItem, System.String>","Metadata":{"Common.PropertyName":"CssClassSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildrenSelector","TypeName":"System.Func<TItem, System.Collections.Generic.IEnumerable<TItem>>","Metadata":{"Common.PropertyName":"ChildrenSelector","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.Collections.Generic.IEnumerable<TItem>>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"Level","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"ContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Common.PropertyName":"ContentTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxTreeViewItemInternal<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxTreeViewItemInternal","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":957033166,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxTreeViewItemInternal<TItem>.ContentTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentTemplate","ParentTag":"HxTreeViewItemInternal"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ContentTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxTreeViewItemInternal<TItem>.ContentTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxTreeViewItemInternal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1576217377,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxTreeViewItemInternal<TItem>.ContentTemplate","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentTemplate","ParentTag":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxTreeViewItemInternal"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ContentTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxTreeViewItemInternal<TItem>.ContentTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxTreeViewItemInternal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1674912458,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.HxInputFileCore","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            Raw component extending <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputFile\" /> with direct upload.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputFileCore"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.InputFileCoreSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.HxInputFileCore.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.InputFileCoreSettings"}},{"Kind":"Components.Component","Name":"UploadUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            URL of the server endpoint receiving the files.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"UploadUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnProgress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.UploadProgressEventArgs>","Documentation":"\n            <summary>\n            Raised during running file upload (the frequency depends on browser implementation).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnProgress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.UploadProgressEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFileUploaded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.FileUploadedEventArgs>","Documentation":"\n            <summary>\n            Raised after a file is uploaded (for every single file separately).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnFileUploaded","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.FileUploadedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUploadCompleted","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.UploadCompletedEventArgs>","Documentation":"\n            <summary>\n            Raised when all files are uploaded (after all <see cref=\"P:Havit.Blazor.Components.Web.HxInputFileCore.OnFileUploaded\" /> events).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnUploadCompleted","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.UploadCompletedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Multiple","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Single <c>false</c> or multiple <c>true</c> files upload.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Multiple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Make the item appear disabled by setting to <c>false</c>.\n            The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Accept","TypeName":"System.String","Documentation":"\n            <summary>\n            Takes as its value a comma-separated list of one or more file types, or unique file type specifiers, describing which file types to allow.\n            <see href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept\">MDN Web Docs - HTML attribute: accept</see>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Accept","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxFileSize","TypeName":"System.Int64?","Documentation":"\n            <summary>\n            The maximum file size in bytes.\n            When exceeded, the <see cref=\"P:Havit.Blazor.Components.Web.HxInputFileCore.OnFileUploaded\" /> returns <c>413-RequestEntityTooLarge</c> as <see cref=\"P:Havit.Blazor.Components.Web.FileUploadedEventArgs.ResponseStatus\" />.\n            The default is <c>long.MaxValue</c> (unlimited).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxFileSize","Common.GloballyQualifiedTypeName":"global::System.Int64?"}},{"Kind":"Components.Component","Name":"MaxParallelUploads","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The maximum number of concurrent uploads. The default is <c>6</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxParallelUploads","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            The input element id.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChange","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.HxInputFileCore","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxInputFileCore"}},{"HashCode":1085870355,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.HxInputFileCore","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            Raw component extending <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputFile\" /> with direct upload.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.HxInputFileCore"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Settings","TypeName":"Havit.Blazor.Components.Web.InputFileCoreSettings","Documentation":"\n            <summary>\n            Set of settings to be applied to the component instance (overrides <see cref=\"P:Havit.Blazor.Components.Web.HxInputFileCore.Defaults\" />, overridden by individual parameters).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Settings","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.InputFileCoreSettings"}},{"Kind":"Components.Component","Name":"UploadUrl","TypeName":"System.String","Documentation":"\n            <summary>\n            URL of the server endpoint receiving the files.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"UploadUrl","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnProgress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.UploadProgressEventArgs>","Documentation":"\n            <summary>\n            Raised during running file upload (the frequency depends on browser implementation).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnProgress","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.UploadProgressEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFileUploaded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.FileUploadedEventArgs>","Documentation":"\n            <summary>\n            Raised after a file is uploaded (for every single file separately).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnFileUploaded","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.FileUploadedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUploadCompleted","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.UploadCompletedEventArgs>","Documentation":"\n            <summary>\n            Raised when all files are uploaded (after all <see cref=\"P:Havit.Blazor.Components.Web.HxInputFileCore.OnFileUploaded\" /> events).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnUploadCompleted","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Havit.Blazor.Components.Web.UploadCompletedEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Multiple","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Single <c>false</c> or multiple <c>true</c> files upload.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Multiple","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Make the item appear disabled by setting to <c>false</c>.\n            The default is <c>true</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Accept","TypeName":"System.String","Documentation":"\n            <summary>\n            Takes as its value a comma-separated list of one or more file types, or unique file type specifiers, describing which file types to allow.\n            <see href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept\">MDN Web Docs - HTML attribute: accept</see>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Accept","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxFileSize","TypeName":"System.Int64?","Documentation":"\n            <summary>\n            The maximum file size in bytes.\n            When exceeded, the <see cref=\"P:Havit.Blazor.Components.Web.HxInputFileCore.OnFileUploaded\" /> returns <c>413-RequestEntityTooLarge</c> as <see cref=\"P:Havit.Blazor.Components.Web.FileUploadedEventArgs.ResponseStatus\" />.\n            The default is <c>long.MaxValue</c> (unlimited).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxFileSize","Common.GloballyQualifiedTypeName":"global::System.Int64?"}},{"Kind":"Components.Component","Name":"MaxParallelUploads","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            The maximum number of concurrent uploads. The default is <c>6</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxParallelUploads","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            The input element id.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChange","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.HxInputFileCore","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxInputFileCore","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-158684794,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.HxFormState","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            Propagates form states as a cascading parameter to child components.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxFormState\">https://havit.blazor.eu/components/HxFormState</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxFormState"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates enabled/disabled section. Value to propagate.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>false</c>, nothing is rendered (no children). Value is not propagated, there is nowhere to propagate.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.HxFormState","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxFormState"}},{"HashCode":457988116,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.HxFormState","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            Propagates form states as a cascading parameter to child components.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxFormState\">https://havit.blazor.eu/components/HxFormState</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.HxFormState"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Enabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates enabled/disabled section. Value to propagate.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When <c>false</c>, nothing is rendered (no children). Value is not propagated, there is nowhere to propagate.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Child content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.HxFormState","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxFormState","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-422706943,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.HxFormState.ChildContent","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            Child content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxFormState"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.HxFormState.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxFormState","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2007050511,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.HxFormState.ChildContent","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            Child content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.HxFormState"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.HxFormState.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxFormState","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-322941578,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.HxModelEditForm<TModel>","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            Edit form wrapper which provides a strongly typed model and updates the model instance when a valid form is submitted.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxModelEditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TModel","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TModel for the Havit.Blazor.Components.Web.HxModelEditForm<TModel> component.","Metadata":{"Common.PropertyName":"TModel","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Form element id.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Model","TypeName":"TModel","Documentation":"\n            <summary>\n            Model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"TModel","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ModelChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TModel>","Documentation":"\n            <summary>\n            Model event callback. Invoked when a valid form is updated.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ModelChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TModel>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TModel>","Documentation":"\n            <summary>\n            Child content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TModel>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.HxModelEditForm<TModel>","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxModelEditForm","Components.GenericTyped":"True"}},{"HashCode":-2119916475,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.HxModelEditForm<TModel>","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            Edit form wrapper which provides a strongly typed model and updates the model instance when a valid form is submitted.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.HxModelEditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TModel","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TModel for the Havit.Blazor.Components.Web.HxModelEditForm<TModel> component.","Metadata":{"Common.PropertyName":"TModel","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"\n            <summary>\n            Form element id.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Model","TypeName":"TModel","Documentation":"\n            <summary>\n            Model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"TModel","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ModelChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TModel>","Documentation":"\n            <summary>\n            Model event callback. Invoked when a valid form is updated.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ModelChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TModel>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TModel>","Documentation":"\n            <summary>\n            Child content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TModel>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.HxModelEditForm<TModel>","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxModelEditForm","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-784427154,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.HxModelEditForm<TModel>.ChildContent","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            Child content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxModelEditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.HxModelEditForm<TModel>.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxModelEditForm","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1101444810,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.HxModelEditForm<TModel>.ChildContent","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            Child content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.HxModelEditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.HxModelEditForm<TModel>.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxModelEditForm","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1283862733,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.HxChangeTracker","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            Subscribes to INotifyPropertyChanged changes and triggers re-rendering of ChildContent.\n            To be used when you want to limit the scope of re-rendering and prevent re-rendering of a wider component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxChangeTracker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.ComponentModel.INotifyPropertyChanged","Documentation":"\n            <summary>\n            The value to be tracked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.ComponentModel.INotifyPropertyChanged"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.HxChangeTracker","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxChangeTracker"}},{"HashCode":-624473938,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.HxChangeTracker","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            Subscribes to INotifyPropertyChanged changes and triggers re-rendering of ChildContent.\n            To be used when you want to limit the scope of re-rendering and prevent re-rendering of a wider component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.HxChangeTracker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.ComponentModel.INotifyPropertyChanged","Documentation":"\n            <summary>\n            The value to be tracked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.ComponentModel.INotifyPropertyChanged"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.HxChangeTracker","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxChangeTracker","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-184845292,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.HxChangeTracker.ChildContent","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxChangeTracker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.HxChangeTracker.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxChangeTracker","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1822610694,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.HxChangeTracker.ChildContent","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.HxChangeTracker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.HxChangeTracker.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxChangeTracker","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2007116810,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.HxDynamicElement","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            Renders an element with the specified name, attributes, and child content.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxDynamicElement\">https://havit.blazor.eu/components/HxDynamicElement</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxDynamicElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ElementName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the element to render.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ElementName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the element is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Stops onClick event propagation. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickStopPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClickPreventDefault","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Prevents the default action for the onclick event. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ElementRef","TypeName":"Microsoft.AspNetCore.Components.ElementReference","Documentation":"\n            <summary>\n            Element reference.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ElementRef","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.ElementReference"}},{"Kind":"Components.Component","Name":"ElementRefChanged","TypeName":"System.Action<Microsoft.AspNetCore.Components.ElementReference>","Documentation":"\n            <summary>\n            Action (synchronous, not an EventCallback) called when the element's reference is captured.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ElementRefChanged","Common.GloballyQualifiedTypeName":"global::System.Action<global::Microsoft.AspNetCore.Components.ElementReference>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.HxDynamicElement","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxDynamicElement"}},{"HashCode":1387632223,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.HxDynamicElement","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            Renders an element with the specified name, attributes, and child content.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxDynamicElement\">https://havit.blazor.eu/components/HxDynamicElement</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.HxDynamicElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ElementName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the element to render.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ElementName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"\n            <summary>\n            Raised after the element is clicked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClickStopPropagation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Stops onClick event propagation. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickStopPropagation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClickPreventDefault","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Prevents the default action for the onclick event. Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnClickPreventDefault","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ElementRef","TypeName":"Microsoft.AspNetCore.Components.ElementReference","Documentation":"\n            <summary>\n            Element reference.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ElementRef","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.ElementReference"}},{"Kind":"Components.Component","Name":"ElementRefChanged","TypeName":"System.Action<Microsoft.AspNetCore.Components.ElementReference>","Documentation":"\n            <summary>\n            Action (synchronous, not an EventCallback) called when the element's reference is captured.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ElementRefChanged","Common.GloballyQualifiedTypeName":"global::System.Action<global::Microsoft.AspNetCore.Components.ElementReference>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.HxDynamicElement","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxDynamicElement","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":65691552,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.HxDynamicElement.ChildContent","AssemblyName":"Havit.Blazor.Components.Web","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HxDynamicElement"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.HxDynamicElement.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxDynamicElement","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":809733899,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.HxDynamicElement.ChildContent","AssemblyName":"Havit.Blazor.Components.Web","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Havit.Blazor.Components.Web.HxDynamicElement"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.HxDynamicElement.ChildContent","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxDynamicElement","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1397131371,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.HxRedirectTo","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            Rendering a <c>HxRedirectTo</c> will navigate to a new location.<br />\n            Can be used in <c>AuthorizeRouteView</c>, <c>Router</c> and similar components to redirect to a login page, error page, or similar.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxRedirectTo\">https://havit.blazor.eu/components/HxRedirectTo</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxRedirectTo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Uri","TypeName":"System.String","Documentation":"\n            <summary>\n            URI to navigate to.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Uri","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If <c>true</c>, bypasses client-side routing and forces the browser to load the new\n            page from the server, regardless of whether the URI would normally be handled by the\n            client-side router.<br />\n            Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ForceLoad","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.HxRedirectTo","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxRedirectTo"}},{"HashCode":-346311074,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.HxRedirectTo","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            Rendering a <c>HxRedirectTo</c> will navigate to a new location.<br />\n            Can be used in <c>AuthorizeRouteView</c>, <c>Router</c> and similar components to redirect to a login page, error page, or similar.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxRedirectTo\">https://havit.blazor.eu/components/HxRedirectTo</see>\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.HxRedirectTo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Uri","TypeName":"System.String","Documentation":"\n            <summary>\n            URI to navigate to.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Uri","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ForceLoad","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If <c>true</c>, bypasses client-side routing and forces the browser to load the new\n            page from the server, regardless of whether the URI would normally be handled by the\n            client-side router.<br />\n            Default is <c>false</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ForceLoad","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.HxRedirectTo","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxRedirectTo","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-200469994,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.HxRepeater<TItem>","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            A data-bound list component that allows custom layout by repeating a specified template for each item displayed in the list.\n            Analogous to the ASP.NET WebForms Repeater control.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxRepeater\">https://havit.blazor.eu/components/HxRepeater</see>\n            </summary>\n            <typeparam name=\"TItem\">The type of the item</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxRepeater"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.HxRepeater<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The template that defines how the header section of the Repeater component is displayed.\n            Renders only if there are any items to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","IsEditorRequired":true,"Documentation":"\n            <summary>\n            The template that defines how items in the Repeater component are displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The template that defines how the footer section of the Repeater component is displayed.\n            Renders only if there are any items to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NullTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The template that defines what should be rendered in case of Items being null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NullTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EmptyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The template that defines what should be rendered in case of empty Items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EmptyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Collections.Generic.IEnumerable<TItem>","IsEditorRequired":true,"Documentation":"\n            <summary>\n            The items to be rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Data","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.HxRepeater<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxRepeater","Components.GenericTyped":"True"}},{"HashCode":402963117,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.HxRepeater<TItem>","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            A data-bound list component that allows custom layout by repeating a specified template for each item displayed in the list.\n            Analogous to the ASP.NET WebForms Repeater control.<br />\n            Full documentation and demos: <see href=\"https://havit.blazor.eu/components/HxRepeater\">https://havit.blazor.eu/components/HxRepeater</see>\n            </summary>\n            <typeparam name=\"TItem\">The type of the item</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.HxRepeater"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Havit.Blazor.Components.Web.HxRepeater<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The template that defines how the header section of the Repeater component is displayed.\n            Renders only if there are any items to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","IsEditorRequired":true,"Documentation":"\n            <summary>\n            The template that defines how items in the Repeater component are displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The template that defines how the footer section of the Repeater component is displayed.\n            Renders only if there are any items to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FooterTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NullTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The template that defines what should be rendered in case of Items being null.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NullTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EmptyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The template that defines what should be rendered in case of empty Items.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EmptyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Collections.Generic.IEnumerable<TItem>","IsEditorRequired":true,"Documentation":"\n            <summary>\n            The items to be rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Data","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.HxRepeater<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxRepeater","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-82632419,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.HxRepeater<TItem>.HeaderTemplate","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            The template that defines how the header section of the Repeater component is displayed.\n            Renders only if there are any items to display.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"HxRepeater"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.HxRepeater<TItem>.HeaderTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxRepeater","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-53379986,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.HxRepeater<TItem>.HeaderTemplate","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            The template that defines how the header section of the Repeater component is displayed.\n            Renders only if there are any items to display.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Havit.Blazor.Components.Web.HxRepeater"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.HxRepeater<TItem>.HeaderTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxRepeater","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-945507363,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.HxRepeater<TItem>.ItemTemplate","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            The template that defines how items in the Repeater component are displayed.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"HxRepeater"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.HxRepeater<TItem>.ItemTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxRepeater","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2112265261,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.HxRepeater<TItem>.ItemTemplate","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            The template that defines how items in the Repeater component are displayed.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"Havit.Blazor.Components.Web.HxRepeater"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.HxRepeater<TItem>.ItemTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxRepeater","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":952735262,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.HxRepeater<TItem>.FooterTemplate","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            The template that defines how the footer section of the Repeater component is displayed.\n            Renders only if there are any items to display.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"HxRepeater"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.HxRepeater<TItem>.FooterTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxRepeater","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-691770041,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.HxRepeater<TItem>.FooterTemplate","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            The template that defines how the footer section of the Repeater component is displayed.\n            Renders only if there are any items to display.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"Havit.Blazor.Components.Web.HxRepeater"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.HxRepeater<TItem>.FooterTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxRepeater","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1971278060,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.HxRepeater<TItem>.NullTemplate","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            The template that defines what should be rendered in case of Items being null.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NullTemplate","ParentTag":"HxRepeater"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.HxRepeater<TItem>.NullTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxRepeater","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1436409873,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.HxRepeater<TItem>.NullTemplate","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            The template that defines what should be rendered in case of Items being null.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NullTemplate","ParentTag":"Havit.Blazor.Components.Web.HxRepeater"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.HxRepeater<TItem>.NullTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxRepeater","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1853584479,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.HxRepeater<TItem>.EmptyTemplate","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            The template that defines what should be rendered in case of empty Items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EmptyTemplate","ParentTag":"HxRepeater"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.HxRepeater<TItem>.EmptyTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxRepeater","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":156732039,"Kind":"Components.ChildContent","Name":"Havit.Blazor.Components.Web.HxRepeater<TItem>.EmptyTemplate","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            The template that defines what should be rendered in case of empty Items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EmptyTemplate","ParentTag":"Havit.Blazor.Components.Web.HxRepeater"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Havit.Blazor.Components.Web.HxRepeater<TItem>.EmptyTemplate","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxRepeater","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2049799759,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.HxIcon","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            Displays an icon.\n            Currently supports <see href=\"https://icons.getbootstrap.com/\" target=\"_blank\">Bootstrap icons</see> through the <c>BootstrapIcon</c> class.<br />\n            Full documentation and demos can be found at <see href=\"https://havit.blazor.eu/components/HxIcon\">https://havit.blazor.eu/components/HxIcon</see>.\n            You can easily add your own icon set.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxIcon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            The icon to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The CSS class to combine with the basic icon CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying HTML element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.HxIcon","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxIcon"}},{"HashCode":-1367962385,"Kind":"Components.Component","Name":"Havit.Blazor.Components.Web.HxIcon","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"\n            <summary>\n            Displays an icon.\n            Currently supports <see href=\"https://icons.getbootstrap.com/\" target=\"_blank\">Bootstrap icons</see> through the <c>BootstrapIcon</c> class.<br />\n            Full documentation and demos can be found at <see href=\"https://havit.blazor.eu/components/HxIcon\">https://havit.blazor.eu/components/HxIcon</see>.\n            You can easily add your own icon set.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.HxIcon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Icon","TypeName":"Havit.Blazor.Components.Web.IconBase","Documentation":"\n            <summary>\n            The icon to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::Havit.Blazor.Components.Web.IconBase"}},{"Kind":"Components.Component","Name":"CssClass","TypeName":"System.String","Documentation":"\n            <summary>\n            The CSS class to combine with the basic icon CSS class.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Additional attributes to be splatted onto an underlying HTML element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Havit.Blazor.Components.Web.HxIcon","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxIcon","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2011898971,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'ExpandedItemIds' property and a change event delegate to the 'ExpandedItemIdsChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxAccordion","Attributes":[{"Name":"@bind-ExpandedItemIds","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxAccordion","Attributes":[{"Name":"@bind-ExpandedItemIds:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ExpandedItemIds:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ExpandedItemIds","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<System.String>>","Documentation":"Binds the provided expression to the 'ExpandedItemIds' property and a change event delegate to the 'ExpandedItemIdsChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ExpandedItemIds"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"ExpandedItemIds","Components.Bind.ChangeAttribute":"ExpandedItemIdsChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAccordion"}},{"HashCode":812277695,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'ExpandedItemId' property and a change event delegate to the 'ExpandedItemIdChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxAccordion","Attributes":[{"Name":"@bind-ExpandedItemId","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxAccordion","Attributes":[{"Name":"@bind-ExpandedItemId:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ExpandedItemId:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ExpandedItemId","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'ExpandedItemId' property and a change event delegate to the 'ExpandedItemIdChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ExpandedItemId"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"ExpandedItemId","Components.Bind.ChangeAttribute":"ExpandedItemIdChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAccordion"}},{"HashCode":-772798827,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'ExpandedItemIds' property and a change event delegate to the 'ExpandedItemIdsChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion","Attributes":[{"Name":"@bind-ExpandedItemIds","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion","Attributes":[{"Name":"@bind-ExpandedItemIds:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ExpandedItemIds:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ExpandedItemIds","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<System.String>>","Documentation":"Binds the provided expression to the 'ExpandedItemIds' property and a change event delegate to the 'ExpandedItemIdsChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ExpandedItemIds"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"ExpandedItemIds","Components.Bind.ChangeAttribute":"ExpandedItemIdsChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAccordion","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1576536786,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'ExpandedItemId' property and a change event delegate to the 'ExpandedItemIdChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion","Attributes":[{"Name":"@bind-ExpandedItemId","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion","Attributes":[{"Name":"@bind-ExpandedItemId:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ExpandedItemId:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ExpandedItemId","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'ExpandedItemId' property and a change event delegate to the 'ExpandedItemIdChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ExpandedItemId"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"ExpandedItemId","Components.Bind.ChangeAttribute":"ExpandedItemIdChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAccordion","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAccordion","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1884566100,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCalendar","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxCalendar","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxCalendar","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCalendar","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCalendar"}},{"HashCode":1958873852,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCalendar","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'DisplayMonth' property and a change event delegate to the 'DisplayMonthChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxCalendar","Attributes":[{"Name":"@bind-DisplayMonth","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxCalendar","Attributes":[{"Name":"@bind-DisplayMonth:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-DisplayMonth:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-DisplayMonth","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime>","Documentation":"Binds the provided expression to the 'DisplayMonth' property and a change event delegate to the 'DisplayMonthChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"DisplayMonth"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"DisplayMonth","Components.Bind.ChangeAttribute":"DisplayMonthChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCalendar","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCalendar"}},{"HashCode":-259758171,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCalendar","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCalendar","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCalendar","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCalendar","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCalendar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":857501138,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCalendar","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'DisplayMonth' property and a change event delegate to the 'DisplayMonthChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCalendar","Attributes":[{"Name":"@bind-DisplayMonth","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCalendar","Attributes":[{"Name":"@bind-DisplayMonth:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-DisplayMonth:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-DisplayMonth","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime>","Documentation":"Binds the provided expression to the 'DisplayMonth' property and a change event delegate to the 'DisplayMonthChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"DisplayMonth"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"DisplayMonth","Components.Bind.ChangeAttribute":"DisplayMonthChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCalendar","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCalendar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1702283039,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxDropdownToggleElement","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxDropdownToggleElement","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownToggleElement"}},{"HashCode":613637184,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxDropdownToggleElement","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1089532287,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxFilterForm<TModel>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Model' property and a change event delegate to the 'ModelChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxFilterForm","Attributes":[{"Name":"@bind-Model","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxFilterForm","Attributes":[{"Name":"@bind-Model:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Model:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Model","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TModel>","Documentation":"Binds the provided expression to the 'Model' property and a change event delegate to the 'ModelChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Model"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Model","Components.Bind.ChangeAttribute":"ModelChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxFilterForm<TModel>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxFilterForm"}},{"HashCode":1323519140,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxFilterForm<TModel>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Model' property and a change event delegate to the 'ModelChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxFilterForm","Attributes":[{"Name":"@bind-Model","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxFilterForm","Attributes":[{"Name":"@bind-Model:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Model:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Model","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TModel>","Documentation":"Binds the provided expression to the 'Model' property and a change event delegate to the 'ModelChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Model"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Model","Components.Bind.ChangeAttribute":"ModelChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxFilterForm<TModel>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxFilterForm","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1001622362,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxAutosuggest","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxAutosuggest","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAutosuggest"}},{"HashCode":-1373744956,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest<TItem, TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxAutosuggest","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-987559818,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxCheckbox","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckbox"}},{"HashCode":-1834075707,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckbox","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckbox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-316046726,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxCheckboxList","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxCheckboxList","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<TValue>>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckboxList"}},{"HashCode":1506437231,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<TValue>>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList<TValue, TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxCheckboxList","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":229948787,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxInputDate","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDate"}},{"HashCode":-492341696,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDate<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDate","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":904640913,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputDateRange","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxInputDateRange","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.DateTimeRange>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDateRange"}},{"HashCode":1967275548,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.DateTimeRange>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputDateRange","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1749621967,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxInputNumber","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputNumber"}},{"HashCode":352374743,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputNumber<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputNumber","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-355544503,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputPercent","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxInputPercent","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputPercent"}},{"HashCode":1274186567,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputPercent<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputPercent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-625266763,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputRange","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxInputRange","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputRange"}},{"HashCode":363782787,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputRange<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputRange","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1687236239,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputText","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxInputText","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputText","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputText"}},{"HashCode":-763012345,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputText","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputText","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputText","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputText","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":394159411,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxInputTextArea","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTextArea"}},{"HashCode":-1118772649,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTextArea","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-247596235,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxMultiSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxMultiSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<TValue>>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMultiSelect"}},{"HashCode":-22392293,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<TValue>>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect<TValue, TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxMultiSelect","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":650933889,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxRadioButtonList","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxRadioButtonList","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxRadioButtonList"}},{"HashCode":-1696283870,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList<TValue, TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxRadioButtonList","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1682396943,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSelect"}},{"HashCode":1129881934,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSelect<TValue, TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSelect","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1491448520,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxSwitch","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxSwitch","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSwitch"}},{"HashCode":-1888141964,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSwitch","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSwitch","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":901003836,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'TextQuery' property and a change event delegate to the 'TextQueryChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxSearchBox","Attributes":[{"Name":"@bind-TextQuery","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxSearchBox","Attributes":[{"Name":"@bind-TextQuery:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-TextQuery:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-TextQuery","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'TextQuery' property and a change event delegate to the 'TextQueryChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"TextQuery"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"TextQuery","Components.Bind.ChangeAttribute":"TextQueryChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSearchBox"}},{"HashCode":-1865365791,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'TextQuery' property and a change event delegate to the 'TextQueryChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox","Attributes":[{"Name":"@bind-TextQuery","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox","Attributes":[{"Name":"@bind-TextQuery:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-TextQuery:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-TextQuery","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'TextQuery' property and a change event delegate to the 'TextQueryChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"TextQuery"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"TextQuery","Components.Bind.ChangeAttribute":"TextQueryChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSearchBox<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSearchBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-107386821,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'SelectedDataItem' property and a change event delegate to the 'SelectedDataItemChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxGrid","Attributes":[{"Name":"@bind-SelectedDataItem","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxGrid","Attributes":[{"Name":"@bind-SelectedDataItem:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedDataItem:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedDataItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"Binds the provided expression to the 'SelectedDataItem' property and a change event delegate to the 'SelectedDataItemChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedDataItem"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedDataItem","Components.Bind.ChangeAttribute":"SelectedDataItemChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGrid"}},{"HashCode":848966219,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'SelectedDataItems' property and a change event delegate to the 'SelectedDataItemsChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxGrid","Attributes":[{"Name":"@bind-SelectedDataItems","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxGrid","Attributes":[{"Name":"@bind-SelectedDataItems:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedDataItems:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedDataItems","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.HashSet<TItem>>","Documentation":"Binds the provided expression to the 'SelectedDataItems' property and a change event delegate to the 'SelectedDataItemsChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedDataItems"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedDataItems","Components.Bind.ChangeAttribute":"SelectedDataItemsChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGrid"}},{"HashCode":-854283476,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'CurrentUserState' property and a change event delegate to the 'CurrentUserStateChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxGrid","Attributes":[{"Name":"@bind-CurrentUserState","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxGrid","Attributes":[{"Name":"@bind-CurrentUserState:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-CurrentUserState:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-CurrentUserState","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.Bootstrap.GridUserState>","Documentation":"Binds the provided expression to the 'CurrentUserState' property and a change event delegate to the 'CurrentUserStateChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"CurrentUserState"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"CurrentUserState","Components.Bind.ChangeAttribute":"CurrentUserStateChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGrid"}},{"HashCode":-1903452245,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'SelectedDataItem' property and a change event delegate to the 'SelectedDataItemChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid","Attributes":[{"Name":"@bind-SelectedDataItem","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid","Attributes":[{"Name":"@bind-SelectedDataItem:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedDataItem:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedDataItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"Binds the provided expression to the 'SelectedDataItem' property and a change event delegate to the 'SelectedDataItemChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedDataItem"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedDataItem","Components.Bind.ChangeAttribute":"SelectedDataItemChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGrid","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1908518666,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'SelectedDataItems' property and a change event delegate to the 'SelectedDataItemsChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid","Attributes":[{"Name":"@bind-SelectedDataItems","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid","Attributes":[{"Name":"@bind-SelectedDataItems:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedDataItems:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedDataItems","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.HashSet<TItem>>","Documentation":"Binds the provided expression to the 'SelectedDataItems' property and a change event delegate to the 'SelectedDataItemsChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedDataItems"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedDataItems","Components.Bind.ChangeAttribute":"SelectedDataItemsChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGrid","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1592465020,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'CurrentUserState' property and a change event delegate to the 'CurrentUserStateChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid","Attributes":[{"Name":"@bind-CurrentUserState","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid","Attributes":[{"Name":"@bind-CurrentUserState:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-CurrentUserState:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-CurrentUserState","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.Bootstrap.GridUserState>","Documentation":"Binds the provided expression to the 'CurrentUserState' property and a change event delegate to the 'CurrentUserStateChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"CurrentUserState"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"CurrentUserState","Components.Bind.ChangeAttribute":"CurrentUserStateChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxGrid<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxGrid","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2094244791,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxPager","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'CurrentPageIndex' property and a change event delegate to the 'CurrentPageIndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxPager","Attributes":[{"Name":"@bind-CurrentPageIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxPager","Attributes":[{"Name":"@bind-CurrentPageIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-CurrentPageIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-CurrentPageIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'CurrentPageIndex' property and a change event delegate to the 'CurrentPageIndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"CurrentPageIndex"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"CurrentPageIndex","Components.Bind.ChangeAttribute":"CurrentPageIndexChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxPager","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxPager"}},{"HashCode":-2070501490,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxPager","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'CurrentPageIndex' property and a change event delegate to the 'CurrentPageIndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxPager","Attributes":[{"Name":"@bind-CurrentPageIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxPager","Attributes":[{"Name":"@bind-CurrentPageIndex:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-CurrentPageIndex:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-CurrentPageIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'CurrentPageIndex' property and a change event delegate to the 'CurrentPageIndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"CurrentPageIndex"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"CurrentPageIndex","Components.Bind.ChangeAttribute":"CurrentPageIndexChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxPager","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxPager","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":565847269,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'SelectedNamedView' property and a change event delegate to the 'SelectedNamedViewChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxListLayout","Attributes":[{"Name":"@bind-SelectedNamedView","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxListLayout","Attributes":[{"Name":"@bind-SelectedNamedView:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedNamedView:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedNamedView","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.Bootstrap.NamedView<TFilterModel>>","Documentation":"Binds the provided expression to the 'SelectedNamedView' property and a change event delegate to the 'SelectedNamedViewChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedNamedView"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedNamedView","Components.Bind.ChangeAttribute":"SelectedNamedViewChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListLayout"}},{"HashCode":-1835547576,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'FilterModel' property and a change event delegate to the 'FilterModelChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxListLayout","Attributes":[{"Name":"@bind-FilterModel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxListLayout","Attributes":[{"Name":"@bind-FilterModel:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-FilterModel:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-FilterModel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TFilterModel>","Documentation":"Binds the provided expression to the 'FilterModel' property and a change event delegate to the 'FilterModelChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"FilterModel"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"FilterModel","Components.Bind.ChangeAttribute":"FilterModelChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListLayout"}},{"HashCode":-1445194360,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'SelectedNamedView' property and a change event delegate to the 'SelectedNamedViewChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout","Attributes":[{"Name":"@bind-SelectedNamedView","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout","Attributes":[{"Name":"@bind-SelectedNamedView:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedNamedView:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedNamedView","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.Blazor.Components.Web.Bootstrap.NamedView<TFilterModel>>","Documentation":"Binds the provided expression to the 'SelectedNamedView' property and a change event delegate to the 'SelectedNamedViewChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedNamedView"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedNamedView","Components.Bind.ChangeAttribute":"SelectedNamedViewChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListLayout","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-290119854,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'FilterModel' property and a change event delegate to the 'FilterModelChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout","Attributes":[{"Name":"@bind-FilterModel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout","Attributes":[{"Name":"@bind-FilterModel:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-FilterModel:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-FilterModel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TFilterModel>","Documentation":"Binds the provided expression to the 'FilterModel' property and a change event delegate to the 'FilterModelChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"FilterModel"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"FilterModel","Components.Bind.ChangeAttribute":"FilterModelChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxListLayout<TFilterModel>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxListLayout","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":230282033,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Collapsed' property and a change event delegate to the 'CollapsedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxSidebar","Attributes":[{"Name":"@bind-Collapsed","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxSidebar","Attributes":[{"Name":"@bind-Collapsed:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Collapsed:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Collapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Collapsed' property and a change event delegate to the 'CollapsedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Collapsed"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Collapsed","Components.Bind.ChangeAttribute":"CollapsedChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebar"}},{"HashCode":831805742,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Collapsed' property and a change event delegate to the 'CollapsedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar","Attributes":[{"Name":"@bind-Collapsed","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar","Attributes":[{"Name":"@bind-Collapsed:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Collapsed:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Collapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Collapsed' property and a change event delegate to the 'CollapsedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Collapsed"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Collapsed","Components.Bind.ChangeAttribute":"CollapsedChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxSidebar","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxSidebar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-342293090,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTabPanel","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'ActiveTabId' property and a change event delegate to the 'ActiveTabIdChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxTabPanel","Attributes":[{"Name":"@bind-ActiveTabId","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxTabPanel","Attributes":[{"Name":"@bind-ActiveTabId:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ActiveTabId:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ActiveTabId","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'ActiveTabId' property and a change event delegate to the 'ActiveTabIdChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ActiveTabId"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"ActiveTabId","Components.Bind.ChangeAttribute":"ActiveTabIdChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTabPanel","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTabPanel"}},{"HashCode":893081441,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTabPanel","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'ActiveTabId' property and a change event delegate to the 'ActiveTabIdChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxTabPanel","Attributes":[{"Name":"@bind-ActiveTabId","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxTabPanel","Attributes":[{"Name":"@bind-ActiveTabId:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ActiveTabId:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ActiveTabId","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'ActiveTabId' property and a change event delegate to the 'ActiveTabIdChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ActiveTabId"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"ActiveTabId","Components.Bind.ChangeAttribute":"ActiveTabIdChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTabPanel","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTabPanel","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1716011209,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputTags","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxInputTags","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<System.String>>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTags"}},{"HashCode":-1080427649,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<System.String>>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxInputTags","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxInputTags","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1883489667,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTreeView<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxTreeView","Attributes":[{"Name":"@bind-SelectedItem","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxTreeView","Attributes":[{"Name":"@bind-SelectedItem:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedItem:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedItem"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedItem","Components.Bind.ChangeAttribute":"SelectedItemChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTreeView<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTreeView"}},{"HashCode":-598057049,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.HxTreeView<TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxTreeView","Attributes":[{"Name":"@bind-SelectedItem","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.HxTreeView","Attributes":[{"Name":"@bind-SelectedItem:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedItem:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedItem"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedItem","Components.Bind.ChangeAttribute":"SelectedItemChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.HxTreeView<TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap","Common.TypeNameIdentifier":"HxTreeView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1082465030,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxAutosuggestInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxAutosuggestInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxAutosuggestInternal"}},{"HashCode":-135557711,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal<TItem, TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxAutosuggestInternal","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1462195014,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputDateInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxInputDateInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputDateInternal"}},{"HashCode":2056250951,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal<TValue>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal<TValue>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputDateInternal","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":423551492,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateRangeInternal","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputDateRangeInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxInputDateRangeInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.DateTimeRange>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateRangeInternal","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputDateRangeInternal"}},{"HashCode":-937950845,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateRangeInternal","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateRangeInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateRangeInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Havit.DateTimeRange>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateRangeInternal","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputDateRangeInternal","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1167828582,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'SelectedValues' property and a change event delegate to the 'SelectedValuesChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxMultiSelectInternal","Attributes":[{"Name":"@bind-SelectedValues","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxMultiSelectInternal","Attributes":[{"Name":"@bind-SelectedValues:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedValues:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedValues","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<TValue>>","Documentation":"Binds the provided expression to the 'SelectedValues' property and a change event delegate to the 'SelectedValuesChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedValues"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedValues","Components.Bind.ChangeAttribute":"SelectedValuesChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxMultiSelectInternal"}},{"HashCode":1635150773,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem>","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'SelectedValues' property and a change event delegate to the 'SelectedValuesChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal","Attributes":[{"Name":"@bind-SelectedValues","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal","Attributes":[{"Name":"@bind-SelectedValues:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-SelectedValues:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedValues","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<TValue>>","Documentation":"Binds the provided expression to the 'SelectedValues' property and a change event delegate to the 'SelectedValuesChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedValues"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedValues","Components.Bind.ChangeAttribute":"SelectedValuesChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal<TValue, TItem>","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxMultiSelectInternal","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1063433523,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxInputTagsInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxInputTagsInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<System.String>>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputTagsInternal"}},{"HashCode":1844838268,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal","AssemblyName":"Havit.Blazor.Components.Web.Bootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<System.String>>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal","Common.TypeNamespace":"Havit.Blazor.Components.Web.Bootstrap.Internal","Common.TypeNameIdentifier":"HxInputTagsInternal","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1777866650,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.HxModelEditForm<TModel>","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"Binds the provided expression to the 'Model' property and a change event delegate to the 'ModelChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxModelEditForm","Attributes":[{"Name":"@bind-Model","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxModelEditForm","Attributes":[{"Name":"@bind-Model:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Model:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Model","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TModel>","Documentation":"Binds the provided expression to the 'Model' property and a change event delegate to the 'ModelChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Model"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Model","Components.Bind.ChangeAttribute":"ModelChanged","Common.TypeName":"Havit.Blazor.Components.Web.HxModelEditForm<TModel>","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxModelEditForm"}},{"HashCode":-825012421,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.HxModelEditForm<TModel>","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"Binds the provided expression to the 'Model' property and a change event delegate to the 'ModelChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.HxModelEditForm","Attributes":[{"Name":"@bind-Model","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.HxModelEditForm","Attributes":[{"Name":"@bind-Model:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Model:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Model","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TModel>","Documentation":"Binds the provided expression to the 'Model' property and a change event delegate to the 'ModelChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Model"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Model","Components.Bind.ChangeAttribute":"ModelChanged","Common.TypeName":"Havit.Blazor.Components.Web.HxModelEditForm<TModel>","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxModelEditForm","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":625310491,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.HxDynamicElement","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"Binds the provided expression to the 'ElementRef' property and a change event delegate to the 'ElementRefChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HxDynamicElement","Attributes":[{"Name":"@bind-ElementRef","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"HxDynamicElement","Attributes":[{"Name":"@bind-ElementRef:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ElementRef:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ElementRef","TypeName":"System.Action<Microsoft.AspNetCore.Components.ElementReference>","Documentation":"Binds the provided expression to the 'ElementRef' property and a change event delegate to the 'ElementRefChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ElementRef"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"ElementRef","Components.Bind.ChangeAttribute":"ElementRefChanged","Common.TypeName":"Havit.Blazor.Components.Web.HxDynamicElement","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxDynamicElement"}},{"HashCode":-1884539414,"Kind":"Components.Bind","Name":"Havit.Blazor.Components.Web.HxDynamicElement","AssemblyName":"Havit.Blazor.Components.Web","Documentation":"Binds the provided expression to the 'ElementRef' property and a change event delegate to the 'ElementRefChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Havit.Blazor.Components.Web.HxDynamicElement","Attributes":[{"Name":"@bind-ElementRef","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Havit.Blazor.Components.Web.HxDynamicElement","Attributes":[{"Name":"@bind-ElementRef:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ElementRef:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ElementRef","TypeName":"System.Action<Microsoft.AspNetCore.Components.ElementReference>","Documentation":"Binds the provided expression to the 'ElementRef' property and a change event delegate to the 'ElementRefChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ElementRef"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"ElementRef","Components.Bind.ChangeAttribute":"ElementRefChanged","Common.TypeName":"Havit.Blazor.Components.Web.HxDynamicElement","Common.TypeNamespace":"Havit.Blazor.Components.Web","Common.TypeNameIdentifier":"HxDynamicElement","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2018807883,"Kind":"Components.Component","Name":"Blazored.Modal.BlazoredModalInstance","AssemblyName":"Blazored.Modal","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazoredModalInstance"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Options","TypeName":"Blazored.Modal.ModalOptions","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"Options","Common.GloballyQualifiedTypeName":"global::Blazored.Modal.ModalOptions"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.Guid","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.Guid"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Blazored.Modal.BlazoredModalInstance","Common.TypeNamespace":"Blazored.Modal","Common.TypeNameIdentifier":"BlazoredModalInstance"}},{"HashCode":2026843431,"Kind":"Components.Component","Name":"Blazored.Modal.BlazoredModalInstance","AssemblyName":"Blazored.Modal","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Blazored.Modal.BlazoredModalInstance"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Options","TypeName":"Blazored.Modal.ModalOptions","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"Options","Common.GloballyQualifiedTypeName":"global::Blazored.Modal.ModalOptions"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.Guid","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.Guid"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Blazored.Modal.BlazoredModalInstance","Common.TypeNamespace":"Blazored.Modal","Common.TypeNameIdentifier":"BlazoredModalInstance","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2057417643,"Kind":"Components.ChildContent","Name":"Blazored.Modal.BlazoredModalInstance.Content","AssemblyName":"Blazored.Modal","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"BlazoredModalInstance"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Blazored.Modal.BlazoredModalInstance.Content","Common.TypeNamespace":"Blazored.Modal","Common.TypeNameIdentifier":"BlazoredModalInstance","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-958747848,"Kind":"Components.ChildContent","Name":"Blazored.Modal.BlazoredModalInstance.Content","AssemblyName":"Blazored.Modal","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"Blazored.Modal.BlazoredModalInstance"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Blazored.Modal.BlazoredModalInstance.Content","Common.TypeNamespace":"Blazored.Modal","Common.TypeNameIdentifier":"BlazoredModalInstance","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1555556144,"Kind":"Components.Component","Name":"Blazored.Modal.BlazoredModal","AssemblyName":"Blazored.Modal","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazoredModal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HideHeader","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"HideHeader","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"HideCloseButton","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"HideCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"DisableBackgroundCancel","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"DisableBackgroundCancel","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"OverlayCustomClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"OverlayCustomClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Blazored.Modal.ModalPosition?","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::Blazored.Modal.ModalPosition?"}},{"Kind":"Components.Component","Name":"PositionCustomClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"PositionCustomClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Blazored.Modal.ModalSize?","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Blazored.Modal.ModalSize?"}},{"Kind":"Components.Component","Name":"SizeCustomClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"SizeCustomClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AnimationType","TypeName":"Blazored.Modal.ModalAnimationType?","Metadata":{"Common.PropertyName":"AnimationType","Common.GloballyQualifiedTypeName":"global::Blazored.Modal.ModalAnimationType?"}},{"Kind":"Components.Component","Name":"UseCustomLayout","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"UseCustomLayout","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ActivateFocusTrap","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"ActivateFocusTrap","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Blazored.Modal.BlazoredModal","Common.TypeNamespace":"Blazored.Modal","Common.TypeNameIdentifier":"BlazoredModal"}},{"HashCode":1700414804,"Kind":"Components.Component","Name":"Blazored.Modal.BlazoredModal","AssemblyName":"Blazored.Modal","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Blazored.Modal.BlazoredModal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HideHeader","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"HideHeader","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"HideCloseButton","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"HideCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"DisableBackgroundCancel","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"DisableBackgroundCancel","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"OverlayCustomClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"OverlayCustomClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Blazored.Modal.ModalPosition?","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::Blazored.Modal.ModalPosition?"}},{"Kind":"Components.Component","Name":"PositionCustomClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"PositionCustomClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Blazored.Modal.ModalSize?","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Blazored.Modal.ModalSize?"}},{"Kind":"Components.Component","Name":"SizeCustomClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"SizeCustomClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AnimationType","TypeName":"Blazored.Modal.ModalAnimationType?","Metadata":{"Common.PropertyName":"AnimationType","Common.GloballyQualifiedTypeName":"global::Blazored.Modal.ModalAnimationType?"}},{"Kind":"Components.Component","Name":"UseCustomLayout","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"UseCustomLayout","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ActivateFocusTrap","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"ActivateFocusTrap","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Blazored.Modal.BlazoredModal","Common.TypeNamespace":"Blazored.Modal","Common.TypeNameIdentifier":"BlazoredModal","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":727041444,"Kind":"Components.Component","Name":"Blazored.Modal.CascadingBlazoredModal","AssemblyName":"Blazored.Modal","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CascadingBlazoredModal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HideHeader","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"HideHeader","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"HideCloseButton","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"HideCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"DisableBackgroundCancel","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"DisableBackgroundCancel","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Blazored.Modal.ModalPosition?","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::Blazored.Modal.ModalPosition?"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Blazored.Modal.ModalSize?","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Blazored.Modal.ModalSize?"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AnimationType","TypeName":"Blazored.Modal.ModalAnimationType?","Metadata":{"Common.PropertyName":"AnimationType","Common.GloballyQualifiedTypeName":"global::Blazored.Modal.ModalAnimationType?"}},{"Kind":"Components.Component","Name":"UseCustomLayout","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"UseCustomLayout","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"OverlayCustomClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"OverlayCustomClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContentScrollable","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"ContentScrollable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ActivateFocusTrap","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"ActivateFocusTrap","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"PositionCustomClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"PositionCustomClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SizeCustomClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"SizeCustomClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Blazored.Modal.CascadingBlazoredModal","Common.TypeNamespace":"Blazored.Modal","Common.TypeNameIdentifier":"CascadingBlazoredModal"}},{"HashCode":1193871155,"Kind":"Components.Component","Name":"Blazored.Modal.CascadingBlazoredModal","AssemblyName":"Blazored.Modal","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Blazored.Modal.CascadingBlazoredModal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HideHeader","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"HideHeader","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"HideCloseButton","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"HideCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"DisableBackgroundCancel","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"DisableBackgroundCancel","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Blazored.Modal.ModalPosition?","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::Blazored.Modal.ModalPosition?"}},{"Kind":"Components.Component","Name":"Size","TypeName":"Blazored.Modal.ModalSize?","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::Blazored.Modal.ModalSize?"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AnimationType","TypeName":"Blazored.Modal.ModalAnimationType?","Metadata":{"Common.PropertyName":"AnimationType","Common.GloballyQualifiedTypeName":"global::Blazored.Modal.ModalAnimationType?"}},{"Kind":"Components.Component","Name":"UseCustomLayout","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"UseCustomLayout","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"OverlayCustomClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"OverlayCustomClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ContentScrollable","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"ContentScrollable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ActivateFocusTrap","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"ActivateFocusTrap","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"PositionCustomClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"PositionCustomClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SizeCustomClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"SizeCustomClass","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Blazored.Modal.CascadingBlazoredModal","Common.TypeNamespace":"Blazored.Modal","Common.TypeNameIdentifier":"CascadingBlazoredModal","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1300636549,"Kind":"Components.ChildContent","Name":"Blazored.Modal.CascadingBlazoredModal.ChildContent","AssemblyName":"Blazored.Modal","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CascadingBlazoredModal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Blazored.Modal.CascadingBlazoredModal.ChildContent","Common.TypeNamespace":"Blazored.Modal","Common.TypeNameIdentifier":"CascadingBlazoredModal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":107417926,"Kind":"Components.ChildContent","Name":"Blazored.Modal.CascadingBlazoredModal.ChildContent","AssemblyName":"Blazored.Modal","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Blazored.Modal.CascadingBlazoredModal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Blazored.Modal.CascadingBlazoredModal.ChildContent","Common.TypeNamespace":"Blazored.Modal","Common.TypeNameIdentifier":"CascadingBlazoredModal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1850352244,"Kind":"Components.Component","Name":"Blazored.Modal.FocusTrap","AssemblyName":"Blazored.Modal","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FocusTrap"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsActive","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsActive","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Blazored.Modal.FocusTrap","Common.TypeNamespace":"Blazored.Modal","Common.TypeNameIdentifier":"FocusTrap"}},{"HashCode":-436656399,"Kind":"Components.Component","Name":"Blazored.Modal.FocusTrap","AssemblyName":"Blazored.Modal","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Blazored.Modal.FocusTrap"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsActive","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsActive","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Blazored.Modal.FocusTrap","Common.TypeNamespace":"Blazored.Modal","Common.TypeNameIdentifier":"FocusTrap","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1385037157,"Kind":"Components.ChildContent","Name":"Blazored.Modal.FocusTrap.ChildContent","AssemblyName":"Blazored.Modal","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"FocusTrap"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Blazored.Modal.FocusTrap.ChildContent","Common.TypeNamespace":"Blazored.Modal","Common.TypeNameIdentifier":"FocusTrap","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1663810585,"Kind":"Components.ChildContent","Name":"Blazored.Modal.FocusTrap.ChildContent","AssemblyName":"Blazored.Modal","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Blazored.Modal.FocusTrap"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Blazored.Modal.FocusTrap.ChildContent","Common.TypeNamespace":"Blazored.Modal","Common.TypeNameIdentifier":"FocusTrap","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":44137401,"Kind":"Components.Component","Name":"Blazored.Modal._Imports","AssemblyName":"Blazored.Modal","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Blazored.Modal._Imports","Common.TypeNamespace":"Blazored.Modal","Common.TypeNameIdentifier":"_Imports"}},{"HashCode":-1038118303,"Kind":"Components.Component","Name":"Blazored.Modal._Imports","AssemblyName":"Blazored.Modal","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Blazored.Modal._Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Blazored.Modal._Imports","Common.TypeNamespace":"Blazored.Modal","Common.TypeNameIdentifier":"_Imports","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-570326213,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CascadingValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            The value to be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IsFixed","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsFixed","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Common.TypeNameIdentifier":"CascadingValue","Components.GenericTyped":"True"}},{"HashCode":-1427256128,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.CascadingValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            The value to be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IsFixed","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsFixed","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Common.TypeNameIdentifier":"CascadingValue","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2019176430,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CascadingValue"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Common.TypeNameIdentifier":"CascadingValue","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-99784322,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.CascadingValue"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Common.TypeNameIdentifier":"CascadingValue","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1963668115,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.DynamicComponent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that renders another component dynamically according to its\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DynamicComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"System.Type","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the type of the component to be rendered. The supplied type must\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Parameters","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a dictionary of parameters to be passed to the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Parameters","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.DynamicComponent","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Common.TypeNameIdentifier":"DynamicComponent"}},{"HashCode":-2015505674,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.DynamicComponent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that renders another component dynamically according to its\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.DynamicComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"System.Type","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the type of the component to be rendered. The supplied type must\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Parameters","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a dictionary of parameters to be passed to the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Parameters","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.DynamicComponent","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Common.TypeNameIdentifier":"DynamicComponent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2014705676,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.LayoutView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LayoutView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Layout","Common.GloballyQualifiedTypeName":"global::System.Type"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Common.TypeNameIdentifier":"LayoutView"}},{"HashCode":-644325477,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.LayoutView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.LayoutView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Layout","Common.GloballyQualifiedTypeName":"global::System.Type"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Common.TypeNameIdentifier":"LayoutView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2070786262,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LayoutView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Common.TypeNameIdentifier":"LayoutView","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1063252289,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.LayoutView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Common.TypeNameIdentifier":"LayoutView","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-295287261,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.RouteView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DefaultLayout","Common.GloballyQualifiedTypeName":"global::System.Type"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.RouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Common.TypeNameIdentifier":"RouteView"}},{"HashCode":929523394,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.RouteView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.RouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DefaultLayout","Common.GloballyQualifiedTypeName":"global::System.Type"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.RouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Common.TypeNameIdentifier":"RouteView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":24364686,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.Router","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Router"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AppAssembly","TypeName":"System.Reflection.Assembly","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AppAssembly","Common.GloballyQualifiedTypeName":"global::System.Reflection.Assembly"}},{"Kind":"Components.Component","Name":"AdditionalAssemblies","TypeName":"System.Collections.Generic.IEnumerable<System.Reflection.Assembly>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAssemblies","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>"}},{"Kind":"Components.Component","Name":"NotFound","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotFound","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Found","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Found","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Navigating","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Navigating","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnNavigateAsync","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>","Documentation":"\n            <summary>\n            Gets or sets a handler that should be called before navigating to a new page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnNavigateAsync","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PreferExactMatches","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\n            over wildcards.\n            <para>This property is obsolete and configuring it does nothing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PreferExactMatches","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Common.TypeNameIdentifier":"Router"}},{"HashCode":-868917091,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.Router","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.Router"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AppAssembly","TypeName":"System.Reflection.Assembly","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AppAssembly","Common.GloballyQualifiedTypeName":"global::System.Reflection.Assembly"}},{"Kind":"Components.Component","Name":"AdditionalAssemblies","TypeName":"System.Collections.Generic.IEnumerable<System.Reflection.Assembly>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAssemblies","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>"}},{"Kind":"Components.Component","Name":"NotFound","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotFound","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Found","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Found","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Navigating","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Navigating","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnNavigateAsync","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>","Documentation":"\n            <summary>\n            Gets or sets a handler that should be called before navigating to a new page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnNavigateAsync","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PreferExactMatches","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\n            over wildcards.\n            <para>This property is obsolete and configuring it does nothing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PreferExactMatches","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Common.TypeNameIdentifier":"Router","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":395977800,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFound","ParentTag":"Router"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Common.TypeNameIdentifier":"Router","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1303430697,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFound","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Common.TypeNameIdentifier":"Router","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1702540883,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Found","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Found","ParentTag":"Router"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Found' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Found","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Common.TypeNameIdentifier":"Router","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-210369553,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Found","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Found","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Found' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Found","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Common.TypeNameIdentifier":"Router","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1969075404,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Navigating","ParentTag":"Router"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Common.TypeNameIdentifier":"Router","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1966357993,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Navigating","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Common.TypeNameIdentifier":"Router","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1856072683,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","AssemblyName":"Microsoft.AspNetCore.Components.Forms","Documentation":"\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DataAnnotationsValidator"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"DataAnnotationsValidator"}},{"HashCode":-1646701916,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","AssemblyName":"Microsoft.AspNetCore.Components.Forms","Documentation":"\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"DataAnnotationsValidator","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1626695798,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n             <summary>\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\n             so that it displays the page matching the specified route but only if the user\n             is authorized to see it.\n            \n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\n             which makes the user's current authentication state available to descendants.\n             </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotAuthorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Authorizing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Resource","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DefaultLayout","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Common.TypeNameIdentifier":"AuthorizeRouteView"}},{"HashCode":-1089588755,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n             <summary>\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\n             so that it displays the page matching the specified route but only if the user\n             is authorized to see it.\n            \n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\n             which makes the user's current authentication state available to descendants.\n             </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotAuthorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Authorizing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Resource","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DefaultLayout","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Common.TypeNameIdentifier":"AuthorizeRouteView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1894495879,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NotAuthorized' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Common.TypeNameIdentifier":"AuthorizeRouteView","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-772132001,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NotAuthorized' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Common.TypeNameIdentifier":"AuthorizeRouteView","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1961680512,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"AuthorizeRouteView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Common.TypeNameIdentifier":"AuthorizeRouteView","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1794929427,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Common.TypeNameIdentifier":"AuthorizeRouteView","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1333841242,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            Displays differing content depending on the user's authorization status.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Policy","TypeName":"System.String","Documentation":"\n            <summary>\n            The policy name that determines whether the content can be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Policy","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Roles","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma delimited list of roles that are allowed to display the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Roles","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotAuthorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Authorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Authorizing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Resource","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":-1062287476,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            Displays differing content depending on the user's authorization status.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Policy","TypeName":"System.String","Documentation":"\n            <summary>\n            The policy name that determines whether the content can be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Policy","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Roles","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma delimited list of roles that are allowed to display the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Roles","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotAuthorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Authorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Authorizing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Resource","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Common.TypeNameIdentifier":"AuthorizeView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1976336925,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Common.TypeNameIdentifier":"AuthorizeView","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2072500109,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Common.TypeNameIdentifier":"AuthorizeView","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":206294960,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NotAuthorized' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Common.TypeNameIdentifier":"AuthorizeView","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1635767799,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NotAuthorized' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Common.TypeNameIdentifier":"AuthorizeView","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1343832225,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorized","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Authorized' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Common.TypeNameIdentifier":"AuthorizeView","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-747468937,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Authorized' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Common.TypeNameIdentifier":"AuthorizeView","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1760466501,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"AuthorizeView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Common.TypeNameIdentifier":"AuthorizeView","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":254935187,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Common.TypeNameIdentifier":"AuthorizeView","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1219772387,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CascadingAuthenticationState"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Common.TypeNameIdentifier":"CascadingAuthenticationState"}},{"HashCode":-1605994785,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Common.TypeNameIdentifier":"CascadingAuthenticationState","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":409770779,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CascadingAuthenticationState"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Common.TypeNameIdentifier":"CascadingAuthenticationState","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1870844652,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Common.TypeNameIdentifier":"CascadingAuthenticationState","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1789588623,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.EditForm","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ","Metadata":{"Common.PropertyName":"OnSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"EditForm"}},{"HashCode":2087210361,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.EditForm","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.EditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ","Metadata":{"Common.PropertyName":"OnSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"EditForm","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2063719819,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"EditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"EditForm","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":113815998,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.EditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"EditForm","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-916422635,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputCheckbox"}},{"HashCode":1793156627,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputCheckbox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2103100738,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Microsoft.AspNetCore.Components.Forms.InputDateType","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the type of HTML input to be rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.InputDateType"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputDate","Components.GenericTyped":"True"}},{"HashCode":596078321,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Microsoft.AspNetCore.Components.Forms.InputDateType","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the type of HTML input to be rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.InputDateType"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputDate","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-950800962,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputFile","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputFile"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChange","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputFile","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputFile"}},{"HashCode":-51883978,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputFile","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputFile"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChange","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputFile","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputFile","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":152097514,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputNumber","Components.GenericTyped":"True"}},{"HashCode":-899228490,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputNumber","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":247676274,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component used for selecting a value from a group of choices.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadio"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of this input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the parent input radio group.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputRadio","Components.GenericTyped":"True"}},{"HashCode":-245082154,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component used for selecting a value from a group of choices.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadio"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of this input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the parent input radio group.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputRadio","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-3486518,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the group.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputRadioGroup","Components.GenericTyped":"True"}},{"HashCode":-1446222502,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the group.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputRadioGroup","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1960512142,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"InputRadioGroup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputRadioGroup","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1920215596,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputRadioGroup","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-962036311,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputSelect","Components.GenericTyped":"True"}},{"HashCode":1775905808,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputSelect","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-924391862,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"InputSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputSelect","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1469997211,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.InputSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputSelect","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":497607057,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputText"}},{"HashCode":-1896998253,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputText","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":706994615,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputTextArea"}},{"HashCode":-1458327790,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputTextArea","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1409346984,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"ValidationMessage","Components.GenericTyped":"True"}},{"HashCode":-539041457,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"ValidationMessage","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1642247267,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValidationSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"ValidationSummary"}},{"HashCode":591741979,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"ValidationSummary","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1321625040,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            After navigating from one page to another, sets focus to an element\n            matching a CSS selector. This can be used to build an accessible\n            navigation system compatible with screen readers.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FocusOnNavigate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","Documentation":"\n            <summary>\n            Gets or sets the route data. This can be obtained from an enclosing\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"Selector","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a CSS selector describing the element to be focused after\n            navigation between pages.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selector","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Common.TypeNameIdentifier":"FocusOnNavigate"}},{"HashCode":-1759400738,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            After navigating from one page to another, sets focus to an element\n            matching a CSS selector. This can be used to build an accessible\n            navigation system compatible with screen readers.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","Documentation":"\n            <summary>\n            Gets or sets the route data. This can be obtained from an enclosing\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"Selector","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a CSS selector describing the element to be focused after\n            navigation between pages.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selector","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Common.TypeNameIdentifier":"FocusOnNavigate","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2081204057,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavigationLock","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A component that can be used to intercept navigation events. \n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavigationLock"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnBeforeInternalNavigation","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.LocationChangingContext>","Documentation":"\n            <summary>\n            Gets or sets a callback to be invoked when an internal navigation event occurs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnBeforeInternalNavigation","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.LocationChangingContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ConfirmExternalNavigation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether a browser dialog should prompt the user to either confirm or cancel\n            external navigations.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ConfirmExternalNavigation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavigationLock","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Common.TypeNameIdentifier":"NavigationLock"}},{"HashCode":-1809608004,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavigationLock","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A component that can be used to intercept navigation events. \n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.NavigationLock"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnBeforeInternalNavigation","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.LocationChangingContext>","Documentation":"\n            <summary>\n            Gets or sets a callback to be invoked when an internal navigation event occurs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnBeforeInternalNavigation","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.LocationChangingContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ConfirmExternalNavigation","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets whether a browser dialog should prompt the user to either confirm or cancel\n            external navigations.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ConfirmExternalNavigation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavigationLock","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Common.TypeNameIdentifier":"NavigationLock","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1721809178,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavLink","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActiveClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Common.TypeNameIdentifier":"NavLink"}},{"HashCode":-1182313963,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavLink","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.NavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActiveClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Common.TypeNameIdentifier":"NavLink","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-740824051,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"NavLink"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Common.TypeNameIdentifier":"NavLink","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1903137250,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Routing.NavLink"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Common.TypeNameIdentifier":"NavLink","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1246271716,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeadContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"HeadContent"}},{"HashCode":-996503938,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.HeadContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"HeadContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1608831631,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HeadContent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"HeadContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1521540536,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.HeadContent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"HeadContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-628269752,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadOutlet","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeadOutlet"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadOutlet","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"HeadOutlet"}},{"HashCode":1646289862,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadOutlet","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.HeadOutlet"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadOutlet","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"HeadOutlet","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2129736942,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.PageTitle","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PageTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"PageTitle"}},{"HashCode":943926180,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.PageTitle","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.PageTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"PageTitle","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1161311501,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PageTitle"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"PageTitle","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2073571043,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.PageTitle"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"PageTitle","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1113147290,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Captures errors thrown from its child content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ErrorContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Exception>","Documentation":"\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ErrorContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Exception>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaximumErrorCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The maximum number of errors that can be handled. If more errors are received,\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaximumErrorCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"ErrorBoundary"}},{"HashCode":719579976,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Captures errors thrown from its child content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ErrorContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Exception>","Documentation":"\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ErrorContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Exception>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaximumErrorCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The maximum number of errors that can be handled. If more errors are received,\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaximumErrorCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"ErrorBoundary","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-252057281,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ErrorBoundary"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"ErrorBoundary","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-334595117,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"ErrorBoundary","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":720802434,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorContent","ParentTag":"ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ErrorContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"ErrorBoundary","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1066138983,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorContent","ParentTag":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ErrorContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"ErrorBoundary","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-20666644,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Provides functionality for rendering a virtualized list of items.\n            </summary>\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Documentation":"\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemSize","TypeName":"System.Single","Documentation":"\n            <summary>\n            Gets the size of each item in pixels. Defaults to 50px.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSize","Common.GloballyQualifiedTypeName":"global::System.Single"}},{"Kind":"Components.Component","Name":"ItemsProvider","TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Documentation":"\n            <summary>\n            Gets or sets the function providing items to the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemsProvider","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.ICollection<TItem>","Documentation":"\n            <summary>\n            Gets or sets the fixed item source.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.ICollection<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets a value that determines how many additional items will be rendered\n            before and after the visible region. This help to reduce the frequency of rendering\n            during scrolling. However, higher values mean that more elements will be present\n            in the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OverscanCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SpacerElement","TypeName":"System.String","Documentation":"\n             <summary>\n             Gets or sets the tag name of the HTML element that will be used as the virtualization spacer.\n             One such element will be rendered before the visible items, and one more after them, using\n             an explicit \"height\" style to control the scroll range.\n            \n             The default value is \"div\". If you are placing the <see cref=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\" /> instance inside\n             an element that requires a specific child tag name, consider setting that here. For example when\n             rendering inside a \"tbody\", consider setting <see cref=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.SpacerElement\" /> to the value \"tr\".\n             </summary>\n        ","Metadata":{"Common.PropertyName":"SpacerElement","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Common.TypeNameIdentifier":"Virtualize","Components.GenericTyped":"True"}},{"HashCode":1446060996,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Provides functionality for rendering a virtualized list of items.\n            </summary>\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Documentation":"\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemSize","TypeName":"System.Single","Documentation":"\n            <summary>\n            Gets the size of each item in pixels. Defaults to 50px.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSize","Common.GloballyQualifiedTypeName":"global::System.Single"}},{"Kind":"Components.Component","Name":"ItemsProvider","TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Documentation":"\n            <summary>\n            Gets or sets the function providing items to the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemsProvider","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.ICollection<TItem>","Documentation":"\n            <summary>\n            Gets or sets the fixed item source.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.ICollection<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets a value that determines how many additional items will be rendered\n            before and after the visible region. This help to reduce the frequency of rendering\n            during scrolling. However, higher values mean that more elements will be present\n            in the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OverscanCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SpacerElement","TypeName":"System.String","Documentation":"\n             <summary>\n             Gets or sets the tag name of the HTML element that will be used as the virtualization spacer.\n             One such element will be rendered before the visible items, and one more after them, using\n             an explicit \"height\" style to control the scroll range.\n            \n             The default value is \"div\". If you are placing the <see cref=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\" /> instance inside\n             an element that requires a specific child tag name, consider setting that here. For example when\n             rendering inside a \"tbody\", consider setting <see cref=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.SpacerElement\" /> to the value \"tr\".\n             </summary>\n        ","Metadata":{"Common.PropertyName":"SpacerElement","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Common.TypeNameIdentifier":"Virtualize","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":938082833,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Common.TypeNameIdentifier":"Virtualize","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1328007459,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Common.TypeNameIdentifier":"Virtualize","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1573826946,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemContent","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Common.TypeNameIdentifier":"Virtualize","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2071423432,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemContent","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Common.TypeNameIdentifier":"Virtualize","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1159723309,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Placeholder","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Placeholder' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Common.TypeNameIdentifier":"Virtualize","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1105006503,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Placeholder","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Placeholder' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Common.TypeNameIdentifier":"Virtualize","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":210060651,"Kind":"Components.Component","Name":"BlazorBootstrap.Accordion","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Accordion"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AlwaysOpen","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AlwaysOpen","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Flush","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Flush","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.AccordionEventArgs>","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.AccordionEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHiding","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.AccordionEventArgs>","Metadata":{"Common.PropertyName":"OnHiding","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.AccordionEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShowing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.AccordionEventArgs>","Metadata":{"Common.PropertyName":"OnShowing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.AccordionEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.AccordionEventArgs>","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.AccordionEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Accordion","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Accordion"}},{"HashCode":-2099163542,"Kind":"Components.Component","Name":"BlazorBootstrap.Accordion","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Accordion"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AlwaysOpen","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AlwaysOpen","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Flush","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Flush","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.AccordionEventArgs>","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.AccordionEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHiding","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.AccordionEventArgs>","Metadata":{"Common.PropertyName":"OnHiding","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.AccordionEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShowing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.AccordionEventArgs>","Metadata":{"Common.PropertyName":"OnShowing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.AccordionEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.AccordionEventArgs>","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.AccordionEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Accordion","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Accordion","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1405568478,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Accordion.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Accordion"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Accordion.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Accordion","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1948033145,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Accordion.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.Accordion"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Accordion.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Accordion","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":64987309,"Kind":"Components.Component","Name":"BlazorBootstrap.AccordionItem","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccordionItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsActive","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsActive","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TitleTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"TitleTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.AccordionItem","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"AccordionItem"}},{"HashCode":564911318,"Kind":"Components.Component","Name":"BlazorBootstrap.AccordionItem","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.AccordionItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsActive","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsActive","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TitleTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"TitleTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.AccordionItem","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"AccordionItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-463544100,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.AccordionItem.Content","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"AccordionItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.AccordionItem.Content","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"AccordionItem","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1616028190,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.AccordionItem.Content","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"BlazorBootstrap.AccordionItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.AccordionItem.Content","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"AccordionItem","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1553112562,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.AccordionItem.TitleTemplate","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TitleTemplate","ParentTag":"AccordionItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.AccordionItem.TitleTemplate","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"AccordionItem","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1219797299,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.AccordionItem.TitleTemplate","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TitleTemplate","ParentTag":"BlazorBootstrap.AccordionItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.AccordionItem.TitleTemplate","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"AccordionItem","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1515373893,"Kind":"Components.Component","Name":"BlazorBootstrap.Alert","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Alert"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.AlertColor","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.AlertColor"}},{"Kind":"Components.Component","Name":"Dismissable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Dismissable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnClose","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClosed","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnClosed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Alert","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Alert"}},{"HashCode":1348586251,"Kind":"Components.Component","Name":"BlazorBootstrap.Alert","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Alert"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.AlertColor","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.AlertColor"}},{"Kind":"Components.Component","Name":"Dismissable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Dismissable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnClose","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnClosed","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnClosed","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Alert","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Alert","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1027464397,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Alert.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Alert"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Alert.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Alert","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":196391340,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Alert.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.Alert"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Alert.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Alert","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2041490291,"Kind":"Components.Component","Name":"BlazorBootstrap.Badge","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Badge"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.BadgeColor","IsEnum":true,"IsEditorRequired":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.BadgeColor"}},{"Kind":"Components.Component","Name":"IndicatorType","TypeName":"BlazorBootstrap.BadgeIndicatorType","IsEnum":true,"Metadata":{"Common.PropertyName":"IndicatorType","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.BadgeIndicatorType"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"BlazorBootstrap.BadgePlacement","IsEnum":true,"Metadata":{"Common.PropertyName":"Placement","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.BadgePlacement"}},{"Kind":"Components.Component","Name":"Position","TypeName":"BlazorBootstrap.Position","IsEnum":true,"Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Position"}},{"Kind":"Components.Component","Name":"VisuallyHiddenText","TypeName":"System.String","Metadata":{"Common.PropertyName":"VisuallyHiddenText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Badge","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Badge"}},{"HashCode":-1729970425,"Kind":"Components.Component","Name":"BlazorBootstrap.Badge","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Badge"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.BadgeColor","IsEnum":true,"IsEditorRequired":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.BadgeColor"}},{"Kind":"Components.Component","Name":"IndicatorType","TypeName":"BlazorBootstrap.BadgeIndicatorType","IsEnum":true,"Metadata":{"Common.PropertyName":"IndicatorType","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.BadgeIndicatorType"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"BlazorBootstrap.BadgePlacement","IsEnum":true,"Metadata":{"Common.PropertyName":"Placement","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.BadgePlacement"}},{"Kind":"Components.Component","Name":"Position","TypeName":"BlazorBootstrap.Position","IsEnum":true,"Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Position"}},{"Kind":"Components.Component","Name":"VisuallyHiddenText","TypeName":"System.String","Metadata":{"Common.PropertyName":"VisuallyHiddenText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Badge","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Badge","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1393131267,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Badge.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Badge"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Badge.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Badge","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-220652463,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Badge.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.Badge"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Badge.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Badge","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2105409532,"Kind":"Components.Component","Name":"BlazorBootstrap.Breadcrumb","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Breadcrumb"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<BlazorBootstrap.BreadcrumbItem>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::BlazorBootstrap.BreadcrumbItem>"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Breadcrumb","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Breadcrumb"}},{"HashCode":14699281,"Kind":"Components.Component","Name":"BlazorBootstrap.Breadcrumb","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Breadcrumb"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.List<BlazorBootstrap.BreadcrumbItem>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::BlazorBootstrap.BreadcrumbItem>"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Breadcrumb","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Breadcrumb","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":937650132,"Kind":"Components.Component","Name":"BlazorBootstrap.Button","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Button"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Active","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Active","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Block","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Block","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.ButtonColor","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ButtonColor"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Loading","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Loading","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LoadingTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"LoadingTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LoadingText","TypeName":"System.String","Metadata":{"Common.PropertyName":"LoadingText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Outline","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Outline","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Position","TypeName":"BlazorBootstrap.Position","IsEnum":true,"Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Position"}},{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.Size","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Size"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Target","TypeName":"BlazorBootstrap.Target","IsEnum":true,"Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Target"}},{"Kind":"Components.Component","Name":"To","TypeName":"System.String","Metadata":{"Common.PropertyName":"To","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipColor","TypeName":"BlazorBootstrap.TooltipColor","IsEnum":true,"Metadata":{"Common.PropertyName":"TooltipColor","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.TooltipColor"}},{"Kind":"Components.Component","Name":"TooltipPlacement","TypeName":"BlazorBootstrap.TooltipPlacement","IsEnum":true,"Metadata":{"Common.PropertyName":"TooltipPlacement","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.TooltipPlacement"}},{"Kind":"Components.Component","Name":"TooltipTitle","TypeName":"System.String","Metadata":{"Common.PropertyName":"TooltipTitle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Type","TypeName":"BlazorBootstrap.ButtonType","IsEnum":true,"Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ButtonType"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Button","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Button"}},{"HashCode":-2135068395,"Kind":"Components.Component","Name":"BlazorBootstrap.Button","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Button"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Active","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Active","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Block","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Block","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.ButtonColor","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ButtonColor"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Loading","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Loading","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LoadingTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"LoadingTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LoadingText","TypeName":"System.String","Metadata":{"Common.PropertyName":"LoadingText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Outline","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Outline","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Position","TypeName":"BlazorBootstrap.Position","IsEnum":true,"Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Position"}},{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.Size","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Size"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Target","TypeName":"BlazorBootstrap.Target","IsEnum":true,"Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Target"}},{"Kind":"Components.Component","Name":"To","TypeName":"System.String","Metadata":{"Common.PropertyName":"To","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipColor","TypeName":"BlazorBootstrap.TooltipColor","IsEnum":true,"Metadata":{"Common.PropertyName":"TooltipColor","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.TooltipColor"}},{"Kind":"Components.Component","Name":"TooltipPlacement","TypeName":"BlazorBootstrap.TooltipPlacement","IsEnum":true,"Metadata":{"Common.PropertyName":"TooltipPlacement","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.TooltipPlacement"}},{"Kind":"Components.Component","Name":"TooltipTitle","TypeName":"System.String","Metadata":{"Common.PropertyName":"TooltipTitle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Type","TypeName":"BlazorBootstrap.ButtonType","IsEnum":true,"Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ButtonType"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Button","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Button","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":142125313,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Button.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Button"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Button.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Button","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1202701947,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Button.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.Button"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Button.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Button","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2101195186,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Button.LoadingTemplate","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LoadingTemplate","ParentTag":"Button"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Button.LoadingTemplate","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Button","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-873509941,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Button.LoadingTemplate","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LoadingTemplate","ParentTag":"BlazorBootstrap.Button"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Button.LoadingTemplate","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Button","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":140599093,"Kind":"Components.Component","Name":"BlazorBootstrap.Callout","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Callout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Heading","TypeName":"System.String","Metadata":{"Common.PropertyName":"Heading","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Type","TypeName":"BlazorBootstrap.CalloutType","IsEnum":true,"Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.CalloutType"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Callout","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Callout"}},{"HashCode":-296916694,"Kind":"Components.Component","Name":"BlazorBootstrap.Callout","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Callout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Heading","TypeName":"System.String","Metadata":{"Common.PropertyName":"Heading","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Type","TypeName":"BlazorBootstrap.CalloutType","IsEnum":true,"Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.CalloutType"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Callout","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Callout","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1480168083,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Callout.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Callout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Callout.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Callout","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-123033033,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Callout.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.Callout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Callout.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Callout","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2072420879,"Kind":"Components.Component","Name":"BlazorBootstrap.Card","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Card"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.CardColor","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.CardColor"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"BlazorBootstrap.Alignment","IsEnum":true,"Metadata":{"Common.PropertyName":"TextAlignment","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Alignment"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Card","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Card"}},{"HashCode":1612628088,"Kind":"Components.Component","Name":"BlazorBootstrap.Card","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Card"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.CardColor","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.CardColor"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"BlazorBootstrap.Alignment","IsEnum":true,"Metadata":{"Common.PropertyName":"TextAlignment","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Alignment"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Card","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Card","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1099678667,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Card.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Card"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Card.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Card","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1339860323,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Card.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.Card"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Card.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Card","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1841274548,"Kind":"Components.Component","Name":"BlazorBootstrap.CardBody","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CardBody"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.CardBody","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardBody"}},{"HashCode":-1588385319,"Kind":"Components.Component","Name":"BlazorBootstrap.CardBody","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.CardBody"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.CardBody","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardBody","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-319743275,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.CardBody.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CardBody"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.CardBody.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardBody","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1130423796,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.CardBody.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.CardBody"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.CardBody.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardBody","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1075917008,"Kind":"Components.Component","Name":"BlazorBootstrap.CardFooter","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CardFooter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.CardFooter","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardFooter"}},{"HashCode":1271192663,"Kind":"Components.Component","Name":"BlazorBootstrap.CardFooter","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.CardFooter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.CardFooter","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardFooter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1618863169,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.CardFooter.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CardFooter"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.CardFooter.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardFooter","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1540153272,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.CardFooter.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.CardFooter"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.CardFooter.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardFooter","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-678932325,"Kind":"Components.Component","Name":"BlazorBootstrap.CardGroup","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CardGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.CardGroup","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardGroup"}},{"HashCode":-143335646,"Kind":"Components.Component","Name":"BlazorBootstrap.CardGroup","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.CardGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.CardGroup","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardGroup","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-496231683,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.CardGroup.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CardGroup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.CardGroup.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardGroup","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1296981844,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.CardGroup.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.CardGroup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.CardGroup.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardGroup","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1174413366,"Kind":"Components.Component","Name":"BlazorBootstrap.CardHeader","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CardHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.CardColor","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.CardColor"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.CardHeader","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardHeader"}},{"HashCode":-1989814435,"Kind":"Components.Component","Name":"BlazorBootstrap.CardHeader","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.CardHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.CardColor","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.CardColor"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.CardHeader","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardHeader","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2058561186,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.CardHeader.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CardHeader"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.CardHeader.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1712373750,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.CardHeader.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.CardHeader"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.CardHeader.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1793134801,"Kind":"Components.Component","Name":"BlazorBootstrap.CardLink","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CardLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Target","TypeName":"BlazorBootstrap.Target","IsEnum":true,"Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Target"}},{"Kind":"Components.Component","Name":"To","TypeName":"System.String","Metadata":{"Common.PropertyName":"To","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.CardLink","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardLink"}},{"HashCode":-715925322,"Kind":"Components.Component","Name":"BlazorBootstrap.CardLink","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.CardLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Target","TypeName":"BlazorBootstrap.Target","IsEnum":true,"Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Target"}},{"Kind":"Components.Component","Name":"To","TypeName":"System.String","Metadata":{"Common.PropertyName":"To","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.CardLink","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardLink","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1092030939,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.CardLink.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CardLink"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.CardLink.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardLink","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":61961216,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.CardLink.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.CardLink"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.CardLink.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardLink","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1948350284,"Kind":"Components.Component","Name":"BlazorBootstrap.CardSubTitle","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CardSubTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.HeadingSize","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.HeadingSize"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.CardSubTitle","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardSubTitle"}},{"HashCode":1692708593,"Kind":"Components.Component","Name":"BlazorBootstrap.CardSubTitle","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.CardSubTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.HeadingSize","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.HeadingSize"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.CardSubTitle","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardSubTitle","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-377218553,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.CardSubTitle.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CardSubTitle"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.CardSubTitle.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardSubTitle","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2016790372,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.CardSubTitle.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.CardSubTitle"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.CardSubTitle.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardSubTitle","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1050355596,"Kind":"Components.Component","Name":"BlazorBootstrap.CardText","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CardText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.CardText","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardText"}},{"HashCode":-2054238738,"Kind":"Components.Component","Name":"BlazorBootstrap.CardText","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.CardText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.CardText","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardText","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1871756578,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.CardText.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CardText"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.CardText.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardText","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":557814923,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.CardText.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.CardText"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.CardText.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardText","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-942522118,"Kind":"Components.Component","Name":"BlazorBootstrap.CardTitle","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CardTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.HeadingSize","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.HeadingSize"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.CardTitle","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardTitle"}},{"HashCode":-679901700,"Kind":"Components.Component","Name":"BlazorBootstrap.CardTitle","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.CardTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.HeadingSize","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.HeadingSize"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.CardTitle","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardTitle","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":16972474,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.CardTitle.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CardTitle"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.CardTitle.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardTitle","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-405705699,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.CardTitle.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.CardTitle"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.CardTitle.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CardTitle","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2044980514,"Kind":"Components.Component","Name":"BlazorBootstrap.BarChart","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BarChart"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"HeightUnit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"HeightUnit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"WidthUnit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"WidthUnit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.BarChart","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"BarChart"}},{"HashCode":-1794601493,"Kind":"Components.Component","Name":"BlazorBootstrap.BarChart","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.BarChart"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"HeightUnit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"HeightUnit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"WidthUnit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"WidthUnit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.BarChart","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"BarChart","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1863025862,"Kind":"Components.Component","Name":"BlazorBootstrap.BlazorBootstrapChart","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrapChart"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"HeightUnit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"HeightUnit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"WidthUnit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"WidthUnit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.BlazorBootstrapChart","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"BlazorBootstrapChart"}},{"HashCode":-1752711623,"Kind":"Components.Component","Name":"BlazorBootstrap.BlazorBootstrapChart","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.BlazorBootstrapChart"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"HeightUnit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"HeightUnit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"WidthUnit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"WidthUnit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.BlazorBootstrapChart","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"BlazorBootstrapChart","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2041930743,"Kind":"Components.Component","Name":"BlazorBootstrap.DoughnutChart","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DoughnutChart"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"HeightUnit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"HeightUnit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"WidthUnit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"WidthUnit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.DoughnutChart","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DoughnutChart"}},{"HashCode":1270586551,"Kind":"Components.Component","Name":"BlazorBootstrap.DoughnutChart","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.DoughnutChart"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"HeightUnit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"HeightUnit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"WidthUnit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"WidthUnit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.DoughnutChart","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DoughnutChart","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-238182428,"Kind":"Components.Component","Name":"BlazorBootstrap.LineChart","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LineChart"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"HeightUnit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"HeightUnit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"WidthUnit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"WidthUnit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.LineChart","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"LineChart"}},{"HashCode":-1632873142,"Kind":"Components.Component","Name":"BlazorBootstrap.LineChart","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.LineChart"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"HeightUnit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"HeightUnit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"WidthUnit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"WidthUnit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.LineChart","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"LineChart","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1870902067,"Kind":"Components.Component","Name":"BlazorBootstrap.PieChart","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PieChart"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"HeightUnit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"HeightUnit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"WidthUnit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"WidthUnit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.PieChart","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"PieChart"}},{"HashCode":2141268571,"Kind":"Components.Component","Name":"BlazorBootstrap.PieChart","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.PieChart"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"HeightUnit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"HeightUnit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"WidthUnit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"WidthUnit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.PieChart","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"PieChart","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2095853851,"Kind":"Components.Component","Name":"BlazorBootstrap.Collapse","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Collapse"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Horizontal","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Horizontal","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHiding","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnHiding","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShowing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnShowing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Parent","TypeName":"System.Object","Metadata":{"Common.PropertyName":"Parent","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Toggle","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Toggle","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Collapse","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Collapse"}},{"HashCode":360822646,"Kind":"Components.Component","Name":"BlazorBootstrap.Collapse","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Collapse"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Horizontal","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Horizontal","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHiding","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnHiding","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShowing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnShowing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Parent","TypeName":"System.Object","Metadata":{"Common.PropertyName":"Parent","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Toggle","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Toggle","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Collapse","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Collapse","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":987467139,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Collapse.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Collapse"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Collapse.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Collapse","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-837096741,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Collapse.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.Collapse"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Collapse.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Collapse","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1526966326,"Kind":"Components.Component","Name":"BlazorBootstrap.ConfirmDialog","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ConfirmDialog"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.ConfirmDialog","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"ConfirmDialog"}},{"HashCode":1995072232,"Kind":"Components.Component","Name":"BlazorBootstrap.ConfirmDialog","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.ConfirmDialog"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.ConfirmDialog","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"ConfirmDialog","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":114108456,"Kind":"Components.Component","Name":"BlazorBootstrap.Dropdown","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Dropdown"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AutoClose","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AutoClose","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AutoCloseBehavior","TypeName":"BlazorBootstrap.DropdownAutoCloseBehavior","IsEnum":true,"Metadata":{"Common.PropertyName":"AutoCloseBehavior","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.DropdownAutoCloseBehavior"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"BlazorBootstrap.DropdownDirection","IsEnum":true,"Metadata":{"Common.PropertyName":"Direction","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.DropdownDirection"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHiding","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnHiding","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShowing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnShowing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.Size","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Size"}},{"Kind":"Components.Component","Name":"Split","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Split","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Dropdown","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Dropdown"}},{"HashCode":21891359,"Kind":"Components.Component","Name":"BlazorBootstrap.Dropdown","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Dropdown"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AutoClose","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AutoClose","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AutoCloseBehavior","TypeName":"BlazorBootstrap.DropdownAutoCloseBehavior","IsEnum":true,"Metadata":{"Common.PropertyName":"AutoCloseBehavior","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.DropdownAutoCloseBehavior"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"BlazorBootstrap.DropdownDirection","IsEnum":true,"Metadata":{"Common.PropertyName":"Direction","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.DropdownDirection"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHiding","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnHiding","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShowing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnShowing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.Size","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Size"}},{"Kind":"Components.Component","Name":"Split","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Split","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Dropdown","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Dropdown","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1021993859,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Dropdown.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Dropdown"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Dropdown.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Dropdown","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":962751829,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Dropdown.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.Dropdown"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Dropdown.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Dropdown","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-402704023,"Kind":"Components.Component","Name":"BlazorBootstrap.DropdownActionButton","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DropdownActionButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.ButtonColor","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ButtonColor"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.DropdownActionButton","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownActionButton"}},{"HashCode":537283186,"Kind":"Components.Component","Name":"BlazorBootstrap.DropdownActionButton","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.DropdownActionButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.ButtonColor","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ButtonColor"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.DropdownActionButton","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownActionButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-466279958,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.DropdownActionButton.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"DropdownActionButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.DropdownActionButton.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownActionButton","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2051736915,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.DropdownActionButton.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.DropdownActionButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.DropdownActionButton.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownActionButton","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1476344833,"Kind":"Components.Component","Name":"BlazorBootstrap.DropdownDivider","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DropdownDivider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.DropdownDivider","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownDivider"}},{"HashCode":50481001,"Kind":"Components.Component","Name":"BlazorBootstrap.DropdownDivider","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.DropdownDivider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.DropdownDivider","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownDivider","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2142696925,"Kind":"Components.Component","Name":"BlazorBootstrap.DropdownHeader","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DropdownHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.DropdownHeader","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownHeader"}},{"HashCode":379395293,"Kind":"Components.Component","Name":"BlazorBootstrap.DropdownHeader","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.DropdownHeader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.DropdownHeader","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownHeader","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-623076635,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.DropdownHeader.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"DropdownHeader"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.DropdownHeader.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2107938332,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.DropdownHeader.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.DropdownHeader"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.DropdownHeader.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1565905963,"Kind":"Components.Component","Name":"BlazorBootstrap.DropdownItem","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DropdownItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Active","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Active","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Target","TypeName":"BlazorBootstrap.Target","IsEnum":true,"Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Target"}},{"Kind":"Components.Component","Name":"To","TypeName":"System.String","Metadata":{"Common.PropertyName":"To","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Type","TypeName":"BlazorBootstrap.ButtonType","IsEnum":true,"Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ButtonType"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.DropdownItem","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownItem"}},{"HashCode":1705709323,"Kind":"Components.Component","Name":"BlazorBootstrap.DropdownItem","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.DropdownItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Active","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Active","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Target","TypeName":"BlazorBootstrap.Target","IsEnum":true,"Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Target"}},{"Kind":"Components.Component","Name":"To","TypeName":"System.String","Metadata":{"Common.PropertyName":"To","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Type","TypeName":"BlazorBootstrap.ButtonType","IsEnum":true,"Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ButtonType"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.DropdownItem","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2074553822,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.DropdownItem.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"DropdownItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.DropdownItem.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownItem","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1694475610,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.DropdownItem.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.DropdownItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.DropdownItem.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownItem","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":898964027,"Kind":"Components.Component","Name":"BlazorBootstrap.DropdownMenu","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DropdownMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Position","TypeName":"BlazorBootstrap.DropdownMenuPosition","IsEnum":true,"Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.DropdownMenuPosition"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.DropdownMenu","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownMenu"}},{"HashCode":1711616965,"Kind":"Components.Component","Name":"BlazorBootstrap.DropdownMenu","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.DropdownMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Position","TypeName":"BlazorBootstrap.DropdownMenuPosition","IsEnum":true,"Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.DropdownMenuPosition"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.DropdownMenu","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownMenu","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1113507667,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.DropdownMenu.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"DropdownMenu"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.DropdownMenu.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownMenu","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-25673536,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.DropdownMenu.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.DropdownMenu"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.DropdownMenu.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownMenu","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2040216197,"Kind":"Components.Component","Name":"BlazorBootstrap.DropdownToggleButton","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DropdownToggleButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.ButtonColor","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ButtonColor"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.DropdownToggleButton","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownToggleButton"}},{"HashCode":-1327165113,"Kind":"Components.Component","Name":"BlazorBootstrap.DropdownToggleButton","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.DropdownToggleButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.ButtonColor","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ButtonColor"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.DropdownToggleButton","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownToggleButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1382035868,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.DropdownToggleButton.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"DropdownToggleButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.DropdownToggleButton.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownToggleButton","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1620163950,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.DropdownToggleButton.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.DropdownToggleButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.DropdownToggleButton.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DropdownToggleButton","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":629586432,"Kind":"Components.Component","Name":"BlazorBootstrap.AutoComplete<TItem>","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AutoComplete"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the BlazorBootstrap.AutoComplete<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"DataProvider","TypeName":"BlazorBootstrap.AutoCompleteDataProviderDelegate<TItem>","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"DataProvider","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.AutoCompleteDataProviderDelegate<TItem>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EmptyText","TypeName":"System.String","Metadata":{"Common.PropertyName":"EmptyText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LoadingText","TypeName":"System.String","Metadata":{"Common.PropertyName":"LoadingText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Metadata":{"Common.PropertyName":"OnChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"PropertyName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.AutoCompleteSize","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.AutoCompleteSize"}},{"Kind":"Components.Component","Name":"StringComparison","TypeName":"System.StringComparison","IsEnum":true,"Metadata":{"Common.PropertyName":"StringComparison","Common.GloballyQualifiedTypeName":"global::System.StringComparison"}},{"Kind":"Components.Component","Name":"StringFilterOperator","TypeName":"BlazorBootstrap.StringFilterOperator","IsEnum":true,"Metadata":{"Common.PropertyName":"StringFilterOperator","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.StringFilterOperator"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.AutoComplete<TItem>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"AutoComplete","Components.GenericTyped":"True"}},{"HashCode":-931153947,"Kind":"Components.Component","Name":"BlazorBootstrap.AutoComplete<TItem>","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.AutoComplete"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the BlazorBootstrap.AutoComplete<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"DataProvider","TypeName":"BlazorBootstrap.AutoCompleteDataProviderDelegate<TItem>","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"DataProvider","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.AutoCompleteDataProviderDelegate<TItem>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EmptyText","TypeName":"System.String","Metadata":{"Common.PropertyName":"EmptyText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LoadingText","TypeName":"System.String","Metadata":{"Common.PropertyName":"LoadingText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TItem>","Metadata":{"Common.PropertyName":"OnChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TItem>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"PropertyName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.AutoCompleteSize","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.AutoCompleteSize"}},{"Kind":"Components.Component","Name":"StringComparison","TypeName":"System.StringComparison","IsEnum":true,"Metadata":{"Common.PropertyName":"StringComparison","Common.GloballyQualifiedTypeName":"global::System.StringComparison"}},{"Kind":"Components.Component","Name":"StringFilterOperator","TypeName":"BlazorBootstrap.StringFilterOperator","IsEnum":true,"Metadata":{"Common.PropertyName":"StringFilterOperator","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.StringFilterOperator"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.AutoComplete<TItem>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"AutoComplete","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1039448004,"Kind":"Components.Component","Name":"BlazorBootstrap.CurrencyInput<TValue>","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CurrencyInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the BlazorBootstrap.CurrencyInput<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AllowNegativeNumbers","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllowNegativeNumbers","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AutoComplete","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CurrencySign","TypeName":"BlazorBootstrap.CurrencySign","IsEnum":true,"Metadata":{"Common.PropertyName":"CurrencySign","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.CurrencySign"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EnableMinMax","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnableMinMax","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HideCurrencySymbol","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"HideCurrencySymbol","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Locale","TypeName":"System.String","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"Locale","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Max","TypeName":"TValue","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"MaximumFractionDigits","TypeName":"System.Byte?","Metadata":{"Common.PropertyName":"MaximumFractionDigits","Common.GloballyQualifiedTypeName":"global::System.Byte?"}},{"Kind":"Components.Component","Name":"Min","TypeName":"TValue","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"MinimumFractionDigits","TypeName":"System.Byte?","Metadata":{"Common.PropertyName":"MinimumFractionDigits","Common.GloballyQualifiedTypeName":"global::System.Byte?"}},{"Kind":"Components.Component","Name":"MinimumIntegerDigits","TypeName":"System.Byte","Metadata":{"Common.PropertyName":"MinimumIntegerDigits","Common.GloballyQualifiedTypeName":"global::System.Byte"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"BlazorBootstrap.Alignment","IsEnum":true,"Metadata":{"Common.PropertyName":"TextAlignment","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Alignment"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.CurrencyInput<TValue>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CurrencyInput","Components.GenericTyped":"True"}},{"HashCode":-193120146,"Kind":"Components.Component","Name":"BlazorBootstrap.CurrencyInput<TValue>","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.CurrencyInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the BlazorBootstrap.CurrencyInput<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AllowNegativeNumbers","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllowNegativeNumbers","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AutoComplete","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"CurrencySign","TypeName":"BlazorBootstrap.CurrencySign","IsEnum":true,"Metadata":{"Common.PropertyName":"CurrencySign","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.CurrencySign"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EnableMinMax","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnableMinMax","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"HideCurrencySymbol","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"HideCurrencySymbol","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Locale","TypeName":"System.String","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"Locale","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Max","TypeName":"TValue","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"MaximumFractionDigits","TypeName":"System.Byte?","Metadata":{"Common.PropertyName":"MaximumFractionDigits","Common.GloballyQualifiedTypeName":"global::System.Byte?"}},{"Kind":"Components.Component","Name":"Min","TypeName":"TValue","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"MinimumFractionDigits","TypeName":"System.Byte?","Metadata":{"Common.PropertyName":"MinimumFractionDigits","Common.GloballyQualifiedTypeName":"global::System.Byte?"}},{"Kind":"Components.Component","Name":"MinimumIntegerDigits","TypeName":"System.Byte","Metadata":{"Common.PropertyName":"MinimumIntegerDigits","Common.GloballyQualifiedTypeName":"global::System.Byte"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"BlazorBootstrap.Alignment","IsEnum":true,"Metadata":{"Common.PropertyName":"TextAlignment","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Alignment"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.CurrencyInput<TValue>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CurrencyInput","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1667560923,"Kind":"Components.Component","Name":"BlazorBootstrap.DateInput<TValue>","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DateInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the BlazorBootstrap.DateInput<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AutoComplete","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EnableMinMax","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnableMinMax","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Max","TypeName":"TValue","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Min","TypeName":"TValue","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.DateInput<TValue>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DateInput","Components.GenericTyped":"True"}},{"HashCode":642736703,"Kind":"Components.Component","Name":"BlazorBootstrap.DateInput<TValue>","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.DateInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the BlazorBootstrap.DateInput<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AutoComplete","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EnableMinMax","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnableMinMax","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Max","TypeName":"TValue","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Min","TypeName":"TValue","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.DateInput<TValue>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DateInput","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-987657607,"Kind":"Components.Component","Name":"BlazorBootstrap.NumberInput<TValue>","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NumberInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the BlazorBootstrap.NumberInput<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AllowNegativeNumbers","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllowNegativeNumbers","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AutoComplete","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EnableMinMax","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnableMinMax","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Max","TypeName":"TValue","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Min","TypeName":"TValue","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Step","TypeName":"System.Double?","Metadata":{"Common.PropertyName":"Step","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"BlazorBootstrap.Alignment","IsEnum":true,"Metadata":{"Common.PropertyName":"TextAlignment","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Alignment"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.NumberInput<TValue>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"NumberInput","Components.GenericTyped":"True"}},{"HashCode":-1585634749,"Kind":"Components.Component","Name":"BlazorBootstrap.NumberInput<TValue>","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.NumberInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the BlazorBootstrap.NumberInput<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AllowNegativeNumbers","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllowNegativeNumbers","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AutoComplete","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EnableMinMax","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnableMinMax","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Max","TypeName":"TValue","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Min","TypeName":"TValue","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Step","TypeName":"System.Double?","Metadata":{"Common.PropertyName":"Step","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"BlazorBootstrap.Alignment","IsEnum":true,"Metadata":{"Common.PropertyName":"TextAlignment","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Alignment"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.NumberInput<TValue>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"NumberInput","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":464479779,"Kind":"Components.Component","Name":"BlazorBootstrap.Switch","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Switch"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Reverse","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Reverse","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Switch","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Switch"}},{"HashCode":1975364052,"Kind":"Components.Component","Name":"BlazorBootstrap.Switch","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Switch"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Reverse","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Reverse","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Switch","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Switch","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-671461835,"Kind":"Components.Component","Name":"BlazorBootstrap.TimeInput<TValue>","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TimeInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the BlazorBootstrap.TimeInput<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AutoComplete","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EnableMinMax","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnableMinMax","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Max","TypeName":"TValue","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Min","TypeName":"TValue","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.TimeInput<TValue>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"TimeInput","Components.GenericTyped":"True"}},{"HashCode":1314592088,"Kind":"Components.Component","Name":"BlazorBootstrap.TimeInput<TValue>","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.TimeInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the BlazorBootstrap.TimeInput<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AutoComplete","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"EnableMinMax","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnableMinMax","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Max","TypeName":"TValue","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Min","TypeName":"TValue","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.TimeInput<TValue>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"TimeInput","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":656738856,"Kind":"Components.Component","Name":"BlazorBootstrap.Grid<TItem>","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Grid"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the BlazorBootstrap.Grid<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllowFiltering","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AllowPaging","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllowPaging","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AllowRowClick","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllowRowClick","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AllowSelection","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllowSelection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AllowSorting","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllowSorting","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AutoHidePaging","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AutoHidePaging","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Metadata":{"Common.PropertyName":"Data","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DataProvider","TypeName":"BlazorBootstrap.GridDataProviderDelegate<TItem>","Metadata":{"Common.PropertyName":"DataProvider","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.GridDataProviderDelegate<TItem>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisableAllRowsSelection","TypeName":"System.Func<System.Collections.Generic.IEnumerable<TItem>, System.Boolean>","Metadata":{"Common.PropertyName":"DisableAllRowsSelection","Common.GloballyQualifiedTypeName":"global::System.Func<global::System.Collections.Generic.IEnumerable<TItem>, global::System.Boolean>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisableRowSelection","TypeName":"System.Func<TItem, System.Boolean>","Metadata":{"Common.PropertyName":"DisableRowSelection","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.Boolean>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"EmptyText","TypeName":"System.String","Metadata":{"Common.PropertyName":"EmptyText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FiltersRowCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"FiltersRowCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FiltersTranslationProvider","TypeName":"BlazorBootstrap.GridFiltersTranslationDelegate","Metadata":{"Common.PropertyName":"FiltersTranslationProvider","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.GridFiltersTranslationDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"FixedHeader","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"FixedHeader","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"GridSettingsChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.GridSettings>","Metadata":{"Common.PropertyName":"GridSettingsChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.GridSettings>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"HeaderRowCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderRowCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Single","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Single"}},{"Kind":"Components.Component","Name":"ItemsPerPageText","TypeName":"System.String","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"ItemsPerPageText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnRowClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.GridRowEventArgs<TItem>>","Metadata":{"Common.PropertyName":"OnRowClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.GridRowEventArgs<TItem>>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnRowDoubleClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.GridRowEventArgs<TItem>>","Metadata":{"Common.PropertyName":"OnRowDoubleClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.GridRowEventArgs<TItem>>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"PageSize","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"PageSize","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"PageSizeSelectorItems","TypeName":"System.Int32[]","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"PageSizeSelectorItems","Common.GloballyQualifiedTypeName":"global::System.Int32[]"}},{"Kind":"Components.Component","Name":"PageSizeSelectorVisible","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"PageSizeSelectorVisible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PaginationAlignment","TypeName":"BlazorBootstrap.Alignment","IsEnum":true,"Metadata":{"Common.PropertyName":"PaginationAlignment","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Alignment"}},{"Kind":"Components.Component","Name":"PaginationItemsTextFormat","TypeName":"System.String","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"PaginationItemsTextFormat","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Responsive","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Responsive","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RowClass","TypeName":"System.Func<TItem, System.String>","Metadata":{"Common.PropertyName":"RowClass","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedItemsChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.HashSet<TItem>>","Metadata":{"Common.PropertyName":"SelectedItemsChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.HashSet<TItem>>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"BlazorBootstrap.GridSelectionMode","IsEnum":true,"Metadata":{"Common.PropertyName":"SelectionMode","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.GridSelectionMode"}},{"Kind":"Components.Component","Name":"SettingsProvider","TypeName":"BlazorBootstrap.GridSettingsProviderDelegate","Metadata":{"Common.PropertyName":"SettingsProvider","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.GridSettingsProviderDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"THeadCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"THeadCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Unit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"Unit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Grid<TItem>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Grid","Components.GenericTyped":"True"}},{"HashCode":-1425976677,"Kind":"Components.Component","Name":"BlazorBootstrap.Grid<TItem>","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Grid"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the BlazorBootstrap.Grid<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllowFiltering","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AllowPaging","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllowPaging","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AllowRowClick","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllowRowClick","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AllowSelection","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllowSelection","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AllowSorting","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AllowSorting","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AutoHidePaging","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AutoHidePaging","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Collections.Generic.IEnumerable<TItem>","Metadata":{"Common.PropertyName":"Data","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DataProvider","TypeName":"BlazorBootstrap.GridDataProviderDelegate<TItem>","Metadata":{"Common.PropertyName":"DataProvider","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.GridDataProviderDelegate<TItem>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisableAllRowsSelection","TypeName":"System.Func<System.Collections.Generic.IEnumerable<TItem>, System.Boolean>","Metadata":{"Common.PropertyName":"DisableAllRowsSelection","Common.GloballyQualifiedTypeName":"global::System.Func<global::System.Collections.Generic.IEnumerable<TItem>, global::System.Boolean>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisableRowSelection","TypeName":"System.Func<TItem, System.Boolean>","Metadata":{"Common.PropertyName":"DisableRowSelection","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.Boolean>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"EmptyText","TypeName":"System.String","Metadata":{"Common.PropertyName":"EmptyText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FiltersRowCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"FiltersRowCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FiltersTranslationProvider","TypeName":"BlazorBootstrap.GridFiltersTranslationDelegate","Metadata":{"Common.PropertyName":"FiltersTranslationProvider","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.GridFiltersTranslationDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"FixedHeader","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"FixedHeader","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"GridSettingsChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.GridSettings>","Metadata":{"Common.PropertyName":"GridSettingsChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.GridSettings>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"HeaderRowCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderRowCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Single","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Single"}},{"Kind":"Components.Component","Name":"ItemsPerPageText","TypeName":"System.String","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"ItemsPerPageText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnRowClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.GridRowEventArgs<TItem>>","Metadata":{"Common.PropertyName":"OnRowClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.GridRowEventArgs<TItem>>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OnRowDoubleClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.GridRowEventArgs<TItem>>","Metadata":{"Common.PropertyName":"OnRowDoubleClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.GridRowEventArgs<TItem>>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"PageSize","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"PageSize","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"PageSizeSelectorItems","TypeName":"System.Int32[]","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"PageSizeSelectorItems","Common.GloballyQualifiedTypeName":"global::System.Int32[]"}},{"Kind":"Components.Component","Name":"PageSizeSelectorVisible","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"PageSizeSelectorVisible","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PaginationAlignment","TypeName":"BlazorBootstrap.Alignment","IsEnum":true,"Metadata":{"Common.PropertyName":"PaginationAlignment","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Alignment"}},{"Kind":"Components.Component","Name":"PaginationItemsTextFormat","TypeName":"System.String","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"PaginationItemsTextFormat","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Responsive","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Responsive","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"RowClass","TypeName":"System.Func<TItem, System.String>","Metadata":{"Common.PropertyName":"RowClass","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectedItemsChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.HashSet<TItem>>","Metadata":{"Common.PropertyName":"SelectedItemsChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.HashSet<TItem>>","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"BlazorBootstrap.GridSelectionMode","IsEnum":true,"Metadata":{"Common.PropertyName":"SelectionMode","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.GridSelectionMode"}},{"Kind":"Components.Component","Name":"SettingsProvider","TypeName":"BlazorBootstrap.GridSettingsProviderDelegate","Metadata":{"Common.PropertyName":"SettingsProvider","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.GridSettingsProviderDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"THeadCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"THeadCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Unit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"Unit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Grid<TItem>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Grid","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-811530174,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Grid<TItem>.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Grid"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Grid<TItem>.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Grid","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":724406855,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Grid<TItem>.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.Grid"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Grid<TItem>.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Grid","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1421446751,"Kind":"Components.Component","Name":"BlazorBootstrap.GridColumn<TItem>","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the BlazorBootstrap.GridColumn<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ColumnClass","TypeName":"System.Func<TItem, System.String>","Metadata":{"Common.PropertyName":"ColumnClass","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Filterable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Filterable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FilterOperator","TypeName":"BlazorBootstrap.FilterOperator","IsEnum":true,"Metadata":{"Common.PropertyName":"FilterOperator","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.FilterOperator"}},{"Kind":"Components.Component","Name":"FilterTextboxWidth","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"FilterTextboxWidth","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"FilterValue","TypeName":"System.String","Metadata":{"Common.PropertyName":"FilterValue","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Freeze","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Freeze","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FreezeDirection","TypeName":"BlazorBootstrap.FreezeDirection","IsEnum":true,"Metadata":{"Common.PropertyName":"FreezeDirection","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.FreezeDirection"}},{"Kind":"Components.Component","Name":"FreezeLeftPosition","TypeName":"System.Double","Metadata":{"Common.PropertyName":"FreezeLeftPosition","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"FreezeRightPosition","TypeName":"System.Double","Metadata":{"Common.PropertyName":"FreezeRightPosition","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"HeaderContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"HeaderContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderTextAlignment","TypeName":"BlazorBootstrap.Alignment","IsEnum":true,"Metadata":{"Common.PropertyName":"HeaderTextAlignment","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Alignment"}},{"Kind":"Components.Component","Name":"IsDefaultSortColumn","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsDefaultSortColumn","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","Metadata":{"Common.PropertyName":"PropertyName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Sortable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Sortable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SortDirection","TypeName":"BlazorBootstrap.SortDirection","IsEnum":true,"Metadata":{"Common.PropertyName":"SortDirection","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.SortDirection"}},{"Kind":"Components.Component","Name":"SortKeySelector","TypeName":"System.Linq.Expressions.Expression<System.Func<TItem, System.IComparable>>","Metadata":{"Common.PropertyName":"SortKeySelector","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TItem, global::System.IComparable>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SortString","TypeName":"System.String","Metadata":{"Common.PropertyName":"SortString","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"StringComparison","TypeName":"System.StringComparison","IsEnum":true,"Metadata":{"Common.PropertyName":"StringComparison","Common.GloballyQualifiedTypeName":"global::System.StringComparison"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"BlazorBootstrap.Alignment","IsEnum":true,"Metadata":{"Common.PropertyName":"TextAlignment","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Alignment"}},{"Kind":"Components.Component","Name":"TextNoWrap","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"TextNoWrap","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.GridColumn<TItem>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"GridColumn","Components.GenericTyped":"True"}},{"HashCode":1506656310,"Kind":"Components.Component","Name":"BlazorBootstrap.GridColumn<TItem>","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.GridColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the BlazorBootstrap.GridColumn<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ColumnClass","TypeName":"System.Func<TItem, System.String>","Metadata":{"Common.PropertyName":"ColumnClass","Common.GloballyQualifiedTypeName":"global::System.Func<TItem, global::System.String>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Filterable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Filterable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FilterOperator","TypeName":"BlazorBootstrap.FilterOperator","IsEnum":true,"Metadata":{"Common.PropertyName":"FilterOperator","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.FilterOperator"}},{"Kind":"Components.Component","Name":"FilterTextboxWidth","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"FilterTextboxWidth","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"FilterValue","TypeName":"System.String","Metadata":{"Common.PropertyName":"FilterValue","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Freeze","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Freeze","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FreezeDirection","TypeName":"BlazorBootstrap.FreezeDirection","IsEnum":true,"Metadata":{"Common.PropertyName":"FreezeDirection","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.FreezeDirection"}},{"Kind":"Components.Component","Name":"FreezeLeftPosition","TypeName":"System.Double","Metadata":{"Common.PropertyName":"FreezeLeftPosition","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"FreezeRightPosition","TypeName":"System.Double","Metadata":{"Common.PropertyName":"FreezeRightPosition","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"HeaderContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"HeaderContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderTextAlignment","TypeName":"BlazorBootstrap.Alignment","IsEnum":true,"Metadata":{"Common.PropertyName":"HeaderTextAlignment","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Alignment"}},{"Kind":"Components.Component","Name":"IsDefaultSortColumn","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsDefaultSortColumn","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","Metadata":{"Common.PropertyName":"PropertyName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Sortable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Sortable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"SortDirection","TypeName":"BlazorBootstrap.SortDirection","IsEnum":true,"Metadata":{"Common.PropertyName":"SortDirection","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.SortDirection"}},{"Kind":"Components.Component","Name":"SortKeySelector","TypeName":"System.Linq.Expressions.Expression<System.Func<TItem, System.IComparable>>","Metadata":{"Common.PropertyName":"SortKeySelector","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TItem, global::System.IComparable>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"SortString","TypeName":"System.String","Metadata":{"Common.PropertyName":"SortString","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"StringComparison","TypeName":"System.StringComparison","IsEnum":true,"Metadata":{"Common.PropertyName":"StringComparison","Common.GloballyQualifiedTypeName":"global::System.StringComparison"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"BlazorBootstrap.Alignment","IsEnum":true,"Metadata":{"Common.PropertyName":"TextAlignment","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Alignment"}},{"Kind":"Components.Component","Name":"TextNoWrap","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"TextNoWrap","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.GridColumn<TItem>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"GridColumn","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":135653515,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.GridColumn<TItem>.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"GridColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.GridColumn<TItem>.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"GridColumn","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1041438247,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.GridColumn<TItem>.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.GridColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.GridColumn<TItem>.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"GridColumn","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1839841981,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.GridColumn<TItem>.HeaderContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderContent","ParentTag":"GridColumn"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.GridColumn<TItem>.HeaderContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"GridColumn","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":684845376,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.GridColumn<TItem>.HeaderContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderContent","ParentTag":"BlazorBootstrap.GridColumn"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.GridColumn<TItem>.HeaderContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"GridColumn","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1554470266,"Kind":"Components.Component","Name":"BlazorBootstrap.GridColumnFilter","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridColumnFilter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FilterOperator","TypeName":"BlazorBootstrap.FilterOperator","IsEnum":true,"Metadata":{"Common.PropertyName":"FilterOperator","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.FilterOperator"}},{"Kind":"Components.Component","Name":"FiltersTranslationProvider","TypeName":"BlazorBootstrap.GridFiltersTranslationDelegate","Metadata":{"Common.PropertyName":"FiltersTranslationProvider","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.GridFiltersTranslationDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"FilterValue","TypeName":"System.String","Metadata":{"Common.PropertyName":"FilterValue","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FilterWidth","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"FilterWidth","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"FixedHeader","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"FixedHeader","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"GridColumnFilterChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.FilterEventArgs>","Metadata":{"Common.PropertyName":"GridColumnFilterChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.FilterEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PropertyTypeName","TypeName":"System.String","Metadata":{"Common.PropertyName":"PropertyTypeName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Unit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"Unit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.GridColumnFilter","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"GridColumnFilter"}},{"HashCode":-1808767128,"Kind":"Components.Component","Name":"BlazorBootstrap.GridColumnFilter","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.GridColumnFilter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FilterOperator","TypeName":"BlazorBootstrap.FilterOperator","IsEnum":true,"Metadata":{"Common.PropertyName":"FilterOperator","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.FilterOperator"}},{"Kind":"Components.Component","Name":"FiltersTranslationProvider","TypeName":"BlazorBootstrap.GridFiltersTranslationDelegate","Metadata":{"Common.PropertyName":"FiltersTranslationProvider","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.GridFiltersTranslationDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"FilterValue","TypeName":"System.String","Metadata":{"Common.PropertyName":"FilterValue","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FilterWidth","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"FilterWidth","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"FixedHeader","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"FixedHeader","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"GridColumnFilterChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.FilterEventArgs>","Metadata":{"Common.PropertyName":"GridColumnFilterChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.FilterEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PropertyTypeName","TypeName":"System.String","Metadata":{"Common.PropertyName":"PropertyTypeName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Unit","TypeName":"BlazorBootstrap.Unit","IsEnum":true,"Metadata":{"Common.PropertyName":"Unit","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Unit"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.GridColumnFilter","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"GridColumnFilter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1136945444,"Kind":"Components.Component","Name":"BlazorBootstrap.Icon","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Icon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.IconColor","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconColor"}},{"Kind":"Components.Component","Name":"CustomIconName","TypeName":"System.String","Metadata":{"Common.PropertyName":"CustomIconName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Name","TypeName":"BlazorBootstrap.IconName","IsEnum":true,"Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconName"}},{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.IconSize","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconSize"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Icon","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Icon"}},{"HashCode":-1884817094,"Kind":"Components.Component","Name":"BlazorBootstrap.Icon","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Icon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.IconColor","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconColor"}},{"Kind":"Components.Component","Name":"CustomIconName","TypeName":"System.String","Metadata":{"Common.PropertyName":"CustomIconName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Name","TypeName":"BlazorBootstrap.IconName","IsEnum":true,"Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconName"}},{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.IconSize","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconSize"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Icon","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Icon","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1421358162,"Kind":"Components.Component","Name":"BlazorBootstrap.Modal","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Modal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"BodyCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"BodyCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BodyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"BodyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CloseIconColor","TypeName":"BlazorBootstrap.IconColor","IsEnum":true,"Metadata":{"Common.PropertyName":"CloseIconColor","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconColor"}},{"Kind":"Components.Component","Name":"CloseOnEscape","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"CloseOnEscape","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DialogCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"DialogCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"FooterCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"FooterTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Fullscreen","TypeName":"BlazorBootstrap.ModalFullscreen","IsEnum":true,"Metadata":{"Common.PropertyName":"Fullscreen","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ModalFullscreen"}},{"Kind":"Components.Component","Name":"HeaderCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsScrollable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsScrollable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsServiceModal","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsServiceModal","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsVerticallyCentered","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsVerticallyCentered","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Message","TypeName":"System.String","Metadata":{"Common.PropertyName":"Message","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ModalType","TypeName":"BlazorBootstrap.ModalType","IsEnum":true,"Metadata":{"Common.PropertyName":"ModalType","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ModalType"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHidePrevented","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnHidePrevented","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHiding","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnHiding","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShowing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnShowing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.ModalSize","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ModalSize"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"TabIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"UseStaticBackdrop","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"UseStaticBackdrop","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Modal","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Modal"}},{"HashCode":126513536,"Kind":"Components.Component","Name":"BlazorBootstrap.Modal","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Modal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"BodyCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"BodyCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BodyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"BodyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CloseIconColor","TypeName":"BlazorBootstrap.IconColor","IsEnum":true,"Metadata":{"Common.PropertyName":"CloseIconColor","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconColor"}},{"Kind":"Components.Component","Name":"CloseOnEscape","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"CloseOnEscape","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"DialogCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"DialogCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"FooterCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"FooterTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Fullscreen","TypeName":"BlazorBootstrap.ModalFullscreen","IsEnum":true,"Metadata":{"Common.PropertyName":"Fullscreen","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ModalFullscreen"}},{"Kind":"Components.Component","Name":"HeaderCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsScrollable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsScrollable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsServiceModal","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsServiceModal","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsVerticallyCentered","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsVerticallyCentered","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Message","TypeName":"System.String","Metadata":{"Common.PropertyName":"Message","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ModalType","TypeName":"BlazorBootstrap.ModalType","IsEnum":true,"Metadata":{"Common.PropertyName":"ModalType","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ModalType"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHidePrevented","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnHidePrevented","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHiding","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnHiding","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShowing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnShowing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.ModalSize","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ModalSize"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"TabIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"UseStaticBackdrop","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"UseStaticBackdrop","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Modal","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Modal","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":813191798,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Modal.BodyTemplate","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BodyTemplate","ParentTag":"Modal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Modal.BodyTemplate","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Modal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":468891832,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Modal.BodyTemplate","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BodyTemplate","ParentTag":"BlazorBootstrap.Modal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Modal.BodyTemplate","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Modal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":320853127,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Modal.FooterTemplate","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"Modal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Modal.FooterTemplate","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Modal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1520297344,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Modal.FooterTemplate","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"BlazorBootstrap.Modal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Modal.FooterTemplate","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Modal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1340073485,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Modal.HeaderTemplate","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Modal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Modal.HeaderTemplate","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Modal","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2003543946,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Modal.HeaderTemplate","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"BlazorBootstrap.Modal"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Modal.HeaderTemplate","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Modal","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1210459897,"Kind":"Components.Component","Name":"BlazorBootstrap.Offcanvas","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Offcanvas"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"BodyCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"BodyCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BodyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"BodyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CloseOnEscape","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"CloseOnEscape","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FooterCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"FooterCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"FooterTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsScrollable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsScrollable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHiding","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnHiding","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShowing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnShowing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"BlazorBootstrap.Placement","IsEnum":true,"Metadata":{"Common.PropertyName":"Placement","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Placement"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.OffcanvasSize","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.OffcanvasSize"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"TabIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"UseBackdrop","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"UseBackdrop","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"UseStaticBackdrop","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"UseStaticBackdrop","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Offcanvas","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Offcanvas"}},{"HashCode":-416744146,"Kind":"Components.Component","Name":"BlazorBootstrap.Offcanvas","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Offcanvas"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"BodyCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"BodyCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BodyTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"BodyTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CloseOnEscape","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"CloseOnEscape","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"FooterCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"FooterCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FooterTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"FooterTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderCssClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"HeaderCssClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"HeaderTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsScrollable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsScrollable","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHiding","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnHiding","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShowing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnShowing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"BlazorBootstrap.Placement","IsEnum":true,"Metadata":{"Common.PropertyName":"Placement","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Placement"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.OffcanvasSize","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.OffcanvasSize"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"TabIndex","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"UseBackdrop","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"UseBackdrop","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"UseStaticBackdrop","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"UseStaticBackdrop","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Offcanvas","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Offcanvas","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1357816715,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Offcanvas.BodyTemplate","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BodyTemplate","ParentTag":"Offcanvas"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Offcanvas.BodyTemplate","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Offcanvas","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2001358400,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Offcanvas.BodyTemplate","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BodyTemplate","ParentTag":"BlazorBootstrap.Offcanvas"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Offcanvas.BodyTemplate","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Offcanvas","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-745453357,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Offcanvas.FooterTemplate","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"Offcanvas"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Offcanvas.FooterTemplate","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Offcanvas","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1798795923,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Offcanvas.FooterTemplate","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FooterTemplate","ParentTag":"BlazorBootstrap.Offcanvas"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Offcanvas.FooterTemplate","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Offcanvas","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1339908841,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Offcanvas.HeaderTemplate","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"Offcanvas"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Offcanvas.HeaderTemplate","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Offcanvas","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1565672968,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Offcanvas.HeaderTemplate","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"BlazorBootstrap.Offcanvas"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Offcanvas.HeaderTemplate","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Offcanvas","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":55565942,"Kind":"Components.Component","Name":"BlazorBootstrap.Pagination","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Pagination"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActivePageNumber","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"ActivePageNumber","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Alignment","TypeName":"BlazorBootstrap.Alignment","IsEnum":true,"Metadata":{"Common.PropertyName":"Alignment","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Alignment"}},{"Kind":"Components.Component","Name":"DisplayPages","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"DisplayPages","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"FirstLinkIcon","TypeName":"BlazorBootstrap.IconName","IsEnum":true,"Metadata":{"Common.PropertyName":"FirstLinkIcon","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconName"}},{"Kind":"Components.Component","Name":"FirstLinkText","TypeName":"System.String","Metadata":{"Common.PropertyName":"FirstLinkText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LastLinkIcon","TypeName":"BlazorBootstrap.IconName","IsEnum":true,"Metadata":{"Common.PropertyName":"LastLinkIcon","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconName"}},{"Kind":"Components.Component","Name":"LastLinkText","TypeName":"System.String","Metadata":{"Common.PropertyName":"LastLinkText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NextLinkIcon","TypeName":"BlazorBootstrap.IconName","IsEnum":true,"Metadata":{"Common.PropertyName":"NextLinkIcon","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconName"}},{"Kind":"Components.Component","Name":"NextLinkText","TypeName":"System.String","Metadata":{"Common.PropertyName":"NextLinkText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PageChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Metadata":{"Common.PropertyName":"PageChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PreviousLinkIcon","TypeName":"BlazorBootstrap.IconName","IsEnum":true,"Metadata":{"Common.PropertyName":"PreviousLinkIcon","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconName"}},{"Kind":"Components.Component","Name":"PreviousLinkText","TypeName":"System.String","Metadata":{"Common.PropertyName":"PreviousLinkText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.PaginationSize","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.PaginationSize"}},{"Kind":"Components.Component","Name":"TotalPages","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"TotalPages","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Pagination","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Pagination"}},{"HashCode":-1254587871,"Kind":"Components.Component","Name":"BlazorBootstrap.Pagination","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Pagination"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActivePageNumber","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"ActivePageNumber","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Alignment","TypeName":"BlazorBootstrap.Alignment","IsEnum":true,"Metadata":{"Common.PropertyName":"Alignment","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Alignment"}},{"Kind":"Components.Component","Name":"DisplayPages","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"DisplayPages","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"FirstLinkIcon","TypeName":"BlazorBootstrap.IconName","IsEnum":true,"Metadata":{"Common.PropertyName":"FirstLinkIcon","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconName"}},{"Kind":"Components.Component","Name":"FirstLinkText","TypeName":"System.String","Metadata":{"Common.PropertyName":"FirstLinkText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LastLinkIcon","TypeName":"BlazorBootstrap.IconName","IsEnum":true,"Metadata":{"Common.PropertyName":"LastLinkIcon","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconName"}},{"Kind":"Components.Component","Name":"LastLinkText","TypeName":"System.String","Metadata":{"Common.PropertyName":"LastLinkText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"NextLinkIcon","TypeName":"BlazorBootstrap.IconName","IsEnum":true,"Metadata":{"Common.PropertyName":"NextLinkIcon","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconName"}},{"Kind":"Components.Component","Name":"NextLinkText","TypeName":"System.String","Metadata":{"Common.PropertyName":"NextLinkText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PageChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Metadata":{"Common.PropertyName":"PageChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PreviousLinkIcon","TypeName":"BlazorBootstrap.IconName","IsEnum":true,"Metadata":{"Common.PropertyName":"PreviousLinkIcon","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconName"}},{"Kind":"Components.Component","Name":"PreviousLinkText","TypeName":"System.String","Metadata":{"Common.PropertyName":"PreviousLinkText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.PaginationSize","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.PaginationSize"}},{"Kind":"Components.Component","Name":"TotalPages","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"TotalPages","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Pagination","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Pagination","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":673899890,"Kind":"Components.Component","Name":"BlazorBootstrap.PaginationItem","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PaginationItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Active","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Active","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AriaLabel","TypeName":"System.String","Metadata":{"Common.PropertyName":"AriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LinkIcon","TypeName":"BlazorBootstrap.IconName","IsEnum":true,"Metadata":{"Common.PropertyName":"LinkIcon","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconName"}},{"Kind":"Components.Component","Name":"LinkText","TypeName":"System.String","Metadata":{"Common.PropertyName":"LinkText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.PaginationItem","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"PaginationItem"}},{"HashCode":1230901583,"Kind":"Components.Component","Name":"BlazorBootstrap.PaginationItem","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.PaginationItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Active","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Active","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"AriaLabel","TypeName":"System.String","Metadata":{"Common.PropertyName":"AriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"LinkIcon","TypeName":"BlazorBootstrap.IconName","IsEnum":true,"Metadata":{"Common.PropertyName":"LinkIcon","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconName"}},{"Kind":"Components.Component","Name":"LinkText","TypeName":"System.String","Metadata":{"Common.PropertyName":"LinkText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.PaginationItem","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"PaginationItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":519105326,"Kind":"Components.Component","Name":"BlazorBootstrap.PaginationLink","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PaginationLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"LinkAriaLabel","TypeName":"System.String","Metadata":{"Common.PropertyName":"LinkAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LinkIcon","TypeName":"BlazorBootstrap.IconName","IsEnum":true,"Metadata":{"Common.PropertyName":"LinkIcon","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconName"}},{"Kind":"Components.Component","Name":"LinkText","TypeName":"System.String","Metadata":{"Common.PropertyName":"LinkText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.PaginationLink","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"PaginationLink"}},{"HashCode":-1508332265,"Kind":"Components.Component","Name":"BlazorBootstrap.PaginationLink","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.PaginationLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"LinkAriaLabel","TypeName":"System.String","Metadata":{"Common.PropertyName":"LinkAriaLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LinkIcon","TypeName":"BlazorBootstrap.IconName","IsEnum":true,"Metadata":{"Common.PropertyName":"LinkIcon","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconName"}},{"Kind":"Components.Component","Name":"LinkText","TypeName":"System.String","Metadata":{"Common.PropertyName":"LinkText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.PaginationLink","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"PaginationLink","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":278314645,"Kind":"Components.Component","Name":"BlazorBootstrap.Placeholder","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Placeholder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.PlaceholderColor","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.PlaceholderColor"}},{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.PlaceholderSize","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.PlaceholderSize"}},{"Kind":"Components.Component","Name":"Width","TypeName":"BlazorBootstrap.PlaceholderWidth","IsEnum":true,"Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.PlaceholderWidth"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Placeholder","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Placeholder"}},{"HashCode":1508849095,"Kind":"Components.Component","Name":"BlazorBootstrap.Placeholder","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Placeholder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.PlaceholderColor","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.PlaceholderColor"}},{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.PlaceholderSize","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.PlaceholderSize"}},{"Kind":"Components.Component","Name":"Width","TypeName":"BlazorBootstrap.PlaceholderWidth","IsEnum":true,"Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.PlaceholderWidth"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Placeholder","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Placeholder","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1064134298,"Kind":"Components.Component","Name":"BlazorBootstrap.PlaceholderContainer","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PlaceholderContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Animation","TypeName":"BlazorBootstrap.PlaceholderAnimation","IsEnum":true,"Metadata":{"Common.PropertyName":"Animation","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.PlaceholderAnimation"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.PlaceholderContainer","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"PlaceholderContainer"}},{"HashCode":435001069,"Kind":"Components.Component","Name":"BlazorBootstrap.PlaceholderContainer","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.PlaceholderContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Animation","TypeName":"BlazorBootstrap.PlaceholderAnimation","IsEnum":true,"Metadata":{"Common.PropertyName":"Animation","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.PlaceholderAnimation"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.PlaceholderContainer","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"PlaceholderContainer","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-654481480,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.PlaceholderContainer.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PlaceholderContainer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.PlaceholderContainer.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"PlaceholderContainer","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-311893548,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.PlaceholderContainer.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.PlaceholderContainer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.PlaceholderContainer.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"PlaceholderContainer","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1943504507,"Kind":"Components.Component","Name":"BlazorBootstrap.Preload","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Preload"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LoadingText","TypeName":"System.String","Metadata":{"Common.PropertyName":"LoadingText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Preload","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Preload"}},{"HashCode":1320298237,"Kind":"Components.Component","Name":"BlazorBootstrap.Preload","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Preload"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LoadingText","TypeName":"System.String","Metadata":{"Common.PropertyName":"LoadingText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Preload","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Preload","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1435280870,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Preload.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Preload"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Preload.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Preload","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1236964896,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Preload.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.Preload"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Preload.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Preload","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1891508383,"Kind":"Components.Component","Name":"BlazorBootstrap.Progress","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Progress"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Progress","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Progress"}},{"HashCode":-216242946,"Kind":"Components.Component","Name":"BlazorBootstrap.Progress","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Progress"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Progress","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Progress","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1243180217,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Progress.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Progress"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Progress.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Progress","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1100512406,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Progress.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.Progress"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Progress.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Progress","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":267173319,"Kind":"Components.Component","Name":"BlazorBootstrap.ProgressBar","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ProgressBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.ProgressColor","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ProgressColor"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Type","TypeName":"BlazorBootstrap.ProgressType","IsEnum":true,"Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ProgressType"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.ProgressBar","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"ProgressBar"}},{"HashCode":1227089914,"Kind":"Components.Component","Name":"BlazorBootstrap.ProgressBar","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.ProgressBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.ProgressColor","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ProgressColor"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Type","TypeName":"BlazorBootstrap.ProgressType","IsEnum":true,"Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ProgressType"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.ProgressBar","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"ProgressBar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-862956138,"Kind":"Components.Component","Name":"BlazorBootstrap.ScriptLoader","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ScriptLoader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Async","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Async","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ScriptId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ScriptId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Source","TypeName":"System.String","Metadata":{"Common.PropertyName":"Source","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.ScriptLoader","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"ScriptLoader"}},{"HashCode":2065589336,"Kind":"Components.Component","Name":"BlazorBootstrap.ScriptLoader","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.ScriptLoader"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Async","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Async","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ScriptId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ScriptId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Source","TypeName":"System.String","Metadata":{"Common.PropertyName":"Source","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Type","TypeName":"System.String","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.ScriptLoader","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"ScriptLoader","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2131361747,"Kind":"Components.Component","Name":"BlazorBootstrap.Sidebar","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Sidebar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"BadgeText","TypeName":"System.String","Metadata":{"Common.PropertyName":"BadgeText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CustomIconName","TypeName":"System.String","Metadata":{"Common.PropertyName":"CustomIconName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DataProvider","TypeName":"BlazorBootstrap.SidebarDataProviderDelegate","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"DataProvider","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.SidebarDataProviderDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"IconName","TypeName":"BlazorBootstrap.IconName","IsEnum":true,"Metadata":{"Common.PropertyName":"IconName","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconName"}},{"Kind":"Components.Component","Name":"ImageSrc","TypeName":"System.String","Metadata":{"Common.PropertyName":"ImageSrc","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Sidebar","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Sidebar"}},{"HashCode":1802169211,"Kind":"Components.Component","Name":"BlazorBootstrap.Sidebar","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Sidebar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"BadgeText","TypeName":"System.String","Metadata":{"Common.PropertyName":"BadgeText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CustomIconName","TypeName":"System.String","Metadata":{"Common.PropertyName":"CustomIconName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DataProvider","TypeName":"BlazorBootstrap.SidebarDataProviderDelegate","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"DataProvider","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.SidebarDataProviderDelegate","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"IconName","TypeName":"BlazorBootstrap.IconName","IsEnum":true,"Metadata":{"Common.PropertyName":"IconName","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconName"}},{"Kind":"Components.Component","Name":"ImageSrc","TypeName":"System.String","Metadata":{"Common.PropertyName":"ImageSrc","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Sidebar","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Sidebar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1938142606,"Kind":"Components.Component","Name":"BlazorBootstrap.SidebarItem","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SidebarItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildItems","TypeName":"System.Collections.Generic.IEnumerable<BlazorBootstrap.NavItem>","Metadata":{"Common.PropertyName":"ChildItems","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::BlazorBootstrap.NavItem>"}},{"Kind":"Components.Component","Name":"CustomIconName","TypeName":"System.String","Metadata":{"Common.PropertyName":"CustomIconName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HasChilds","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"HasChilds","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"BlazorBootstrap.IconColor","IsEnum":true,"Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconColor"}},{"Kind":"Components.Component","Name":"IconName","TypeName":"BlazorBootstrap.IconName","IsEnum":true,"Metadata":{"Common.PropertyName":"IconName","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconName"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"}},{"Kind":"Components.Component","Name":"Target","TypeName":"BlazorBootstrap.Target","IsEnum":true,"Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Target"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.SidebarItem","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"SidebarItem"}},{"HashCode":-93019946,"Kind":"Components.Component","Name":"BlazorBootstrap.SidebarItem","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.SidebarItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildItems","TypeName":"System.Collections.Generic.IEnumerable<BlazorBootstrap.NavItem>","Metadata":{"Common.PropertyName":"ChildItems","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::BlazorBootstrap.NavItem>"}},{"Kind":"Components.Component","Name":"CustomIconName","TypeName":"System.String","Metadata":{"Common.PropertyName":"CustomIconName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"HasChilds","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"HasChilds","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Metadata":{"Common.PropertyName":"Href","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IconColor","TypeName":"BlazorBootstrap.IconColor","IsEnum":true,"Metadata":{"Common.PropertyName":"IconColor","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconColor"}},{"Kind":"Components.Component","Name":"IconName","TypeName":"BlazorBootstrap.IconName","IsEnum":true,"Metadata":{"Common.PropertyName":"IconName","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.IconName"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"}},{"Kind":"Components.Component","Name":"Target","TypeName":"BlazorBootstrap.Target","IsEnum":true,"Metadata":{"Common.PropertyName":"Target","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.Target"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.SidebarItem","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"SidebarItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1591170578,"Kind":"Components.Component","Name":"BlazorBootstrap.SidebarItemGroup","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SidebarItemGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NavItems","TypeName":"System.Collections.Generic.IEnumerable<BlazorBootstrap.NavItem>","Metadata":{"Common.PropertyName":"NavItems","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::BlazorBootstrap.NavItem>"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.SidebarItemGroup","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"SidebarItemGroup"}},{"HashCode":196686732,"Kind":"Components.Component","Name":"BlazorBootstrap.SidebarItemGroup","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.SidebarItemGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NavItems","TypeName":"System.Collections.Generic.IEnumerable<BlazorBootstrap.NavItem>","Metadata":{"Common.PropertyName":"NavItems","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::BlazorBootstrap.NavItem>"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.SidebarItemGroup","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"SidebarItemGroup","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1031307004,"Kind":"Components.Component","Name":"BlazorBootstrap.Tab","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Tab"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsActive","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsActive","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TitleTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"TitleTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Tab","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Tab"}},{"HashCode":-1748766708,"Kind":"Components.Component","Name":"BlazorBootstrap.Tab","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Tab"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"Content","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"IsActive","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsActive","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TitleTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"TitleTemplate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Tab","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Tab","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":360776882,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Tab.Content","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"Tab"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Tab.Content","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Tab","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1998005040,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Tab.Content","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"BlazorBootstrap.Tab"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Tab.Content","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Tab","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1327775319,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Tab.TitleTemplate","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TitleTemplate","ParentTag":"Tab"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Tab.TitleTemplate","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Tab","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":916986630,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Tab.TitleTemplate","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TitleTemplate","ParentTag":"BlazorBootstrap.Tab"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Tab.TitleTemplate","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Tab","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2105310886,"Kind":"Components.Component","Name":"BlazorBootstrap.Tabs","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Tabs"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EnableFadeEffect","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnableFadeEffect","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"NavStyle","TypeName":"BlazorBootstrap.NavStyle","IsEnum":true,"Metadata":{"Common.PropertyName":"NavStyle","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.NavStyle"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.TabsEventArgs>","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.TabsEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHiding","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.TabsEventArgs>","Metadata":{"Common.PropertyName":"OnHiding","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.TabsEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShowing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.TabsEventArgs>","Metadata":{"Common.PropertyName":"OnShowing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.TabsEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.TabsEventArgs>","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.TabsEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Tabs","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Tabs"}},{"HashCode":178989380,"Kind":"Components.Component","Name":"BlazorBootstrap.Tabs","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Tabs"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EnableFadeEffect","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"EnableFadeEffect","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"NavStyle","TypeName":"BlazorBootstrap.NavStyle","IsEnum":true,"Metadata":{"Common.PropertyName":"NavStyle","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.NavStyle"}},{"Kind":"Components.Component","Name":"OnHidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.TabsEventArgs>","Metadata":{"Common.PropertyName":"OnHidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.TabsEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHiding","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.TabsEventArgs>","Metadata":{"Common.PropertyName":"OnHiding","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.TabsEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShowing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.TabsEventArgs>","Metadata":{"Common.PropertyName":"OnShowing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.TabsEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnShown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.TabsEventArgs>","Metadata":{"Common.PropertyName":"OnShown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.TabsEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Tabs","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Tabs","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":777249822,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Tabs.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Tabs"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Tabs.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Tabs","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1860509373,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Tabs.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.Tabs"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Tabs.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Tabs","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2083532958,"Kind":"Components.Component","Name":"BlazorBootstrap.SimpleToast","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SimpleToast"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AutoHide","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AutoHide","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"Delay","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Hidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.ToastEventArgs>","Metadata":{"Common.PropertyName":"Hidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.ToastEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Hiding","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.ToastEventArgs>","Metadata":{"Common.PropertyName":"Hiding","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.ToastEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Showing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.ToastEventArgs>","Metadata":{"Common.PropertyName":"Showing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.ToastEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Shown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.ToastEventArgs>","Metadata":{"Common.PropertyName":"Shown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.ToastEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ToastMessage","TypeName":"BlazorBootstrap.ToastMessage","Metadata":{"Common.PropertyName":"ToastMessage","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ToastMessage"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.SimpleToast","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"SimpleToast"}},{"HashCode":2094655037,"Kind":"Components.Component","Name":"BlazorBootstrap.SimpleToast","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.SimpleToast"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AutoHide","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AutoHide","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"Delay","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Hidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.ToastEventArgs>","Metadata":{"Common.PropertyName":"Hidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.ToastEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Hiding","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.ToastEventArgs>","Metadata":{"Common.PropertyName":"Hiding","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.ToastEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Showing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.ToastEventArgs>","Metadata":{"Common.PropertyName":"Showing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.ToastEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Shown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.ToastEventArgs>","Metadata":{"Common.PropertyName":"Shown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.ToastEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ToastMessage","TypeName":"BlazorBootstrap.ToastMessage","Metadata":{"Common.PropertyName":"ToastMessage","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ToastMessage"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.SimpleToast","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"SimpleToast","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1317910282,"Kind":"Components.Component","Name":"BlazorBootstrap.Toast","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Toast"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AutoHide","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AutoHide","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"Delay","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Hidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.ToastEventArgs>","Metadata":{"Common.PropertyName":"Hidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.ToastEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Hiding","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.ToastEventArgs>","Metadata":{"Common.PropertyName":"Hiding","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.ToastEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Showing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.ToastEventArgs>","Metadata":{"Common.PropertyName":"Showing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.ToastEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Shown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.ToastEventArgs>","Metadata":{"Common.PropertyName":"Shown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.ToastEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ToastMessage","TypeName":"BlazorBootstrap.ToastMessage","Metadata":{"Common.PropertyName":"ToastMessage","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ToastMessage"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Toast","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Toast"}},{"HashCode":-156293597,"Kind":"Components.Component","Name":"BlazorBootstrap.Toast","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Toast"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AutoHide","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AutoHide","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"Delay","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Hidden","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.ToastEventArgs>","Metadata":{"Common.PropertyName":"Hidden","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.ToastEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Hiding","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.ToastEventArgs>","Metadata":{"Common.PropertyName":"Hiding","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.ToastEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Showing","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.ToastEventArgs>","Metadata":{"Common.PropertyName":"Showing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.ToastEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Shown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<BlazorBootstrap.ToastEventArgs>","Metadata":{"Common.PropertyName":"Shown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorBootstrap.ToastEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ToastMessage","TypeName":"BlazorBootstrap.ToastMessage","Metadata":{"Common.PropertyName":"ToastMessage","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ToastMessage"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Toast","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Toast","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2080760526,"Kind":"Components.Component","Name":"BlazorBootstrap.Toasts","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Toasts"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AutoHide","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AutoHide","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"Delay","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Messages","TypeName":"System.Collections.Generic.List<BlazorBootstrap.ToastMessage>","Metadata":{"Common.PropertyName":"Messages","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::BlazorBootstrap.ToastMessage>"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"BlazorBootstrap.ToastsPlacement","IsEnum":true,"Metadata":{"Common.PropertyName":"Placement","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ToastsPlacement"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"StackLength","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"StackLength","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Toasts","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Toasts"}},{"HashCode":-837623266,"Kind":"Components.Component","Name":"BlazorBootstrap.Toasts","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Toasts"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AutoHide","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"AutoHide","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"Delay","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Messages","TypeName":"System.Collections.Generic.List<BlazorBootstrap.ToastMessage>","Metadata":{"Common.PropertyName":"Messages","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::BlazorBootstrap.ToastMessage>"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"BlazorBootstrap.ToastsPlacement","IsEnum":true,"Metadata":{"Common.PropertyName":"Placement","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.ToastsPlacement"}},{"Kind":"Components.Component","Name":"ShowCloseButton","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"ShowCloseButton","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"StackLength","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"StackLength","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Toasts","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Toasts","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":488162348,"Kind":"Components.Component","Name":"BlazorBootstrap.Tooltip","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Tooltip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.TooltipColor","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.TooltipColor"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"BlazorBootstrap.TooltipPlacement","IsEnum":true,"Metadata":{"Common.PropertyName":"Placement","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.TooltipPlacement"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Tooltip","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Tooltip"}},{"HashCode":-2099224164,"Kind":"Components.Component","Name":"BlazorBootstrap.Tooltip","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Tooltip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"BlazorBootstrap.TooltipColor","IsEnum":true,"Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.TooltipColor"}},{"Kind":"Components.Component","Name":"Placement","TypeName":"BlazorBootstrap.TooltipPlacement","IsEnum":true,"Metadata":{"Common.PropertyName":"Placement","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.TooltipPlacement"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","IsEditorRequired":true,"Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Tooltip","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Tooltip","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1550455640,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Tooltip.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Tooltip"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Tooltip.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Tooltip","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":295504561,"Kind":"Components.ChildContent","Name":"BlazorBootstrap.Tooltip.ChildContent","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorBootstrap.Tooltip"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorBootstrap.Tooltip.ChildContent","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Tooltip","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-234042188,"Kind":"Components.Component","Name":"BlazorBootstrap.Heading","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Heading"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.HeadingSize","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.HeadingSize"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Heading","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Heading"}},{"HashCode":752154611,"Kind":"Components.Component","Name":"BlazorBootstrap.Heading","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Heading"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Size","TypeName":"BlazorBootstrap.HeadingSize","IsEnum":true,"Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::BlazorBootstrap.HeadingSize"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ElementId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ElementId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap.Heading","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Heading","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-716727542,"Kind":"Components.Component","Name":"BlazorBootstrap._Imports","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap._Imports","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"_Imports"}},{"HashCode":790226676,"Kind":"Components.Component","Name":"BlazorBootstrap._Imports","AssemblyName":"BlazorBootstrap","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap._Imports"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorBootstrap._Imports","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"_Imports","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-412348275,"Kind":"Components.EventHandler","Name":"onfocus","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocus","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocus:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocus:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocus"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocus' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocus' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1183441731,"Kind":"Components.EventHandler","Name":"onblur","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onblur","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onblur:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onblur:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onblur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onblur"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onblur' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onblur' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1244533523,"Kind":"Components.EventHandler","Name":"onfocusin","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocusin","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusin:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusin:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocusin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocusin"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusin' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocusin' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1943172950,"Kind":"Components.EventHandler","Name":"onfocusout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocusout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocusout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocusout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocusout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1669379088,"Kind":"Components.EventHandler","Name":"onmouseover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":206835795,"Kind":"Components.EventHandler","Name":"onmouseout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":810640233,"Kind":"Components.EventHandler","Name":"onmouseleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":388130126,"Kind":"Components.EventHandler","Name":"onmouseenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1703164961,"Kind":"Components.EventHandler","Name":"onmousemove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousemove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousemove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousemove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousemove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousemove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousemove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousemove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1539717881,"Kind":"Components.EventHandler","Name":"onmousedown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousedown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousedown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousedown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousedown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousedown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousedown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousedown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":2037212429,"Kind":"Components.EventHandler","Name":"onmouseup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1076801267,"Kind":"Components.EventHandler","Name":"onclick","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onclick","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onclick:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onclick:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onclick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onclick"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onclick' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onclick' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":884794329,"Kind":"Components.EventHandler","Name":"ondblclick","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondblclick","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondblclick:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondblclick:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondblclick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondblclick"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondblclick' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondblclick' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1538615901,"Kind":"Components.EventHandler","Name":"onwheel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onwheel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwheel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwheel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onwheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":"Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onwheel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwheel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onwheel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.WheelEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-383152099,"Kind":"Components.EventHandler","Name":"onmousewheel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousewheel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousewheel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousewheel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousewheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":"Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousewheel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousewheel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousewheel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.WheelEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":583382718,"Kind":"Components.EventHandler","Name":"oncontextmenu","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncontextmenu","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncontextmenu:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncontextmenu:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncontextmenu","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncontextmenu"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncontextmenu' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncontextmenu' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1496118296,"Kind":"Components.EventHandler","Name":"ondrag","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondrag","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrag:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrag:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondrag","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondrag"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrag' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondrag' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1892667192,"Kind":"Components.EventHandler","Name":"ondragend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-695808398,"Kind":"Components.EventHandler","Name":"ondragenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":881656464,"Kind":"Components.EventHandler","Name":"ondragleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1675311030,"Kind":"Components.EventHandler","Name":"ondragover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1441981659,"Kind":"Components.EventHandler","Name":"ondragstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1321031139,"Kind":"Components.EventHandler","Name":"ondrop","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondrop","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrop:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrop:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondrop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondrop"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrop' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondrop' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":797422111,"Kind":"Components.EventHandler","Name":"onkeydown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeydown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeydown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeydown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeydown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeydown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeydown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeydown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-765211634,"Kind":"Components.EventHandler","Name":"onkeyup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeyup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeyup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeyup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeyup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeyup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeyup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeyup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1685080129,"Kind":"Components.EventHandler","Name":"onkeypress","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeypress","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeypress:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeypress:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeypress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeypress"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeypress' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeypress' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":700369429,"Kind":"Components.EventHandler","Name":"onchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.ChangeEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-144114499,"Kind":"Components.EventHandler","Name":"oninput","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oninput","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninput:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninput:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oninput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oninput"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninput' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oninput' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.ChangeEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-6567171,"Kind":"Components.EventHandler","Name":"oninvalid","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oninvalid","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninvalid:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninvalid:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oninvalid","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oninvalid"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninvalid' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oninvalid' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1160189933,"Kind":"Components.EventHandler","Name":"onreset","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onreset","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreset:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreset:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onreset","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onreset"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreset' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onreset' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-253871031,"Kind":"Components.EventHandler","Name":"onselect","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselect","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselect:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselect:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselect"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselect' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselect' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1693382503,"Kind":"Components.EventHandler","Name":"onselectstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselectstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselectstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselectstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselectstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1399289399,"Kind":"Components.EventHandler","Name":"onselectionchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselectionchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectionchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectionchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselectionchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselectionchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectionchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselectionchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1257688159,"Kind":"Components.EventHandler","Name":"onsubmit","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onsubmit","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsubmit:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsubmit:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onsubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onsubmit"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsubmit' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onsubmit' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":526616602,"Kind":"Components.EventHandler","Name":"onbeforecopy","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforecopy","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecopy:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecopy:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforecopy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforecopy"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecopy' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforecopy' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-704514247,"Kind":"Components.EventHandler","Name":"onbeforecut","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforecut","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecut:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecut:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforecut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforecut"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecut' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforecut' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1301262964,"Kind":"Components.EventHandler","Name":"onbeforepaste","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforepaste","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforepaste:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforepaste:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforepaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforepaste"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforepaste' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforepaste' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-943806315,"Kind":"Components.EventHandler","Name":"oncopy","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncopy","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncopy:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncopy:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncopy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncopy"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncopy' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncopy' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1024736527,"Kind":"Components.EventHandler","Name":"oncut","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncut","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncut:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncut:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncut"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncut' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncut' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1564030866,"Kind":"Components.EventHandler","Name":"onpaste","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpaste","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpaste:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpaste:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpaste"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpaste' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpaste' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-245678027,"Kind":"Components.EventHandler","Name":"ontouchcancel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchcancel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchcancel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchcancel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchcancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchcancel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchcancel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchcancel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1303133076,"Kind":"Components.EventHandler","Name":"ontouchend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1167672914,"Kind":"Components.EventHandler","Name":"ontouchmove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchmove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchmove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchmove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchmove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchmove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchmove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchmove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1716506156,"Kind":"Components.EventHandler","Name":"ontouchstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1776231308,"Kind":"Components.EventHandler","Name":"ontouchenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-760395158,"Kind":"Components.EventHandler","Name":"ontouchleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":448925539,"Kind":"Components.EventHandler","Name":"ongotpointercapture","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ongotpointercapture","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ongotpointercapture"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ongotpointercapture' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ongotpointercapture' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1828352982,"Kind":"Components.EventHandler","Name":"onlostpointercapture","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onlostpointercapture","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onlostpointercapture"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onlostpointercapture' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onlostpointercapture' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-824984604,"Kind":"Components.EventHandler","Name":"onpointercancel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointercancel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointercancel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointercancel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointercancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointercancel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointercancel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointercancel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":512689634,"Kind":"Components.EventHandler","Name":"onpointerdown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerdown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerdown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerdown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerdown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerdown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerdown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerdown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-131639322,"Kind":"Components.EventHandler","Name":"onpointerenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-2081055617,"Kind":"Components.EventHandler","Name":"onpointerleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":671343776,"Kind":"Components.EventHandler","Name":"onpointermove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointermove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointermove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointermove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointermove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointermove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointermove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointermove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-906399437,"Kind":"Components.EventHandler","Name":"onpointerout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1673358071,"Kind":"Components.EventHandler","Name":"onpointerover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1883012605,"Kind":"Components.EventHandler","Name":"onpointerup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-445196629,"Kind":"Components.EventHandler","Name":"oncanplay","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncanplay","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplay:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplay:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncanplay","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncanplay"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplay' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncanplay' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1072288228,"Kind":"Components.EventHandler","Name":"oncanplaythrough","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncanplaythrough","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncanplaythrough"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplaythrough' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncanplaythrough' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":429038913,"Kind":"Components.EventHandler","Name":"oncuechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncuechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncuechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncuechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncuechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncuechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncuechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncuechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-857605877,"Kind":"Components.EventHandler","Name":"ondurationchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondurationchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondurationchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondurationchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondurationchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondurationchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondurationchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondurationchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1023041156,"Kind":"Components.EventHandler","Name":"onemptied","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onemptied","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onemptied:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onemptied:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onemptied","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onemptied"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onemptied' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onemptied' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-2113325282,"Kind":"Components.EventHandler","Name":"onpause","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpause","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpause:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpause:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpause","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpause"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpause' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpause' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1171829661,"Kind":"Components.EventHandler","Name":"onplay","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onplay","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplay:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplay:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onplay","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onplay"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplay' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onplay' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1924423103,"Kind":"Components.EventHandler","Name":"onplaying","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onplaying","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplaying:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplaying:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onplaying","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onplaying"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplaying' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onplaying' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":251218392,"Kind":"Components.EventHandler","Name":"onratechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onratechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onratechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onratechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onratechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onratechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onratechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onratechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1200360301,"Kind":"Components.EventHandler","Name":"onseeked","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onseeked","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeked:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeked:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onseeked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onseeked"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeked' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onseeked' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":870409781,"Kind":"Components.EventHandler","Name":"onseeking","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onseeking","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeking:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeking:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onseeking","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onseeking"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeking' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onseeking' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":2005397906,"Kind":"Components.EventHandler","Name":"onstalled","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onstalled","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstalled:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstalled:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onstalled","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onstalled"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstalled' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onstalled' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":148340652,"Kind":"Components.EventHandler","Name":"onstop","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onstop","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstop:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstop:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onstop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onstop"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstop' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onstop' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":17598829,"Kind":"Components.EventHandler","Name":"onsuspend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onsuspend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsuspend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsuspend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onsuspend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onsuspend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsuspend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onsuspend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1960382636,"Kind":"Components.EventHandler","Name":"ontimeupdate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontimeupdate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeupdate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeupdate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontimeupdate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontimeupdate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeupdate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontimeupdate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-901598092,"Kind":"Components.EventHandler","Name":"onvolumechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onvolumechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onvolumechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onvolumechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onvolumechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onvolumechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onvolumechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onvolumechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1685471538,"Kind":"Components.EventHandler","Name":"onwaiting","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onwaiting","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwaiting:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwaiting:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onwaiting","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onwaiting"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwaiting' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onwaiting' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-623329157,"Kind":"Components.EventHandler","Name":"onloadstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-516077056,"Kind":"Components.EventHandler","Name":"ontimeout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontimeout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontimeout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontimeout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontimeout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":861748868,"Kind":"Components.EventHandler","Name":"onabort","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onabort","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onabort:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onabort:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onabort","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onabort"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onabort' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onabort' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1292834145,"Kind":"Components.EventHandler","Name":"onload","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onload","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onload:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onload:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onload","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onload"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onload' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onload' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-491267811,"Kind":"Components.EventHandler","Name":"onloadend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1274141778,"Kind":"Components.EventHandler","Name":"onprogress","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onprogress","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onprogress:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onprogress:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onprogress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onprogress"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onprogress' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onprogress' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1470710021,"Kind":"Components.EventHandler","Name":"onerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs>","Documentation":"Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ErrorEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":2097203272,"Kind":"Components.EventHandler","Name":"onactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1860614855,"Kind":"Components.EventHandler","Name":"onbeforeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-944834360,"Kind":"Components.EventHandler","Name":"onbeforedeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforedeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforedeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforedeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforedeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":985382823,"Kind":"Components.EventHandler","Name":"ondeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1227747450,"Kind":"Components.EventHandler","Name":"onended","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onended","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onended:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onended:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onended","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onended"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onended' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onended' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1608024556,"Kind":"Components.EventHandler","Name":"onfullscreenchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfullscreenchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfullscreenchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfullscreenchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1492855282,"Kind":"Components.EventHandler","Name":"onfullscreenerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfullscreenerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfullscreenerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfullscreenerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":561974861,"Kind":"Components.EventHandler","Name":"onloadeddata","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadeddata","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadeddata:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadeddata:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadeddata","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadeddata"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadeddata' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadeddata' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":143882370,"Kind":"Components.EventHandler","Name":"onloadedmetadata","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadedmetadata","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadedmetadata"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadedmetadata' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadedmetadata' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":807609890,"Kind":"Components.EventHandler","Name":"onpointerlockchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerlockchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerlockchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerlockchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":322499480,"Kind":"Components.EventHandler","Name":"onpointerlockerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerlockerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerlockerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerlockerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1310773309,"Kind":"Components.EventHandler","Name":"onreadystatechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onreadystatechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreadystatechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreadystatechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onreadystatechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onreadystatechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreadystatechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onreadystatechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1337217167,"Kind":"Components.EventHandler","Name":"onscroll","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onscroll","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onscroll:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onscroll:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onscroll","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onscroll"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onscroll' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onscroll' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1918318624,"Kind":"Components.EventHandler","Name":"ontoggle","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontoggle","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontoggle:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontoggle:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontoggle","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontoggle"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontoggle' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontoggle' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-666102522,"Kind":"Components.Splat","Name":"Attributes","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Merges a collection of attributes into the current element or component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@attributes","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Splat","Name":"@attributes","TypeName":"System.Object","Documentation":"Merges a collection of attributes into the current element or component.","Metadata":{"Common.PropertyName":"Attributes","Common.DirectiveAttribute":"True"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Splat","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Attributes"}},{"HashCode":-145164111,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;a&gt; elements.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"a","Attributes":[{"Name":"asp-action"}]},{"TagName":"a","Attributes":[{"Name":"asp-controller"}]},{"TagName":"a","Attributes":[{"Name":"asp-area"}]},{"TagName":"a","Attributes":[{"Name":"asp-page"}]},{"TagName":"a","Attributes":[{"Name":"asp-page-handler"}]},{"TagName":"a","Attributes":[{"Name":"asp-fragment"}]},{"TagName":"a","Attributes":[{"Name":"asp-host"}]},{"TagName":"a","Attributes":[{"Name":"asp-protocol"}]},{"TagName":"a","Attributes":[{"Name":"asp-route"}]},{"TagName":"a","Attributes":[{"Name":"asp-all-route-data"}]},{"TagName":"a","Attributes":[{"Name":"asp-route-","NameComparison":1}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-action","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the action method.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Action"}},{"Kind":"ITagHelper","Name":"asp-controller","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the controller.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Controller"}},{"Kind":"ITagHelper","Name":"asp-area","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the area.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Area"}},{"Kind":"ITagHelper","Name":"asp-page","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the page.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\n            is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Page"}},{"Kind":"ITagHelper","Name":"asp-page-handler","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the page handler.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\n            is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"PageHandler"}},{"Kind":"ITagHelper","Name":"asp-protocol","TypeName":"System.String","Documentation":"\n            <summary>\n            The protocol for the URL, such as \"http\" or \"https\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Protocol"}},{"Kind":"ITagHelper","Name":"asp-host","TypeName":"System.String","Documentation":"\n            <summary>\n            The host name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Host"}},{"Kind":"ITagHelper","Name":"asp-fragment","TypeName":"System.String","Documentation":"\n            <summary>\n            The URL fragment name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Fragment"}},{"Kind":"ITagHelper","Name":"asp-route","TypeName":"System.String","Documentation":"\n            <summary>\n            Name of the route.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if one of <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Area\" />\n            or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"ITagHelper","Name":"asp-all-route-data","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","IndexerNamePrefix":"asp-route-","IndexerTypeName":"System.String","Documentation":"\n            <summary>\n            Additional parameters for the route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteValues"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Common.TypeNameIdentifier":"AnchorTagHelper"}},{"HashCode":-2017601555,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;cache&gt; elements.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"cache"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"priority","TypeName":"Microsoft.Extensions.Caching.Memory.CacheItemPriority?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.Extensions.Caching.Memory.CacheItemPriority\" /> policy for the cache entry.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Priority"}},{"Kind":"ITagHelper","Name":"vary-by","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryBy"}},{"Kind":"ITagHelper","Name":"vary-by-header","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByHeader"}},{"Kind":"ITagHelper","Name":"vary-by-query","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByQuery"}},{"Kind":"ITagHelper","Name":"vary-by-route","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByRoute"}},{"Kind":"ITagHelper","Name":"vary-by-cookie","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByCookie"}},{"Kind":"ITagHelper","Name":"vary-by-user","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByUser"}},{"Kind":"ITagHelper","Name":"vary-by-culture","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\n            <para>\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\n            </para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByCulture"}},{"Kind":"ITagHelper","Name":"expires-on","TypeName":"System.DateTimeOffset?","Documentation":"\n            <summary>\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpiresOn"}},{"Kind":"ITagHelper","Name":"expires-after","TypeName":"System.TimeSpan?","Documentation":"\n            <summary>\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpiresAfter"}},{"Kind":"ITagHelper","Name":"expires-sliding","TypeName":"System.TimeSpan?","Documentation":"\n            <summary>\n            Gets or sets the duration from last access that the cache entry should be evicted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpiresSliding"}},{"Kind":"ITagHelper","Name":"enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value which determines if the tag helper is enabled or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Common.TypeNameIdentifier":"CacheTagHelper"}},{"HashCode":-1000842291,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            A <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> that renders a Razor component.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"component","TagStructure":2,"Attributes":[{"Name":"type"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"params","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","IndexerNamePrefix":"param-","IndexerTypeName":"System.Object","Documentation":"\n            <summary>\n            Gets or sets values for component parameters.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Parameters"}},{"Kind":"ITagHelper","Name":"type","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the component type. This value is required.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ComponentType"}},{"Kind":"ITagHelper","Name":"render-mode","TypeName":"Microsoft.AspNetCore.Mvc.Rendering.RenderMode","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.RenderMode\" />\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RenderMode"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Common.TypeNameIdentifier":"ComponentTagHelper"}},{"HashCode":4232840,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;distributed-cache&gt; elements.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"distributed-cache","Attributes":[{"Name":"name"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a unique name to discriminate cached entries.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"ITagHelper","Name":"vary-by","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryBy"}},{"Kind":"ITagHelper","Name":"vary-by-header","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByHeader"}},{"Kind":"ITagHelper","Name":"vary-by-query","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByQuery"}},{"Kind":"ITagHelper","Name":"vary-by-route","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByRoute"}},{"Kind":"ITagHelper","Name":"vary-by-cookie","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByCookie"}},{"Kind":"ITagHelper","Name":"vary-by-user","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByUser"}},{"Kind":"ITagHelper","Name":"vary-by-culture","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\n            <para>\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\n            </para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByCulture"}},{"Kind":"ITagHelper","Name":"expires-on","TypeName":"System.DateTimeOffset?","Documentation":"\n            <summary>\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpiresOn"}},{"Kind":"ITagHelper","Name":"expires-after","TypeName":"System.TimeSpan?","Documentation":"\n            <summary>\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpiresAfter"}},{"Kind":"ITagHelper","Name":"expires-sliding","TypeName":"System.TimeSpan?","Documentation":"\n            <summary>\n            Gets or sets the duration from last access that the cache entry should be evicted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpiresSliding"}},{"Kind":"ITagHelper","Name":"enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value which determines if the tag helper is enabled or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Common.TypeNameIdentifier":"DistributedCacheTagHelper"}},{"HashCode":841944332,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;environment&gt; elements that conditionally renders\n            content based on the current value of <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            If the environment is not listed in the specified <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Names\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Include\" />,\n            or if it is in <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" />, the content will not be rendered.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"environment"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"names","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of environment names in which the content should be rendered.\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\n            </summary>\n            <remarks>\n            The specified environment names are compared case insensitively to the current value of\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Names"}},{"Kind":"ITagHelper","Name":"include","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of environment names in which the content should be rendered.\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\n            </summary>\n            <remarks>\n            The specified environment names are compared case insensitively to the current value of\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Include"}},{"Kind":"ITagHelper","Name":"exclude","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of environment names in which the content will not be rendered.\n            </summary>\n            <remarks>\n            The specified environment names are compared case insensitively to the current value of\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Exclude"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Common.TypeNameIdentifier":"EnvironmentTagHelper"}},{"HashCode":-1374845942,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;button&gt; elements and &lt;input&gt; elements with\n            their <c>type</c> attribute set to <c>image</c> or <c>submit</c>.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"button","Attributes":[{"Name":"asp-action"}]},{"TagName":"button","Attributes":[{"Name":"asp-controller"}]},{"TagName":"button","Attributes":[{"Name":"asp-area"}]},{"TagName":"button","Attributes":[{"Name":"asp-page"}]},{"TagName":"button","Attributes":[{"Name":"asp-page-handler"}]},{"TagName":"button","Attributes":[{"Name":"asp-fragment"}]},{"TagName":"button","Attributes":[{"Name":"asp-route"}]},{"TagName":"button","Attributes":[{"Name":"asp-all-route-data"}]},{"TagName":"button","Attributes":[{"Name":"asp-route-","NameComparison":1}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-action"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-controller"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-area"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-page"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-page-handler"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-fragment"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-route"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-all-route-data"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-route-","NameComparison":1}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-action"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-controller"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-area"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-page"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-page-handler"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-fragment"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-route"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-all-route-data"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-route-","NameComparison":1}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-action","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the action method.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Action"}},{"Kind":"ITagHelper","Name":"asp-controller","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the controller.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Controller"}},{"Kind":"ITagHelper","Name":"asp-area","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the area.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Area"}},{"Kind":"ITagHelper","Name":"asp-page","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Page"}},{"Kind":"ITagHelper","Name":"asp-page-handler","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the page handler.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageHandler"}},{"Kind":"ITagHelper","Name":"asp-fragment","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the URL fragment.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Fragment"}},{"Kind":"ITagHelper","Name":"asp-route","TypeName":"System.String","Documentation":"\n            <summary>\n            Name of the route.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Controller\" /> is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"ITagHelper","Name":"asp-all-route-data","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","IndexerNamePrefix":"asp-route-","IndexerTypeName":"System.String","Documentation":"\n            <summary>\n            Additional parameters for the route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteValues"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Common.TypeNameIdentifier":"FormActionTagHelper"}},{"HashCode":-127896823,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;form&gt; elements.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"form"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-action","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the action method.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Action"}},{"Kind":"ITagHelper","Name":"asp-controller","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the controller.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Controller"}},{"Kind":"ITagHelper","Name":"asp-area","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the area.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Area"}},{"Kind":"ITagHelper","Name":"asp-page","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Page"}},{"Kind":"ITagHelper","Name":"asp-page-handler","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the page handler.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageHandler"}},{"Kind":"ITagHelper","Name":"asp-antiforgery","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Whether the antiforgery token should be generated.\n            </summary>\n            <value>Defaults to <c>false</c> if user provides an <c>action</c> attribute\n            or if the <c>method</c> is <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Get\" />; <c>true</c> otherwise.</value>\n        ","Metadata":{"Common.PropertyName":"Antiforgery"}},{"Kind":"ITagHelper","Name":"asp-fragment","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the URL fragment.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Fragment"}},{"Kind":"ITagHelper","Name":"asp-route","TypeName":"System.String","Documentation":"\n            <summary>\n            Name of the route.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Controller\" /> is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"ITagHelper","Name":"asp-all-route-data","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","IndexerNamePrefix":"asp-route-","IndexerTypeName":"System.String","Documentation":"\n            <summary>\n            Additional parameters for the route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteValues"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Common.TypeNameIdentifier":"FormTagHelper"}},{"HashCode":-1290579374,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;img&gt; elements that supports file versioning.\n            </summary>\n            <remarks>\n            The tag helper won't process for cases with just the 'src' attribute.\n            </remarks>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"img","TagStructure":2,"Attributes":[{"Name":"asp-append-version"},{"Name":"src"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"src","TypeName":"System.String","Documentation":"\n            <summary>\n            Source of the image.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Src"}},{"Kind":"ITagHelper","Name":"asp-append-version","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Value indicating if file version should be appended to the src urls.\n            </summary>\n            <remarks>\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"AppendVersion"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Common.TypeNameIdentifier":"ImageTagHelper"}},{"HashCode":300777857,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;input&gt; elements with an <c>asp-for</c> attribute.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"asp-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"asp-format","TypeName":"System.String","Documentation":"\n            <summary>\n            The format string (see <see href=\"https://msdn.microsoft.com/en-us/library/txafckwd.aspx\" />) used to format the\n            <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> result. Sets the generated \"value\" attribute to that formatted string.\n            </summary>\n            <remarks>\n            Not used if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is\n            <c>checkbox</c>, <c>password</c>, or <c>radio</c>. That is, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is used when calling\n            <see cref=\"M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateTextBox(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.String,System.Object)\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"ITagHelper","Name":"type","TypeName":"System.String","Documentation":"\n            <summary>\n            The type of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine the <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator\" />\n            helper to call and the default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> value. A default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is not calculated\n            if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is <c>checkbox</c>,\n            <c>hidden</c>, <c>password</c>, or <c>radio</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"InputTypeName"}},{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> is\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"ITagHelper","Name":"value","TypeName":"System.String","Documentation":"\n            <summary>\n            The value of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine the generated \"checked\" attribute\n            if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" /> is \"radio\". Must not be <c>null</c> in that case.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Common.TypeNameIdentifier":"InputTagHelper"}},{"HashCode":-555015231,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;label&gt; elements with an <c>asp-for</c> attribute.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"label","Attributes":[{"Name":"asp-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Common.TypeNameIdentifier":"LabelTagHelper"}},{"HashCode":-195469401,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;link&gt; elements that supports fallback href paths.\n            </summary>\n            <remarks>\n            The tag helper won't process for cases with just the 'href' attribute.\n            </remarks>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-href-include"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-href-exclude"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-href"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-href-include"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-href-exclude"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-test-class"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-test-property"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-test-value"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-append-version"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"href","TypeName":"System.String","Documentation":"\n            <summary>\n            Address of the linked resource.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Href"}},{"Kind":"ITagHelper","Name":"asp-href-include","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to load.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HrefInclude"}},{"Kind":"ITagHelper","Name":"asp-href-exclude","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from loading.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HrefExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-href","TypeName":"System.String","Documentation":"\n            <summary>\n            The URL of a CSS stylesheet to fallback to in the case the primary one fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackHref"}},{"Kind":"ITagHelper","Name":"asp-suppress-fallback-integrity","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SuppressFallbackIntegrity"}},{"Kind":"ITagHelper","Name":"asp-append-version","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Value indicating if file version should be appended to the href urls.\n            </summary>\n            <remarks>\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"AppendVersion"}},{"Kind":"ITagHelper","Name":"asp-fallback-href-include","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to fallback to in the case the primary\n            one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackHrefInclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-href-exclude","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from the fallback list, in\n            the case the primary one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackHrefExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-test-class","TypeName":"System.String","Documentation":"\n            <summary>\n            The class name defined in the stylesheet to use for the fallback test.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackTestClass"}},{"Kind":"ITagHelper","Name":"asp-fallback-test-property","TypeName":"System.String","Documentation":"\n            <summary>\n            The CSS property name to use for the fallback test.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackTestProperty"}},{"Kind":"ITagHelper","Name":"asp-fallback-test-value","TypeName":"System.String","Documentation":"\n            <summary>\n            The CSS property value to use for the fallback test.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" />,\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackTestValue"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Common.TypeNameIdentifier":"LinkTagHelper"}},{"HashCode":1192023020,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;option&gt; elements.\n            </summary>\n            <remarks>\n            This <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> works in conjunction with <see cref=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper\" />. It reads elements\n            content but does not modify that content. The only modification it makes is to add a <c>selected</c> attribute\n            in some cases.\n            </remarks>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"option"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"value","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies a value for the &lt;option&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Common.TypeNameIdentifier":"OptionTagHelper"}},{"HashCode":327896149,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            Renders a partial view.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"partial","TagStructure":2,"Attributes":[{"Name":"name"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"\n            <summary>\n            The name or path of the partial view that is rendered to the response.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"ITagHelper","Name":"for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"\n            <summary>\n            An expression to be evaluated against the current model. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Model\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"model","TypeName":"System.Object","Documentation":"\n            <summary>\n            The model to pass into the partial view. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.For\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"ITagHelper","Name":"optional","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When optional, executing the tag helper will no-op if the view cannot be located.\n            Otherwise will throw stating the view could not be found.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Optional"}},{"Kind":"ITagHelper","Name":"fallback-name","TypeName":"System.String","Documentation":"\n            <summary>\n            View to lookup if the view specified by <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Name\" /> cannot be located.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackName"}},{"Kind":"ITagHelper","Name":"view-data","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary","IndexerNamePrefix":"view-data-","IndexerTypeName":"System.Object","Documentation":"\n            <summary>\n            A <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary\" /> to pass into the partial view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ViewData"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Common.TypeNameIdentifier":"PartialTagHelper"}},{"HashCode":676814577,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            A <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> that saves the state of Razor components rendered on the page up to that point.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"persist-component-state","TagStructure":2}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"persist-mode","TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.PersistenceMode?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper.PersistenceMode\" /> for the state to persist.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PersistenceMode"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Common.TypeNameIdentifier":"PersistComponentStateTagHelper"}},{"HashCode":962839027,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;script&gt; elements that supports fallback src paths.\n            </summary>\n            <remarks>\n            The tag helper won't process for cases with just the 'src' attribute.\n            </remarks>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"script","Attributes":[{"Name":"asp-src-include"}]},{"TagName":"script","Attributes":[{"Name":"asp-src-exclude"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-src"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-src-include"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-src-exclude"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-test"}]},{"TagName":"script","Attributes":[{"Name":"asp-append-version"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"src","TypeName":"System.String","Documentation":"\n            <summary>\n            Address of the external script to use.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Src"}},{"Kind":"ITagHelper","Name":"asp-src-include","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to load.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SrcInclude"}},{"Kind":"ITagHelper","Name":"asp-src-exclude","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from loading.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SrcExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-src","TypeName":"System.String","Documentation":"\n            <summary>\n            The URL of a Script tag to fallback to in the case the primary one fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackSrc"}},{"Kind":"ITagHelper","Name":"asp-suppress-fallback-integrity","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrc\" /> value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SuppressFallbackIntegrity"}},{"Kind":"ITagHelper","Name":"asp-append-version","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Value indicating if file version should be appended to src urls.\n            </summary>\n            <remarks>\n            A query string \"v\" with the encoded content of the file is added.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"AppendVersion"}},{"Kind":"ITagHelper","Name":"asp-fallback-src-include","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to fallback to in the case the\n            primary one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackSrcInclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-src-exclude","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from the fallback list, in\n            the case the primary one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackSrcExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-test","TypeName":"System.String","Documentation":"\n            <summary>\n            The script method defined in the primary script to use for the fallback test.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackTestExpression"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Common.TypeNameIdentifier":"ScriptTagHelper"}},{"HashCode":-1304496591,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;select&gt; elements with <c>asp-for</c> and/or\n            <c>asp-items</c> attribute(s).\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"select","Attributes":[{"Name":"asp-for"}]},{"TagName":"select","Attributes":[{"Name":"asp-items"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"asp-items","TypeName":"System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>","Documentation":"\n            <summary>\n            A collection of <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" /> objects used to populate the &lt;select&gt; element with\n            &lt;optgroup&gt; and &lt;option&gt; elements.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items"}},{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.For\" /> is\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Name"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Common.TypeNameIdentifier":"SelectTagHelper"}},{"HashCode":-1556932047,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;textarea&gt; elements with an <c>asp-for</c> attribute.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"textarea","Attributes":[{"Name":"asp-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.For\" /> is\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Name"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Common.TypeNameIdentifier":"TextAreaTagHelper"}},{"HashCode":-1067790191,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-for</c>\n            attribute.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"span","Attributes":[{"Name":"asp-validation-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-validation-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"\n            <summary>\n            Gets an expression to be evaluated against the current model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Common.TypeNameIdentifier":"ValidationMessageTagHelper"}},{"HashCode":-1744300995,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-summary</c>\n            attribute.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"div","Attributes":[{"Name":"asp-validation-summary"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-validation-summary","TypeName":"Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary","IsEnum":true,"Documentation":"\n            <summary>\n            If <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.All\" /> or <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.ModelOnly\" />, appends a validation\n            summary. Otherwise (<see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.None\" />, the default), this tag helper does nothing.\n            </summary>\n            <exception cref=\"T:System.ArgumentException\">\n            Thrown if setter is called with an undefined <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper.ValidationSummary\" /> value e.g.\n            <c>(ValidationSummary)23</c>.\n            </exception>\n        ","Metadata":{"Common.PropertyName":"ValidationSummary"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Common.TypeNameIdentifier":"ValidationSummaryTagHelper"}},{"HashCode":-1460206721,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.Razor","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting elements containing attributes with URL expected values.\n            </summary>\n            <remarks>Resolves URLs starting with '~/' (relative to the application's 'webroot' setting) that are not\n            targeted by other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s. Runs prior to other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s to ensure\n            application-relative URLs are resolved.</remarks>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"itemid","Value":"~/","ValueComparison":2}]},{"TagName":"a","Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"applet","Attributes":[{"Name":"archive","Value":"~/","ValueComparison":2}]},{"TagName":"area","TagStructure":2,"Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"audio","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"base","TagStructure":2,"Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"blockquote","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"button","Attributes":[{"Name":"formaction","Value":"~/","ValueComparison":2}]},{"TagName":"del","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"embed","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"form","Attributes":[{"Name":"action","Value":"~/","ValueComparison":2}]},{"TagName":"html","Attributes":[{"Name":"manifest","Value":"~/","ValueComparison":2}]},{"TagName":"iframe","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"img","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"img","TagStructure":2,"Attributes":[{"Name":"srcset","Value":"~/","ValueComparison":2}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"formaction","Value":"~/","ValueComparison":2}]},{"TagName":"ins","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"menuitem","Attributes":[{"Name":"icon","Value":"~/","ValueComparison":2}]},{"TagName":"object","Attributes":[{"Name":"archive","Value":"~/","ValueComparison":2}]},{"TagName":"object","Attributes":[{"Name":"data","Value":"~/","ValueComparison":2}]},{"TagName":"q","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"script","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"source","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"source","TagStructure":2,"Attributes":[{"Name":"srcset","Value":"~/","ValueComparison":2}]},{"TagName":"track","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"video","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"video","Attributes":[{"Name":"poster","Value":"~/","ValueComparison":2}]}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper","Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.Razor.TagHelpers","Common.TypeNameIdentifier":"UrlResolutionTagHelper"}},{"HashCode":-1487122310,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@bind-","NameComparison":1,"Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-...","TypeName":"System.Collections.Generic.Dictionary<string, object>","IndexerNamePrefix":"@bind-","IndexerTypeName":"System.Object","Documentation":"Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the corresponding bind attribute. For example: <code>@bind-value:format=\"...\"</code> will apply a format string to the value specified in <code>@bind-value=\"...\"</code>. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-...' attribute.","Metadata":{"Common.PropertyName":"Event"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.Fallback":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Bind","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Common.TypeNameIdentifier":"Bind"}},{"HashCode":1147187751,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":559463477,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":1622794753,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"checkbox","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"checkbox","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_checked"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_checked"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-checked","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_checked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"checked","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Components.Bind.TypeAttribute":"checkbox","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-652071802,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"text","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"text","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Components.Bind.TypeAttribute":"text","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":261116556,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":null,"Components.Bind.TypeAttribute":"number","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":499151024,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":null,"Components.Bind.TypeAttribute":"number","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-883651903,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM-dd","Components.Bind.TypeAttribute":"date","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-2097379632,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM-dd","Components.Bind.TypeAttribute":"date","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":1007845740,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM-ddTHH:mm:ss","Components.Bind.TypeAttribute":"datetime-local","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-625138988,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM-ddTHH:mm:ss","Components.Bind.TypeAttribute":"datetime-local","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":806266141,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM","Components.Bind.TypeAttribute":"month","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":1357195673,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM","Components.Bind.TypeAttribute":"month","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-452568861,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"HH:mm:ss","Components.Bind.TypeAttribute":"time","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":1131320995,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"HH:mm:ss","Components.Bind.TypeAttribute":"time","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":1024954613,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"select","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"select","Attributes":[{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":1162736253,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"textarea","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"textarea","Attributes":[{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-535491811,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputCheckbox","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputCheckbox"}},{"HashCode":1884683335,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputCheckbox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1413158779,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputDate","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputDate"}},{"HashCode":-434904083,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputDate","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1343397716,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputNumber","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputNumber"}},{"HashCode":1598337077,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputNumber","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-965874919,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadioGroup","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputRadioGroup","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputRadioGroup"}},{"HashCode":-799976979,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputRadioGroup","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1432855956,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputSelect"}},{"HashCode":-1373758094,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputSelect","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-369432729,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputText","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputText"}},{"HashCode":-1713884350,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputText","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":949592492,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputTextArea","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputTextArea"}},{"HashCode":-1089685072,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Common.TypeNameIdentifier":"InputTextArea","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2106128596,"Kind":"Components.Bind","Name":"BlazorBootstrap.AutoComplete<TItem>","AssemblyName":"BlazorBootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AutoComplete","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"AutoComplete","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"BlazorBootstrap.AutoComplete<TItem>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"AutoComplete"}},{"HashCode":1539532097,"Kind":"Components.Bind","Name":"BlazorBootstrap.AutoComplete<TItem>","AssemblyName":"BlazorBootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.AutoComplete","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BlazorBootstrap.AutoComplete","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"BlazorBootstrap.AutoComplete<TItem>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"AutoComplete","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1035429952,"Kind":"Components.Bind","Name":"BlazorBootstrap.CurrencyInput<TValue>","AssemblyName":"BlazorBootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CurrencyInput","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"CurrencyInput","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"BlazorBootstrap.CurrencyInput<TValue>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CurrencyInput"}},{"HashCode":-2100023639,"Kind":"Components.Bind","Name":"BlazorBootstrap.CurrencyInput<TValue>","AssemblyName":"BlazorBootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.CurrencyInput","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BlazorBootstrap.CurrencyInput","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"BlazorBootstrap.CurrencyInput<TValue>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"CurrencyInput","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1162259997,"Kind":"Components.Bind","Name":"BlazorBootstrap.DateInput<TValue>","AssemblyName":"BlazorBootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DateInput","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"DateInput","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"BlazorBootstrap.DateInput<TValue>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DateInput"}},{"HashCode":1343755255,"Kind":"Components.Bind","Name":"BlazorBootstrap.DateInput<TValue>","AssemblyName":"BlazorBootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.DateInput","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BlazorBootstrap.DateInput","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"BlazorBootstrap.DateInput<TValue>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"DateInput","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1368020375,"Kind":"Components.Bind","Name":"BlazorBootstrap.NumberInput<TValue>","AssemblyName":"BlazorBootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NumberInput","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"NumberInput","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"BlazorBootstrap.NumberInput<TValue>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"NumberInput"}},{"HashCode":1194330094,"Kind":"Components.Bind","Name":"BlazorBootstrap.NumberInput<TValue>","AssemblyName":"BlazorBootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.NumberInput","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BlazorBootstrap.NumberInput","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"BlazorBootstrap.NumberInput<TValue>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"NumberInput","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":853147568,"Kind":"Components.Bind","Name":"BlazorBootstrap.Switch","AssemblyName":"BlazorBootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Switch","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Switch","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"BlazorBootstrap.Switch","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Switch"}},{"HashCode":-1283475420,"Kind":"Components.Bind","Name":"BlazorBootstrap.Switch","AssemblyName":"BlazorBootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.Switch","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BlazorBootstrap.Switch","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"BlazorBootstrap.Switch","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"Switch","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1100387803,"Kind":"Components.Bind","Name":"BlazorBootstrap.TimeInput<TValue>","AssemblyName":"BlazorBootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TimeInput","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"TimeInput","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"BlazorBootstrap.TimeInput<TValue>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"TimeInput"}},{"HashCode":-295515076,"Kind":"Components.Bind","Name":"BlazorBootstrap.TimeInput<TValue>","AssemblyName":"BlazorBootstrap","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorBootstrap.TimeInput","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"BlazorBootstrap.TimeInput","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"BlazorBootstrap.TimeInput<TValue>","Common.TypeNamespace":"BlazorBootstrap","Common.TypeNameIdentifier":"TimeInput","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":957713645,"Kind":"Components.Ref","Name":"Ref","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Populates the specified field or property with a reference to the element or component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ref","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Ref","Name":"@ref","TypeName":"System.Object","Documentation":"Populates the specified field or property with a reference to the element or component.","Metadata":{"Common.PropertyName":"Ref","Common.DirectiveAttribute":"True"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Ref","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Ref"}},{"HashCode":-1148481321,"Kind":"Components.Key","Name":"Key","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@key","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Key","Name":"@key","TypeName":"System.Object","Documentation":"Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.","Metadata":{"Common.PropertyName":"Key","Common.DirectiveAttribute":"True"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Key","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Key"}}],"CSharpLanguageVersion":1100},"RootNamespace":"EmployeeInfo","Documents":[{"FilePath":"C:\\Users\\hari.b\\source\\repos\\EmployeeInfo\\EmployeeInfo\\Pages\\AddEmployeeForm.razor","TargetPath":"Pages\\AddEmployeeForm.razor","FileKind":"component"},{"FilePath":"C:\\Users\\hari.b\\source\\repos\\EmployeeInfo\\EmployeeInfo\\Shared\\SurveyPrompt.razor","TargetPath":"Shared\\SurveyPrompt.razor","FileKind":"component"},{"FilePath":"C:\\Users\\hari.b\\source\\repos\\EmployeeInfo\\EmployeeInfo\\_Imports.razor","TargetPath":"_Imports.razor","FileKind":"componentImport"},{"FilePath":"C:\\Users\\hari.b\\source\\repos\\EmployeeInfo\\EmployeeInfo\\Pages\\FetchData.razor","TargetPath":"Pages\\FetchData.razor","FileKind":"component"},{"FilePath":"C:\\Users\\hari.b\\source\\repos\\EmployeeInfo\\EmployeeInfo\\Pages\\Error.cshtml","TargetPath":"Pages\\Error.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\hari.b\\source\\repos\\EmployeeInfo\\EmployeeInfo\\Pages\\Index.razor","TargetPath":"Pages\\Index.razor","FileKind":"component"},{"FilePath":"C:\\Users\\hari.b\\source\\repos\\EmployeeInfo\\EmployeeInfo\\App.razor","TargetPath":"App.razor","FileKind":"component"},{"FilePath":"C:\\Users\\hari.b\\source\\repos\\EmployeeInfo\\EmployeeInfo\\Shared\\NavMenu.razor","TargetPath":"Shared\\NavMenu.razor","FileKind":"component"},{"FilePath":"C:\\Users\\hari.b\\source\\repos\\EmployeeInfo\\EmployeeInfo\\Pages\\Counter.razor","TargetPath":"Pages\\Counter.razor","FileKind":"component"},{"FilePath":"C:\\Users\\hari.b\\source\\repos\\EmployeeInfo\\EmployeeInfo\\Pages\\_Host.cshtml","TargetPath":"Pages\\_Host.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\hari.b\\source\\repos\\EmployeeInfo\\EmployeeInfo\\Shared\\MainLayout.razor","TargetPath":"Shared\\MainLayout.razor","FileKind":"component"},{"FilePath":"C:\\Users\\hari.b\\source\\repos\\EmployeeInfo\\EmployeeInfo\\Pages\\EmployeeDetails.razor","TargetPath":"Pages\\EmployeeDetails.razor","FileKind":"component"}],"SerializationFormat":"0.3"}